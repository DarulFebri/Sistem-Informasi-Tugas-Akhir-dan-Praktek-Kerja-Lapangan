app/Http/Controllers{
    // FILE: app/Http/Controllers/AdminController.php
    <?php
    
    namespace App\Http\Controllers;
    
    use App\Models\Mahasiswa;
    use App\Models\Dosen;
    use App\Models\Pengajuan;
    use App\Models\Sidang; // Tambahkan ini
    use App\Models\Dokumen;
    use App\Models\User; //
    use Illuminate\Http\Request;
    use Illuminate\Support\Facades\Storage;
    use Maatwebsite\Excel\Facades\Excel;
    use App\Imports\DosenImport;
    use App\Imports\MahasiswaImport; // Tambahkan ini
    use App\Exports\MahasiswaExport; // Tambahkan ini
    use App\Exports\DosenExport; // Tambahkan ini
    use App\Exports\SidangExport; // Tambahkan ini
    use Carbon\Carbon; // Tambahkan ini
    use Illuminate\Support\Facades\Validator;
    use Illuminate\Support\Facades\Auth;
    use Illuminate\Support\Facades\Hash; 
    
    class AdminController extends Controller
    {
        public function loginForm()
        {
            return view('admin.login');
        }
    
        public function login(Request $request)
        {
            $request->validate([
                'email' => 'required|email',
                'password' => 'required',
            ]);
    
            $credentials = $request->only('email', 'password');
            $credentials['role'] = 'admin'; // Tambahkan role ke credentials
    
            if (Auth::attempt($credentials)) {
                $request->session()->regenerate();
    
                return redirect()->intended(route('admin.dashboard'));
            }
    
            return back()->withErrors([
                'email' => 'Email atau password salah.',
            ]);
        }
    
        public function dashboard()
        {
            return view('admin.dashboard');
        }
    
        public function logout(Request $request)
        {
            Auth::logout();
    
            $request->session()->invalidate();
    
            $request->session()->regenerateToken();
    
            return redirect('/'); // Redirect ke halaman utama atau halaman lain setelah logout
        }
    
        // Dibawah ini untuk CRUD mahasiswa
        public function daftarMahasiswa(Request $request){
            $mahasiswas = Mahasiswa::query(); // Start with a query builder
    
            // Sorting
            if ($request->has('sort_by') && $request->has('sort_order')) {
                $sortBy = $request->input('sort_by');
                $sortOrder = $request->input('sort_order');
    
                if (in_array($sortBy, ['kelas', 'jenis_kelamin'])) {
                    $mahasiswas->orderBy($sortBy, $sortOrder);
                }
            }
    
            $mahasiswas = $mahasiswas->get(); // Get the results
    
            return view('admin.mahasiswa.index', compact('mahasiswas'));
        }
    
        public function detailMahasiswa(Mahasiswa $mahasiswa)
        {
            return view('admin.mahasiswa.show', compact('mahasiswa'));
        }
    
        public function createMahasiswa()
        {
            return view('admin.mahasiswa.create');
        }
    
        /*public function storeMahasiswa(Request $request)
        {
            $request->validate([
                'nim' => 'required|unique:mahasiswas',
                'nama_lengkap' => 'required',
                'jurusan' => 'required',
                'prodi' => 'required',
                'jenis_kelamin' => 'required',
                'kelas' => 'required',
            ]);
    
            Mahasiswa::create($request->all());
    
            logActivity('Membuat mahasiswa baru: ' . $request->nama_lengkap, 'Mahasiswa');
    
            return redirect()->route('admin.mahasiswa.index')->with('success', 'Mahasiswa berhasil ditambahkan.');
        }>*/
    
        public function storeMahasiswa(Request $request)
        {
            // Pastikan Anda memiliki Validator facade di-import: use Illuminate\Support\Facades\Validator;
            $validator = Validator::make($request->all(), [
                'nim' => 'required|unique:mahasiswas',
                'nama_lengkap' => 'required',
                'jurusan' => 'required',
                'prodi' => 'required',
                'jenis_kelamin' => 'required',
                'kelas' => 'required',
                'email' => 'required|email|unique:users', // Validasi email untuk user
                'password' => 'required|min:8', // Validasi password untuk user
            ]);
    
            if ($validator->fails()) {
                return back()->withErrors($validator)->withInput();
            }
    
            // Buat user baru terlebih dahulu
            $user = User::create([
                'name' => $request->nama_lengkap, // Gunakan nama lengkap mahasiswa sebagai nama user
                'email' => $request->email,
                'password' => Hash::make($request->password),
                'role' => 'mahasiswa', // Tetapkan role 'mahasiswa'
            ]);
    
            // Buat data mahasiswa dan kaitkan dengan user_id yang baru dibuat
            Mahasiswa::create([
                'user_id' => $user->id, // Penting: kaitkan dengan ID user yang baru dibuat
                'nim' => $request->nim,
                'nama_lengkap' => $request->nama_lengkap,
                'jurusan' => $request->jurusan,
                'prodi' => $request->prodi,
                'jenis_kelamin' => $request->jenis_kelamin,
                'kelas' => $request->kelas,
            ]);
    
            logActivity('Membuat mahasiswa baru: ' . $request->nama_lengkap, 'Mahasiswa');
    
            return redirect()->route('admin.mahasiswa.index')->with('success', 'Mahasiswa berhasil ditambahkan!');
        }
    
        public function editMahasiswa(Mahasiswa $mahasiswa)
        {
            return view('admin.mahasiswa.edit', compact('mahasiswa'));
        }
    
        public function updateMahasiswa(Request $request, Mahasiswa $mahasiswa)
        {
            $request->validate([
                'nim' => 'required|unique:mahasiswas,nim,' . $mahasiswa->id,
                'nama_lengkap' => 'required',
                'jurusan' => 'required',
                'prodi' => 'required',
                'jenis_kelamin' => 'required',
                'kelas' => 'required',
            ]);
    
            $mahasiswa->update($request->all());
    
            logActivity('Mengupdate mahasiswa: ' . $mahasiswa->nama_lengkap, 'Mahasiswa');
    
            return redirect()->route('admin.mahasiswa.index')->with('success', 'Mahasiswa berhasil diupdate.');
        }
    
        public function destroyMahasiswa(Mahasiswa $mahasiswa)
        {
            $mahasiswa->delete();
    
            logActivity('Menghapus mahasiswa: ' . $mahasiswa->nama_lengkap, 'Mahasiswa');
    
            return redirect()->route('admin.mahasiswa.index')->with('success', 'Mahasiswa berhasil dihapus.');
        }
    
        // Dibawah ini untuk dosen Methods
        public function daftarDosen()
        {
            $dosens = Dosen::all();
            return view('admin.dosen.index', compact('dosens'));
        }
    
        public function detailDosen(Dosen $dosen)
        {
            return view('admin.dosen.show', compact('dosen'));
        }
    
        public function createDosen()
        {
            return view('admin.dosen.create');
        }
    
        public function storeDosen(Request $request)
        {
            $validator = Validator::make($request->all(), [
                'nidn' => 'required|unique:dosens',
                'nama' => 'required',
                'jurusan' => 'required',
                'prodi' => 'required',
                'email' => 'required|email|unique:users',
                'password' => 'required|min:8',
            ]);
    
            if ($validator->fails()) {
                return back()->withErrors($validator)->withInput();
            }
    
            $user = User::create([
                'name' => $request->nama,
                'email' => $request->email,
                'password' => Hash::make($request->password),
                'role' => 'dosen',
            ]);
    
            Dosen::create([
                'user_id' => $user->id,
                'nidn' => $request->nidn,
                'nama' => $request->nama,
                'jurusan' => $request->jurusan,
                'prodi' => $request->prodi,
                'jenis_kelamin' => $request->jenis_kelamin,
                'password' => $request->password,
    
            ]);
    
            // logActivity('Membuat dosen baru: ' . $request->nama, 'Dosen'); // Jika Anda menggunakan logActivity
            return redirect()->route('admin.dosen.index')->with('success', 'Dosen berhasil ditambahkan!');
        }
    
        public function editDosen(Dosen $dosen)
        {
            return view('admin.dosen.edit', compact('dosen'));
        }
    
        public function updateDosen(Request $request, Dosen $dosen)
        {
            $request->validate([
                'nidn' => 'required|unique:dosens,nidn,' . $dosen->id,
                'nama_lengkap' => 'required',
                'jenis_kelamin' => 'required',
            ]);
    
            $dosen->update($request->all());
    
            return redirect()->route('admin.dosen.index')->with('success', 'Dosen berhasil diupdate.');
        }
    
        public function destroyDosen(Dosen $dosen)
        {
            $dosen->delete();
    
            return redirect()->route('admin.dosen.index')->with('success', 'Dosen berhasil dihapus.');
        }
    
        public function importDosenForm()
        {
            return view('admin.dosen.import');
        }
    
        public function importDosen(Request $request)
        {
            $request->validate([
                'file' => 'required|mimes:xlsx,xls',
            ]);
    
            Excel::import(new DosenImport, $request->file('file'));
    
            return redirect()->route('admin.dosen.index')->with('success', 'Data dosen berhasil diimport.');
        }
    
        // Dibawah ini Pengajuan Sidang Methods
        public function daftarPengajuan()
        {
            //$pengajuans = Pengajuan::with('mahasiswa')->get(); // Eager load data mahasiswa
            $pengajuans = Pengajuan::with('mahasiswa') // Eager load relasi mahasiswa jika digunakan di view
                ->orderBy('created_at', 'desc') // Urutkan berdasarkan tanggal terbaru
                ->paginate(10); // Ambil 10 pengajuan per halaman. Sesuaikan jumlah ini.
    
            return view('admin.pengajuan.index', compact('pengajuans'));
        }
    
        public function detailPengajuan(Pengajuan $pengajuan)
        {
            $dokumens = Dokumen::where('pengajuan_id', $pengajuan->id)->get(); // Ambil dokumen terkait pengajuan
            return view('admin.pengajuan.show', compact('pengajuan', 'dokumens'));
        }
    
        public function setujuiPengajuan(Pengajuan $pengajuan)
        {
            $pengajuan->update(['status' => 'disetujui']);
            return redirect()->route('admin.pengajuan.index')->with('success', 'Pengajuan berhasil disetujui.');
        }
    
        public function tolakPengajuan(Pengajuan $pengajuan)
        {
            $pengajuan->update(['status' => 'ditolak']);
            return redirect()->route('admin.pengajuan.index')->with('success', 'Pengajuan berhasil ditolak.');
        }
    
        // Dibawah ini Persidangan Methods
        public function daftarSidang()
        {
            $sidangs = Sidang::with('pengajuan.mahasiswa')->get(); // Eager load data
            return view('admin.sidang.index', compact('sidangs'));
        }
    
        public function kalenderSidang()
        {
            $sidangs = Sidang::with('pengajuan.mahasiswa')->get();
            $events = [];
    
            foreach ($sidangs as $sidang) {
                if ($sidang->tanggal_sidang) {
                    $events[] = [
                        'title' => 'Sidang ' . $sidang->pengajuan->mahasiswa->nama_lengkap,
                        'start' => $sidang->tanggal_sidang,
                        // Tambahkan data lain yang ingin ditampilkan di kalender
                    ];
                }
            }
    
            return view('admin.sidang.kalender', compact('events'));
        }
    
        public function detailSidang(Sidang $sidang)
        {
            return view('admin.sidang.show', compact('sidang'));
        }
    
        // Method untuk menampilkan nilai dan hasil (jika diperlukan terpisah)
        // public function nilaiSidang(Sidang $sidang) { ... }
        // public function hasilSidang(Sidang $sidang) { ... }
    
        // Dibawah ini import mahasiswa method
        public function importMahasiswaForm()
        {
            return view('admin.mahasiswa.import');
        }
    
        public function importMahasiswa(Request $request)
        {
            $request->validate([
                'file' => 'required|mimes:xlsx,xls',
            ]);
    
            Excel::import(new MahasiswaImport, $request->file('file'));
    
            return redirect()->route('admin.mahasiswa.index')->with('success', 'Data mahasiswa berhasil diimport.');
        }
    
        // Dibawah ini export (mahasiswa, Dosen, Sidang) method
        public function exportMahasiswa()
        {
            return Excel::download(new MahasiswasExport, 'data_mahasiswa.xlsx');
        }
    
        public function exportDosen()
        {
            return Excel::download(new DosensExport, 'data_dosen.xlsx');
        }
    
        public function exportSidang()
        {
            return Excel::download(new SidangsExport, 'data_persidangan.xlsx');
        }
    
        // Dibawah ini Untuk Log aktivitas
        public function showActivities()
        {
            $activities = Activity::with('user')->latest()->paginate(10); // Ambil log, urutkan terbaru, paginasi
            return view('admin.activities.index', compact('activities'));
        }
    }
    ----------------------------------------------
    // FILE: app/Http/Controllers/AuthController.php
    <?php
    
    namespace App\Http\Controllers;
    
    use App\Models\Mahasiswa;
    use App\Models\User;
    use Illuminate\Http\Request;
    use Illuminate\Support\Facades\Auth;
    use Illuminate\Support\Facades\Hash;
    use Illuminate\Support\Facades\Validator;
    
    class AuthController extends Controller
    {
        public function showRegistrationFormMahasiswa()
        {
            return view('auth.register-mahasiswa');
        }
    
        public function registerMahasiswa(Request $request)
        {
            $validator = Validator::make($request->all(), [
                'nim' => 'required|unique:mahasiswas',
                'nama_lengkap' => 'required',
                'jurusan' => 'required',
                'prodi' => 'required',
                'jenis_kelamin' => 'required',
                'kelas' => 'required',
                'email' => 'required|email|unique:users',
                'password' => 'required|min:8|confirmed',
            ]);
    
            if ($validator->fails()) {
                return back()->withErrors($validator)->withInput();
            }
    
            $user = User::create([
                'email' => $request->email,
                'password' => Hash::make($request->password),
                'role' => 'mahasiswa',
            ]);
    
            Mahasiswa::create([
                'user_id' => $user->id,
                'nim' => $request->nim,
                'nama_lengkap' => $request->nama_lengkap,
                'jurusan' => $request->jurusan,
                'prodi' => $request->prodi,
                'jenis_kelamin' => $request->jenis_kelamin,
                'kelas' => $request->kelas,
            ]);
    
            Auth::login($user);
    
            return redirect('/mahasiswa/dashboard');
        }
    
        public function login(Request $request)
        {
            $credentials = $request->validate([
                'email' => ['required', 'email'],
                'password' => 'required',
            ]);
    
            if (Auth::attempt($credentials)) {
                $request->session()->regenerate();
    
                $user = Auth::user();
    
                if ($user->role == 'admin') {
                    return redirect()->intended('/admin/dashboard');
                } elseif ($user->role == 'dosen') {
                    return redirect()->intended('/dosen/dashboard');
                } elseif ($user->role == 'mahasiswa') {
                    return redirect()->intended('/mahasiswa/dashboard');
                }
    
                return redirect()->intended('/dashboard'); // Default redirect
            }
    
            return back()->withErrors([
                'email' => 'Email atau password salah.',
            ])->onlyInput('email');
        }
    
        public function showLoginForm()
        {
            return view('auth.login'); // Pastikan view ini ada
        }
    
        public function logout(Request $request)
        {
            Auth::logout();
    
            $request->session()->invalidate();
    
            $request->session()->regenerateToken();
    
            return redirect('/');
        }
    }
    ----------------------------------------------
    // FILE: app/Http/Controllers/Controller.php
    <?php
    
    namespace App\Http\Controllers;
    
    abstract class Controller
    {
        //
    }
    ----------------------------------------------
    // FILE: app/Http/Controllers/DokumenController.php
    <?php
    
    namespace App\Http\Controllers;
    
    use App\Models\Pengajuan;
    use App\Models\Dokumen;
    use Illuminate\Http\Request;
    use Illuminate\Support\Facades\Auth;
    use Illuminate\Support\Facades\Storage;
    use Illuminate\Support\Facades\Validator;
    use App\Models\Mahasiswa; // Tambahkan ini
    
    class DokumenController extends Controller
    {
        // Helper untuk mendapatkan objek Mahasiswa dari user yang login
        private function getLoggedInMahasiswa()
        {
            return Mahasiswa::where('user_id', Auth::id())->firstOrFail();
        }
    
        public function index(Pengajuan $pengajuan)
        {
            if (!Auth::check() || Auth::user()->role !== 'mahasiswa') {
                return redirect()->route('mahasiswa.login')->with('error', 'Silakan login terlebih dahulu.');
            }
    
            $mahasiswa = $this->getLoggedInMahasiswa();
    
            // Pastikan mahasiswa yang melihat adalah pemilik pengajuan
            if ($mahasiswa->id != $pengajuan->mahasiswa_id) {
                abort(403, 'Anda tidak diizinkan mengakses dokumen ini.');
            }
    
            $dokumenTerupload = Dokumen::where('pengajuan_id', $pengajuan->id)->get();
    
            return view('mahasiswa.dokumen.index', compact('pengajuan', 'dokumenTerupload'));
        }
    
        // Metode store dan update di DokumenController dapat dihapus atau disesuaikan
        // jika Anda ingin memungkinkan update/hapus dokumen individual secara terpisah dari pengajuan.
        // Namun, untuk alur pengajuan dokumen persyaratan, PengajuanController sudah cukup.
    
        // Contoh: Jika Anda ingin mahasiswa bisa menghapus dokumen satu per satu
        public function destroy(Dokumen $dokumen)
        {
            if (!Auth::check() || Auth::user()->role !== 'mahasiswa') {
                return redirect()->route('mahasiswa.login')->with('error', 'Silakan login terlebih dahulu.');
            }
    
            $mahasiswa = $this->getLoggedInMahasiswa();
    
            // Pastikan dokumen milik mahasiswa yang login dan pengajuan masih dalam status draft/ditolak
            if ($dokumen->pengajuan->mahasiswa_id !== $mahasiswa->id ||
                !in_array($dokumen->pengajuan->status, ['draft', 'ditolak_admin', 'ditolak_kaprodi'])) {
                abort(403, 'Anda tidak diizinkan menghapus dokumen ini.');
            }
    
            Storage::disk('public')->delete($dokumen->path_file);
            $dokumen->delete();
    
            return back()->with('success', 'Dokumen berhasil dihapus.');
        }
    }
    ----------------------------------------------
    // FILE: app/Http/Controllers/DosenController.php
    <?php
    
    namespace App\Http\Controllers;
    
    use Illuminate\Http\Request;
    use App\Models\Dosen;
    use App\Models\Pengajuan; 
    use App\Models\Sidang; // Pastikan model Sidang di-import
    use App\Models\Dokumen; // Jika Anda perlu berinteraksi dengan dokumen
    use Illuminate\Support\Facades\Auth; // Untuk mendapatkan user yang sedang login
    use Illuminate\Support\Facades\Validator; // Untuk validasi
    use Illuminate\Support\Facades\Storage; // Untuk file storage
    use Maatwebsite\Excel\Facades\Excel; // Pastikan ini di-import jika Anda menggunakan Excel Import
    use App\Imports\DosenImport; // Pastikan ini di-import jika Anda menggunakan DosenImport
    
    // Pastikan Anda mengimpor Mail jika digunakan untuk notifikasi email
    // use Illuminate\Support\Facades\Mail;
    // use App\Mail\JadwalSidangNotification; // Import mail class Anda
    
    class DosenController extends Controller
    {
        public function loginForm()
        {
            return view('dosen.login');
        }
    
        public function login(Request $request)
        {
            $request->validate([
                'email' => 'required|email',
                'password' => 'required',
            ]);
    
            $credentials = $request->only('email', 'password');
            $credentials['role'] = 'dosen'; // Tambahkan role ke credentials
    
            if (Auth::attempt($credentials)) {
                $request->session()->regenerate();
    
                return redirect()->intended(route('dosen.dashboard'));
            }
    
            return back()->withErrors([
                'email' => 'Email atau password salah.',
            ]);
        }
    
        public function dashboard()
        {
            $user = Auth::user();
            // Memastikan user yang login memiliki relasi ke model Dosen
            $dosen = $user->dosen;
    
            // Jika tidak ada objek Dosen terkait, handle error atau redirect
            if (!$dosen) {
                Auth::logout();
                return redirect()->route('dosen.login')->with('error', 'Profil dosen tidak ditemukan.');
            }
    
            // Ambil notifikasi yang belum dibaca untuk user ini
            $unreadNotifications = $user->unreadNotifications;
    
            // Ambil sidang di mana dosen ini terlibat dan statusnya masih 'dosen_ditunjuk'
            // (menunggu persetujuan dosen)
            $sidangInvitations = Sidang::where(function($query) use ($dosen) {
                                    $query->where('ketua_sidang_dosen_id', $dosen->id)
                                          ->where('persetujuan_ketua_sidang', 'pending');
                                })->orWhere(function($query) use ($dosen) {
                                    $query->where('sekretaris_sidang_dosen_id', $dosen->id)
                                          ->where('persetujuan_sekretaris_sidang', 'pending');
                                })->orWhere(function($query) use ($dosen) {
                                    $query->where('anggota1_sidang_dosen_id', $dosen->id)
                                          ->where('persetujuan_anggota1_sidang', 'pending');
                                })->orWhere(function($query) use ($dosen) {
                                    $query->where('anggota2_sidang_dosen_id', $dosen->id)
                                          ->where('persetujuan_anggota2_sidang', 'pending');
                                })->orWhere(function($query) use ($dosen) {
                                    $query->where('dosen_pembimbing_id', $dosen->id)
                                          ->where('persetujuan_dosen_pembimbing', 'pending');
                                })->orWhere(function($query) use ($dosen) {
                                    $query->where('dosen_penguji1_id', $dosen->id) // Ini adalah pembimbing 2
                                          ->where('persetujuan_dosen_penguji1', 'pending');
                                })
                                ->with([
                                    'pengajuan.mahasiswa',
                                    'ketuaSidang', // Load ini
                                    'sekretarisSidang', // Load ini
                                    'anggota1Sidang', // Load ini
                                    'anggota2Sidang', // Load ini
                                    'dosenPembimbing', // Load ini
                                    'dosenPenguji1' // Load ini (jika digunakan sebagai pembimbing 2)
                                ]) // Load relasi yang diperlukan
                                ->get();
    
    
            return view('dosen.dashboard', compact('unreadNotifications', 'sidangInvitations'));
        }
    
        public function logout(Request $request)
        {
            Auth::logout();
    
            $request->session()->invalidate();
    
            $request->session()->regenerateToken();
    
            return redirect('/'); // Redirect ke halaman utama atau halaman lain setelah logout
        }
    
        // Dibawah ini Pengajuan Sidang Methods
        public function daftarPengajuan()
        {
            // Method ini sepertinya untuk melihat SEMUA pengajuan, bukan yang melibatkan dosen
            // Jika tujuannya untuk semua, pastikan eager loading relasi sidang dan dosen di dalamnya
            $pengajuans = Pengajuan::with([
                'mahasiswa',
                'sidang.sekretarisSidang',
                'sidang.anggota1Sidang',
                'sidang.anggota2Sidang'
            ])->get();
    
            return view('dosen.pengajuan.index', compact('pengajuans'));
        }
    
        public function detailPengajuan(Pengajuan $pengajuan)
        {
            // Pastikan dosen yang login memiliki akses ke pengajuan ini (jika perlu)
            // Saya menambahkan eager loading di sini agar semua informasi dosen di sidang
            // tersedia di view detail pengajuan.
            $pengajuan->load([
                'mahasiswa',
                'dokumens',
                'sidang.ketuaSidang',
                'sidang.sekretarisSidang',
                'sidang.anggota1Sidang',
                'sidang.anggota2Sidang',
            ]);
    
            return view('dosen.pengajuan.show', compact('pengajuan')); // Dokumen sudah dimuat via relasi pengajuan->dokumens
        }
    
        // Method untuk menandai notifikasi sudah dibaca
        public function markNotificationAsRead(DatabaseNotification $notification)
        {
            // Pastikan notifikasi ini milik user yang sedang login
            if (Auth::id() !== $notification->notifiable_id) {
                abort(403, 'Unauthorized action.');
            }
            $notification->markAsRead();
            return back()->with('success', 'Notifikasi ditandai sudah dibaca.');
        }
    
        // Helper method untuk mengecek status persetujuan semua dosen dan update status pengajuan
        protected function checkAndSetPengajuanStatus(Sidang $sidang)
        {
            $allDosenResponded = true;
            $allDosenAgreed = true;
    
            $rolesToCheck = [
                'ketua_sidang' => $sidang->ketua_sidang_dosen_id,
                'sekretaris_sidang' => $sidang->sekretaris_sidang_dosen_id,
                'anggota1_sidang' => $sidang->anggota1_sidang_dosen_id,
                'anggota2_sidang' => $sidang->anggota2_sidang_dosen_id, // ini bisa null
                'dosen_pembimbing' => $sidang->dosen_pembimbing_id,
                'dosen_penguji1' => $sidang->dosen_penguji1_id, // pembimbing 2
            ];
    
            foreach ($rolesToCheck as $role => $dosenId) {
                if ($dosenId !== null) { // Hanya cek jika peran dosen ini diisi
                    $persetujuanKolom = 'persetujuan_' . $role;
                    if ($sidang->$persetujuanKolom === 'pending') {
                        $allDosenResponded = false;
                        break; // Keluar dari loop jika ada yang belum merespon
                    }
                    if ($sidang->$persetujuanKolom === 'tolak') {
                        $allDosenAgreed = false;
                        break; // Keluar jika ada yang menolak
                    }
                }
            }
    
            if ($allDosenResponded) {
                if ($allDosenAgreed) {
                    // Semua sudah merespon dan semua setuju
                    $sidang->pengajuan->update(['status' => 'dosen_menyetujui']);
                } else {
                    // Semua sudah merespon tapi ada yang menolak
                    $sidang->pengajuan->update(['status' => 'dosen_menolak_jadwal']); // Status baru jika ada yang menolak
                    // Mungkin kirim notifikasi ke Kaprodi bahwa ada dosen yang menolak
                }
            }
            // Jika belum semua merespon, status pengajuan tidak berubah (tetap 'dosen_ditunjuk')
        }
    
        // --- METODE BARU UNTUK DAFTAR PENGAJUAN YANG MELIBATKAN DOSEN INI ---
        public function pengajuanSaya()
        {
            $user = Auth::user();
    
            // Pastikan user yang login memang terkait dengan model Dosen
            if (!$user || !$user->dosen) {
                return redirect()->route('dosen.dashboard')->with('error', 'Akses ditolak. Anda tidak terdaftar sebagai dosen.');
            }
    
            $dosenId = Auth::user()->dosen->id;
    
            // Mengambil pengajuan di mana dosen ini terlibat
            // Kita akan mencari di tabel 'sidangs' karena semua peran dosen ada di sana
            $pengajuansInvolved = Pengajuan::whereHas('sidang', function ($query) use ($dosenId) {
                $query->where('dosen_pembimbing_id', $dosenId)
                      ->orWhere('dosen_penguji1_id', $dosenId)
                      ->orWhere('dosen_penguji2_id', $dosenId)
                      ->orWhere('ketua_sidang_dosen_id', $dosenId)
                      ->orWhere('sekretaris_sidang_dosen_id', $dosenId)
                      ->orWhere('anggota1_sidang_dosen_id', $dosenId)
                      ->orWhere('anggota2_sidang_dosen_id', $dosenId);
            })
            ->with([
                'mahasiswa',
                'sidang.dosenPembimbing', // Eager load semua relasi dosen yang mungkin terkait
                'sidang.dosenPenguji1',
                'sidang.dosenPenguji2',
                'sidang.ketuaSidang',
                'sidang.sekretarisSidang',
                'sidang.anggota1Sidang',
                'sidang.anggota2Sidang'
            ])
            ->orderBy('updated_at', 'desc')
            ->get();
    
            return view('dosen.pengajuan.pengajuan_saya', compact('pengajuansInvolved'));
        }
        // --- AKHIR METODE BARU ---
    
    
        // Diabawah ini Validasi Dokumen Methods
        public function setujuiDokumen(Dokumen $dokumen)
        {
            // Pastikan dosen memiliki akses untuk memvalidasi dokumen ini (jika perlu)
            // Disarankan menambahkan logika otorisasi yang lebih kuat di sini.
            // Misalnya, hanya dosen pembimbing atau penguji yang bisa setujui dokumen TA/PKL tertentu.
            // if ($dokumen->pengajuan->sidang->dosenPembimbing->id !== Auth::user()->dosen->id) {
            //     abort(403, 'Anda tidak berhak menyetujui dokumen ini.');
            // }
    
            $dokumen->update(['status' => 'disetujui']);
            return redirect()->back()->with('success', 'Dokumen berhasil disetujui.');
        }
    
        public function tolakDokumen(Dokumen $dokumen)
        {
            // Pastikan dosen memiliki akses untuk memvalidasi dokumen ini (jika perlu)
            // Disarankan menambahkan logika otorisasi yang lebih kuat di sini.
            // if ($dokumen->pengajuan->sidang->dosenPembimbing->id !== Auth::user()->dosen->id) {
            //     abort(403, 'Anda tidak berhak menolak dokumen ini.');
            // }
    
            $dokumen->update(['status' => 'ditolak']);
            return redirect()->back()->with('success', 'Dokumen berhasil ditolak.');
        }
    
        // DIbawah ini Penjadwalan Sidang Methods
        public function formJadwalSidang(Pengajuan $pengajuan)
        {
            // Pastikan dosen memiliki akses untuk menjadwalkan sidang ini (jika perlu)
            // Misalnya, hanya ketua sidang yang bisa menjadwalkan.
            // if ($pengajuan->sidang && $pengajuan->sidang->ketua_sidang_dosen_id !== Auth::user()->dosen->id) {
            //      abort(403, 'Anda tidak berhak menjadwalkan sidang ini.');
            // }
    
            return view('dosen.jadwal.create', compact('pengajuan'));
        }
    
        public function simpanJadwalSidang(Request $request, Pengajuan $pengajuan)
        {
            $request->validate([
                'tanggal_waktu_sidang' => 'required|date', // Gunakan satu kolom dateTime
                'ruangan_sidang' => 'required|string|max:255',
            ]);
    
            // Pastikan record sidang sudah ada atau dibuat.
            // Dosen yang menjadwalkan mungkin hanya mengisi tanggal/ruangan.
            // Dosen pembimbing/penguji/anggota biasanya sudah ditetapkan Admin/Kaprodi.
            $sidang = $pengajuan->sidang ?? new Sidang(); // Ambil sidang jika sudah ada, atau buat baru
            $sidang->pengajuan_id = $pengajuan->id; // Pastikan terhubung ke pengajuan
            $sidang->tanggal_waktu_sidang = $request->tanggal_waktu_sidang;
            $sidang->ruangan_sidang = $request->ruangan_sidang;
            $sidang->save();
    
            // Implementasi pengiriman email notifikasi di sini jika diperlukan
            // Contoh:
            // if (class_exists('App\Mail\JadwalSidangNotification')) {
            //     $dosenPenguji1 = $sidang->dosenPenguji1;
            //     if ($dosenPenguji1) {
            //         Mail::to($dosenPenguji1->email)->send(new JadwalSidangNotification($sidang));
            //     }
            // }
    
    
            // Log aktivitas (Anda perlu mengimplementasikan fungsi logActivity() ini)
            // if (function_exists('logActivity')) {
            //     logActivity('Membuat jadwal sidang untuk: ' . $pengajuan->mahasiswa->nama_lengkap, 'Penjadwalan');
            // }
    
    
            return redirect()->route('dosen.pengajuan.show', $pengajuan->id)->with('success', 'Jadwal sidang berhasil dibuat.');
        }
    
        public function detailJadwalSidang(Sidang $sidang)
        {
            // Pastikan dosen memiliki akses untuk melihat detail jadwal ini (jika perlu)
            $sidang->load([
                'pengajuan.mahasiswa',
                'ketuaSidang',
                'sekretarisSidang',
                'anggota1Sidang',
                'anggota2Sidang',
                'dosenPembimbing',
                'dosenPenguji1',
                'dosenPenguji2'
            ]);
    
            return view('dosen.jadwal.show', compact('sidang'));
        }
    
        // Dibawah ini Penilaian Sidang Methods
        public function unduhLaporan(Sidang $sidang)
        {
            // Pastikan dosen memiliki akses untuk mengunduh laporan ini (misalnya, dosen penguji)
    
            // Asumsi: Path file laporan TA disimpan di tabel 'dokumens' dengan jenis tertentu
            $laporan = Dokumen::where('pengajuan_id', $sidang->pengajuan_id)
                              ->where('jenis_dokumen', 'Laporan TA') // Sesuaikan jenis dokumen Anda
                              ->first();
    
            if (!$laporan || !Storage::exists($laporan->path_file)) {
                abort(404, 'Laporan Tugas Akhir tidak ditemukan atau file tidak ada.');
            }
    
            // Pastikan path_file tidak dimulai dengan 'public/' jika Anda menyimpannya demikian.
            // Storage::download() akan otomatis mencari di default disk.
            return Storage::download($laporan->path_file, $laporan->nama_file);
        }
    
        public function formNilaiSidang(Sidang $sidang)
        {
            // Pastikan dosen memiliki akses untuk menilai sidang ini
            // Misalnya, hanya pembimbing atau penguji yang bisa memberi nilai
            $dosenId = Auth::user()->dosen->id;
            if (!in_array($dosenId, [
                $sidang->dosen_pembimbing_id,
                $sidang->dosen_penguji1_id,
                $sidang->dosen_penguji2_id
            ])) {
                abort(403, 'Anda tidak berhak memberikan nilai pada sidang ini.');
            }
    
            return view('dosen.sidang.nilai.edit', compact('sidang'));
        }
    
        public function simpanNilaiSidang(Request $request, Sidang $sidang)
        {
            // Validasi input nilai
            // Sesuaikan kolom nilai yang ada di tabel 'sidangs' Anda
            $request->validate([
                'nilai_sidang' => 'required|numeric|min:0|max:100', // Contoh: nilai total sidang
                // Anda mungkin memiliki kolom nilai_pembimbing, nilai_penguji1, nilai_penguji2, dll.
                // Sesuaikan validasi dengan struktur tabel Anda.
                // 'nilai_pembimbing' => 'required|numeric',
                // 'nilai_penguji_1' => 'required|numeric',
                // 'nilai_penguji_2' => 'required|numeric',
                'catatan_sidang' => 'nullable|string', // Kolom catatan tambahan
            ]);
    
            // Simpan nilai ke tabel 'sidangs'
            $sidang->update([
                'nilai_sidang' => $request->nilai_sidang,
                // 'nilai_pembimbing' => $request->nilai_pembimbing,
                // 'nilai_penguji_1' => $request->nilai_penguji_1,
                // 'nilai_penguji_2' => $request->nilai_penguji_2,
                'catatan_sidang' => $request->catatan_sidang,
                'hasil_sidang' => ($request->nilai_sidang >= 60) ? 'Lulus' : 'Tidak Lulus', // Contoh logika hasil sidang
            ]);
    
            // Log aktivitas (Anda perlu mengimplementasikan fungsi logActivity() ini)
            // if (function_exists('logActivity')) {
            //     logActivity('Memasukkan nilai sidang untuk: ' . $sidang->pengajuan->mahasiswa->nama_lengkap, 'Penilaian Sidang');
            // }
    
            return redirect()->route('dosen.sidang.nilai.edit', $sidang->id)->with('success', 'Nilai sidang berhasil disimpan.');
        }
    
        // Method untuk menampilkan form impor
        public function importForm()
        {
            return view('admin.dosen.import'); // Buat view ini nanti
        }
    
        // Method untuk memproses file Excel
        public function import(Request $request)
        {
            $request->validate([
                'file' => 'required|mimes:xls,xlsx,csv|max:2048', // Validasi file Excel
            ]);
    
            try {
                Excel::import(new DosenImport, $request->file('file')); // Proses impor
                return redirect()->back()->with('success', 'Data dosen berhasil diimpor!');
            } catch (\Maatwebsite\Excel\Validators\ValidationException $e) {
                $failures = $e->failures();
                $errors = [];
                foreach ($failures as $failure) {
                    $errors[] = 'Baris ' . $failure->row() . ': ' . implode(', ', $failure->errors());
                }
                return redirect()->back()->with('error', 'Gagal mengimpor data dosen. Ada kesalahan validasi: ' . implode('; ', $errors));
            } catch (\Exception $e) {
                // Tangani error umum lainnya
                return redirect()->back()->with('error', 'Terjadi kesalahan saat mengimpor data dosen: ' . $e->getMessage());
            }
        }
    
        public function formResponSidang(Sidang $sidang)
        {
            $dosen = Auth::user()->dosen;
    
            // Pastikan dosen yang login adalah salah satu anggota sidang ini
            // dan status persetujuannya masih 'pending'
            if (
                ($sidang->ketua_sidang_dosen_id === $dosen->id && $sidang->persetujuan_ketua_sidang === 'pending') ||
                ($sidang->sekretaris_sidang_dosen_id === $dosen->id && $sidang->persetujuan_sekretaris_sidang === 'pending') ||
                ($sidang->anggota1_sidang_dosen_id === $dosen->id && $sidang->persetujuan_anggota1_sidang === 'pending') ||
                ($sidang->anggota2_sidang_dosen_id === $dosen->id && $sidang->persetujuan_anggota2_sidang === 'pending') ||
                ($sidang->dosen_pembimbing_id === $dosen->id && $sidang->persetujuan_dosen_pembimbing === 'pending') ||
                ($sidang->dosen_penguji1_id === $dosen->id && $sidang->persetujuan_dosen_penguji1 === 'pending')
            ) {
                // Load relasi yang diperlukan untuk tampilan form
                $sidang->load('pengajuan.mahasiswa', 'ketuaSidang', 'sekretarisSidang', 'anggota1Sidang', 'anggota2Sidang', 'dosenPembimbing', 'dosenPenguji1');
                return view('dosen.respon_sidang', compact('sidang', 'dosen'));
            }
    
            // Jika dosen tidak terkait atau sudah merespon
            return redirect()->route('dosen.dashboard')->with('error', 'Anda tidak memiliki akses ke undangan sidang ini atau sudah merespon.');
        }
    
        public function submitResponSidang(Request $request, Sidang $sidang)
        {
            $request->validate([
                'respon' => 'required|in:setuju,tolak',
                'catatan' => 'nullable|string|max:500',
            ]);
    
            $dosen = Auth::user()->dosen;
            $respon = $request->respon;
            $catatan = $request->catatan;
            $peranDosen = null;
    
            // Tentukan peran dosen dan update status persetujuan
            if ($sidang->ketua_sidang_dosen_id === $dosen->id && $sidang->persetujuan_ketua_sidang === 'pending') {
                $sidang->persetujuan_ketua_sidang = $respon;
                $peranDosen = 'Ketua Sidang';
            } elseif ($sidang->sekretaris_sidang_dosen_id === $dosen->id && $sidang->persetujuan_sekretaris_sidang === 'pending') {
                $sidang->persetujuan_sekretaris_sidang = $respon;
                $peranDosen = 'Sekretaris Sidang';
            } elseif ($sidang->anggota1_sidang_dosen_id === $dosen->id && $sidang->persetujuan_anggota1_sidang === 'pending') {
                $sidang->persetujuan_anggota1_sidang = $respon;
                $peranDosen = 'Anggota Sidang 1';
            } elseif ($sidang->anggota2_sidang_dosen_id === $dosen->id && $sidang->persetujuan_anggota2_sidang === 'pending') {
                $sidang->persetujuan_anggota2_sidang = $respon;
                $peranDosen = 'Anggota Sidang 2';
            } elseif ($sidang->dosen_pembimbing_id === $dosen->id && $sidang->persetujuan_dosen_pembimbing === 'pending') {
                $sidang->persetujuan_dosen_pembimbing = $respon;
                $peranDosen = 'Dosen Pembimbing 1';
            } elseif ($sidang->dosen_penguji1_id === $dosen->id && $sidang->persetujuan_dosen_penguji1 === 'pending') {
                $sidang->persetujuan_dosen_penguji1 = $respon;
                $peranDosen = 'Dosen Pembimbing 2'; // Atau Dosen Penguji 1 sesuai konvensi Anda
            } else {
                return back()->with('error', 'Anda tidak dapat merespon undangan ini lagi atau tidak terkait.');
            }
    
            $sidang->save();
    
            // Anda bisa menambahkan logika notifikasi ke Kaprodi di sini,
            // misal: Notifikasi::send($kaprodiUser, new DosenRespondedSidang($sidang, $dosen, $respon));
    
            // Jika semua dosen sudah setuju, ubah status pengajuan menjadi 'menunggu_finalisasi_kaprodi' atau 'dijadwalkan'
            // Ini contoh sederhana, Anda mungkin perlu logika yang lebih kompleks
            // untuk mengecek semua persetujuan:
            // if ($sidang->persetujuan_ketua_sidang === 'setuju' &&
            //     $sidang->persetujuan_sekretaris_sidang === 'setuju' &&
            //     $sidang->persetujuan_anggota1_sidang === 'setuju' &&
            //     // ... dan seterusnya untuk semua dosen yang terlibat ...
            // ) {
            //     $sidang->pengajuan->status = 'dosen_menyetujui_jadwal'; // Status baru di pengajuan
            //     $sidang->pengajuan->save();
            // }
    
    
            return redirect()->route('dosen.dashboard')->with('success', "Respon Anda sebagai {$peranDosen} ($respon) berhasil disimpan.");
        }
    }
    ----------------------------------------------
    // FILE: app/Http/Controllers/KajurController.php
    <?php
    
    namespace App\Http\Controllers;
    
    
    use App\Models\Sidang;
    use App\Models\Pengajuan; // Pastikan model Pengajuan sudah di-import
    use Carbon\Carbon;
    use Illuminate\Http\Request;
    use Illuminate\Support\Facades\DB; // Tambahkan ini jika Anda menggunakan transaksi DB
    use Illuminate\Support\Str; // Tambahkan ini untuk fungsi Str::title
    
    class KajurController extends Controller
    {
        public function loginForm()
        {
            return view('kajur.login');
        }
    
        public function login(Request $request)
        {
            $request->validate([
                'email' => 'required|email',
                'password' => 'required',
            ]);
    
            $credentials = $request->only('email', 'password');
            $credentials['role'] = 'kajur'; // Tambahkan role ke credentials
    
            if (Auth::attempt($credentials)) {
                $request->session()->regenerate();
    
                return redirect()->intended(route('kajur.dashboard'));
            }
    
            return back()->withErrors([
                'email' => 'Email atau password salah.',
            ]);
        }
    
        public function dashboard()
        {
            return view('kajur.dashboard');
        }
    
        public function logout(Request $request)
        {
            Auth::logout();
    
            $request->session()->invalidate();
    
            $request->session()->regenerateToken();
    
            return redirect('/'); // Redirect ke halaman utama atau halaman lain setelah logout
        }
    
        // Dibawah ini method
        public function index()
        {
            // Logika untuk menampilkan ringkasan data di dashboard Kajur
            $jumlahSidangSedang = Sidang::whereDate('tanggal_waktu_sidang', Carbon::today())->count();
            $jumlahSidangTelah = Sidang::whereDate('tanggal_waktu_sidang', '<', Carbon::today())->count();
            $jumlahSidangAkan = Sidang::whereDate('tanggal_waktu_sidang', '>', Carbon::today())->count();
    
            // Ambil daftar pengajuan dengan status 'siap_sidang_kajur'
            $pengajuanSiapSidang = Pengajuan::where('status', 'siap_sidang_kajur')->get();
    
            return view('kajur.dashboard', compact(
                'jumlahSidangSedang',
                'jumlahSidangTelah',
                'jumlahSidangAkan',
                'pengajuanSiapSidang' // Kirim data ini ke view
            ));
        }
    
        public function daftarPengajuanVerifikasi()
        {
            $pengajuanSiapSidang = Pengajuan::where('status', 'siap_sidang_kajur')->get();
            return view('kajur.pengajuan.perlu_verifikasi', compact('pengajuanSiapSidang'));
        }
    
        public function daftarPengajuanTerverifikasi()
        {
            // Hanya muat relasi 'mahasiswa' karena 'jenis_pengajuan' adalah kolom langsung
            $pengajuanTerverifikasi = Pengajuan::with('mahasiswa')
                                              ->where('status', 'diverifikasi_kajur')
                                              ->get();
    
            return view('kajur.pengajuan.sudah_verifikasi', compact('pengajuanTerverifikasi'));
        }
    
        public function daftarSidangSedang()
        {
            $sidangs = Sidang::whereDate('tanggal_waktu_sidang', Carbon::today())->get();
            return view('kajur.sidang.sedang', compact('sidangs'));
        }
    
        public function daftarSidangTelah()
        {
            $sidangs = Sidang::where('tanggal_sidang', '<', Carbon::today())->get();
            return view('kajur.sidang.telah', compact('sidangs'));
        }
    
        public function daftarSidangAkan()
        {
            $sidangs = Sidang::whereDate('tanggal_waktu_sidang', '>', Carbon::today())->get();
            return view('kajur.sidang.akan', compact('sidangs'));
        }
    
        public function detailSidang(Sidang $sidang)
        {
            return view('kajur.sidang.show', compact('sidang'));
        }
    
        public function showVerifikasiForm(Pengajuan $pengajuan)
        {
            // Pastikan hanya pengajuan dengan status 'siap_sidang_kajur' yang bisa diverifikasi
            if ($pengajuan->status !== 'siap_sidang_kajur') {
                return redirect()->route('kajur.dashboard')->with('error', 'Pengajuan ini tidak dalam status siap verifikasi oleh Kajur.');
            }
    
            return view('kajur.pengajuan.verifikasi', compact('pengajuan'));
        }
    
        public function verifikasiPengajuan(Request $request, Pengajuan $pengajuan)
        {
            // Validasi opsional jika ada input tambahan dari form
            // $request->validate([
            //     // 'catatan_verifikasi' => 'nullable|string',
            // ]);
    
            // Pastikan hanya pengajuan dengan status 'siap_sidang_kajur' yang bisa diverifikasi
            if ($pengajuan->status !== 'siap_sidang_kajur') {
                return redirect()->route('kajur.dashboard')->with('error', 'Pengajuan ini tidak dalam status siap verifikasi oleh Kajur.');
            }
    
            // Proses verifikasi
            try {
                DB::beginTransaction(); // Mulai transaksi database
    
                $pengajuan->status = 'diverifikasi_kajur'; // Ubah status pengajuan
                // Anda bisa menambahkan kolom lain jika ada, misalnya id kajur yang memverifikasi
                // $pengajuan->verified_by_kajur_id = auth()->user()->id;
                // $pengajuan->verified_at = now();
                $pengajuan->save();
    
                DB::commit(); // Komit transaksi
    
                return redirect()->route('kajur.dashboard')->with('success', 'Pengajuan berhasil diverifikasi oleh Kajur.');
    
            } catch (\Exception $e) {
                DB::rollBack(); // Rollback transaksi jika ada error
                return redirect()->back()->with('error', 'Terjadi kesalahan saat memverifikasi pengajuan: ' . $e->getMessage());
            }
        }
    }
    ----------------------------------------------
    // FILE: app/Http/Controllers/KaprodiController.php
    <?php
    
    namespace App\Http\Controllers;
    
    use App\Models\Pengajuan;
    use App\Models\Dosen;
    use App\Models\Sidang; // Pastikan model Sidang di-import
    use Illuminate\Http\Request;
    use Illuminate\Support\Facades\Auth;
    use Illuminate\Support\Facades\Validator;
    use Illuminate\Validation\Rule; // Untuk validasi unique
    use App\Notifications\DosenSidangInvitation; // Pastikan ini di-import
    use Illuminate\Support\Facades\DB;
    
    class KaprodiController extends Controller
    {
        // Method untuk menampilkan form login Kaprodi
        public function loginForm()
        {
            return view('kaprodi.auth.login'); // Asumsi view login ada di kaprodi/auth/login.blade.php
        }
    
        // Method untuk memproses login Kaprodi
        public function login(Request $request)
        {
            $credentials = $request->validate([
                'email' => 'required|email',
                'password' => 'required',
            ]);
    
            if (Auth::attempt($credentials)) {
                $user = Auth::user();
                if ($user->role === 'kaprodi') {
                    $request->session()->regenerate();
                    return redirect()->intended(route('kaprodi.dashboard'));
                } else {
                    Auth::logout();
                    return back()->withErrors([
                        'email' => 'Anda tidak memiliki akses sebagai Kaprodi.',
                    ]);
                }
            }
    
            return back()->withErrors([
                'email' => 'Kombinasi email dan password salah.',
            ]);
        }
    
        // Method untuk logout Kaprodi
        public function logout(Request $request)
        {
            Auth::logout();
            $request->session()->invalidate();
            $request->session()->regenerateToken();
            return redirect()->route('kaprodi.login')->with('success', 'Anda telah berhasil logout.');
        }
    
        // Method untuk dashboard Kaprodi
        public function dashboard()
        {
            // 1. Ambil Jumlah Dosen
            $jumlahDosen = Dosen::count();
    
            // 2. Ambil Jumlah Pengajuan Baru (misalnya yang statusnya 'diverifikasi_admin')
            // Sesuaikan status ini berdasarkan alur kerja Anda.
            // Asumsi 'diverifikasi_admin' adalah status ketika pengajuan sudah diverifikasi admin dan siap untuk kaprodi.
            $jumlahPengajuan = Pengajuan::where('status', 'diverifikasi_admin')->count();
    
            // 3. Ambil Pengajuan Terbaru (misalnya 5 pengajuan terbaru dengan status 'diverifikasi_admin')
            // Eager load relasi 'mahasiswa' jika Anda ingin menampilkan nama mahasiswa di view
            $pengajuanBaru = Pengajuan::where('status', 'diverifikasi_admin')
                                    ->with('mahasiswa')
                                    ->latest() // Mengurutkan berdasarkan created_at secara descending
                                    ->take(5) // Mengambil 5 data terbaru
                                    ->get();
    
    
            // Kirim semua data ini ke view
            return view('kaprodi.dashboard', compact('jumlahDosen', 'jumlahPengajuan', 'pengajuanBaru'));
        }
    
        // Method untuk menampilkan daftar dosen
        public function daftarDosen()
        {
            $dosens = Dosen::orderBy('nama')->get();
            return view('kaprodi.dosen.index', compact('dosens'));
        }
    
        // --- Pengajuan-related methods ---
    
        // Menampilkan daftar pengajuan yang perlu ditinjau Kaprodi
        public function indexPengajuan()
        {
            // 1. Ambil pengajuan yang sedang menunggu aksi Kaprodi
            $pengajuansKaprodi = Pengajuan::where('status', 'diverifikasi_admin')
                                        ->orWhere('status', 'menunggu_persetujuan_dosen')
                                        ->with('mahasiswa')
                                        ->orderBy('created_at', 'desc')
                                        ->paginate(10); // Atau gunakan get() jika tidak ada pagination di bagian ini
    
            // 2. Ambil pengajuan yang telah selesai ditangani oleh Kaprodi
            // Status 'sidang_dijadwalkan_final' berarti sudah difinalisasi Kaprodi.
            // Status 'ditolak_kaprodi' berarti sudah ditolak Kaprodi.
            $pengajuansSelesaiKaprodi = Pengajuan::whereIn('status', ['sidang_dijadwalkan_final', 'ditolak_kaprodi'])
                                                ->with('mahasiswa') // Eager load relasi mahasiswa
                                                ->orderBy('updated_at', 'desc') // Urutkan berdasarkan update terakhir
                                                ->get(); // Atau gunakan paginate(10) jika Anda ingin pagination di bagian ini juga
    
    
            // Kirim kedua set data ke view
            return view('kaprodi.pengajuan.index', compact('pengajuansKaprodi', 'pengajuansSelesaiKaprodi'));
        }
    
        // Menampilkan detail pengajuan
        public function showPengajuan(Pengajuan $pengajuan)
        {
            // Eager load relasi yang diperlukan untuk detail
            // Pastikan semua relasi dosen pada Sidang di-load.
            // 'sidang.dosenPembimbing', 'sidang.dosenPenguji1' juga perlu di-load
            // karena mereka digunakan di view.
            $pengajuan->load([
                'mahasiswa',
                'dokumens',
                'sidang.ketuaSidang',
                'sidang.sekretarisSidang',
                'sidang.anggota1Sidang',
                'sidang.anggota2Sidang',
                'sidang.dosenPembimbing', // Pastikan ini ada
                'sidang.dosenPenguji1'   // Pastikan ini ada (Pembimbing 2/Penguji 1)
            ]);
        
            // Ambil daftar dosen untuk dropdown di form penjadwalan
            $dosens = Dosen::orderBy('nama')->get(); // Menggunakan 'nama' sesuai model Dosen
        
            return view('kaprodi.pengajuan.show', compact('pengajuan', 'dosens'));
        }
    
        public function showAksiKaprodi(Pengajuan $pengajuan)
        {
            // Pastikan relasi sidang sudah ada atau buat jika belum
            // Ini memastikan $pengajuan->sidang selalu tersedia
            if (!$pengajuan->sidang) {
                $sidang = new Sidang();
                $sidang->pengajuan_id = $pengajuan->id;
                $sidang->save();
                $pengajuan->load('sidang'); // Reload pengajuan untuk mendapatkan relasi sidang yang baru
            }
    
            // Eager load relasi yang diperlukan untuk form aksi
            $pengajuan->load([
                'mahasiswa',
                'sidang.ketuaSidang',
                'sidang.sekretarisSidang',
                'sidang.anggota1Sidang',
                'sidang.anggota2Sidang',
                'sidang.dosenPembimbing',
                'sidang.dosenPenguji1'
            ]);
    
            // Ambil daftar dosen untuk dropdown di form penjadwalan
            $dosens = Dosen::orderBy('nama')->get();
    
            return view('kaprodi.pengajuan.aksi', compact('pengajuan', 'dosens'));
        }
    
        // Menampilkan form untuk menjadwalkan/mengedit jadwal sidang
        public function jadwalkanSidangForm(Pengajuan $pengajuan)
        {
            // Kaprodi dapat menjadwalkan jika statusnya 'diverifikasi_admin' (setelah admin memverifikasi dokumen),
            // atau jika statusnya 'siap_dijadwalkan_kaprodi' (setelah kaprodi menyetujui),
            // atau jika statusnya 'dosen_ditunjuk' (untuk edit jadwal yang sudah ada).
            if (!in_array($pengajuan->status, ['diverifikasi_admin', 'siap_dijadwalkan_kaprodi', 'dosen_ditunjuk'])) {
                return redirect()->route('kaprodi.pengajuan.index')->with('error', 'Pengajuan ini tidak dapat dijadwalkan pada tahap ini.');
            }
    
            $dosens = Dosen::orderBy('nama')->get();
            $sidang = $pengajuan->sidang; 
    
            // View yang cocok adalah 'jadwal_sidang_form.blade.php'
            return view('kaprodi.pengajuan.jadwal_sidang_form', compact('pengajuan', 'dosens', 'sidang'));
        }
    
        // Menyimpan atau memperbarui jadwal sidang
        public function storeUpdateJadwalSidang(Request $request, Pengajuan $pengajuan)
        {
            $validatedData = $request->validate([
                'sekretaris_sidang_id' => 'required|exists:dosens,id',
                'anggota_1_sidang_id' => 'required|exists:dosens,id',
                'anggota_2_sidang_id' => 'nullable|exists:dosens,id', // Opsional
                'tanggal_waktu_sidang' => 'required|date|after_or_equal:now',
                'ruangan_sidang' => 'required|string|max:255',
            ]);
        
            // Pastikan tidak ada duplikasi dosen (antara yang dipilih di form dan pembimbing/penguji dari mahasiswa)
            // Ambil ID dosen yang sedang login (Kaprodi)
            //$kaprodiDosenId = $request->user()->dosen->id; // Ambil ID Dosen dari user yang login
        
            // Gabungkan semua ID dosen yang terlibat
            $allInvolvedDosenIds = array_filter([
                //$kaprodiDosenId, // Kaprodi sebagai Ketua Sidang
                $validatedData['sekretaris_sidang_id'],
                $validatedData['anggota_1_sidang_id'],
                $validatedData['anggota_2_sidang_id'],
                $pengajuan->mahasiswa->pembimbing1_id, // Pembimbing 1 mahasiswa
                $pengajuan->mahasiswa->pembimbing2_id, // Pembimbing 2 mahasiswa
            ]);
        
            // Cek duplikasi
            if (count($allInvolvedDosenIds) !== count(array_unique($allInvolvedDosenIds))) {
                // Identifikasi dosen mana yang duplikat untuk pesan yang lebih informatif
                $duplicateDosenNames = [];
                $dosenNames = Dosen::whereIn('id', $allInvolvedDosenIds)->pluck('nama', 'id');
                $counts = array_count_values($allInvolvedDosenIds);
                foreach ($counts as $id => $count) {
                    if ($count > 1) {
                        $duplicateDosenNames[] = $dosenNames[$id] ?? 'Dosen ID: ' . $id;
                    }
                }
                return back()->withErrors(['dosen_duplikat' => 'Dosen yang ditunjuk tidak boleh sama: ' . implode(', ', $duplicateDosenNames) . '. Pastikan Dosen Ketua, Sekretaris, Anggota, dan Pembimbing/Penguji berbeda satu sama lain.']);
            }
        
            DB::beginTransaction();
            try {
                $sidang = $pengajuan->sidang()->firstOrNew(['pengajuan_id' => $pengajuan->id]);
            
                // Tetapkan ID Dosen dari user yang login sebagai Ketua Sidang
                //$sidang->ketua_sidang_dosen_id = $kaprodiDosenId;
            
                // Tetapkan ID Pembimbing dari Mahasiswa (ini tidak berubah dari pengajuan)
                //$sidang->dosen_pembimbing_id = $pengajuan->mahasiswa->pembimbing1_id;
                //$sidang->dosen_penguji1_id = $pengajuan->mahasiswa->pembimbing2_id; // Ini akan menjadi Pembimbing 2/Penguji 1
            
                // Tetapkan ID Dosen lainnya dari form
                $sidang->sekretaris_sidang_dosen_id = $validatedData['sekretaris_sidang_id'];
                $sidang->anggota1_sidang_dosen_id = $validatedData['anggota_1_sidang_id'];
                $sidang->anggota2_sidang_dosen_id = $validatedData['anggota_2_sidang_id']; // Bisa null jika opsional
            
                // Tetapkan detail jadwal
                $sidang->tanggal_waktu_sidang = $validatedData['tanggal_waktu_sidang'];
                $sidang->ruangan_sidang = $validatedData['ruangan_sidang'];
            
                $sidang->save();
            
                // Perbarui status pengajuan
                $pengajuan->status = 'menunggu_persetujuan_dosen';
                $pengajuan->save();
            
                DB::commit();
            
                return redirect()->route('kaprodi.pengajuan.show', $pengajuan->id)
                                 ->with('success', 'Jadwal sidang berhasil ' . ($sidang->wasRecentlyCreated ? 'ditentukan' : 'diperbarui') . '. Menunggu persetujuan dosen.');
            
            } catch (\Exception $e) {
                DB::rollBack();
                return back()->with('error', 'Gagal menentukan jadwal sidang: ' . $e->getMessage())->withInput();
            }
        }
    
        // Method untuk menyetujui pengajuan (setelah admin memverifikasi dokumen)
        public function setujuiPengajuan(Pengajuan $pengajuan)
        {
            if ($pengajuan->status !== 'diverifikasi_admin') {
                return back()->with('error', 'Pengajuan ini tidak dapat disetujui pada tahap ini.');
            }
    
            $pengajuan->update(['status' => 'siap_dijadwalkan_kaprodi']); // Status baru: siap dijadwalkan oleh Kaprodi
            // TODO: Kirim notifikasi ke admin atau pihak terkait jika diperlukan
            return redirect()->route('kaprodi.pengajuan.index')->with('success', 'Pengajuan berhasil disetujui untuk dijadwalkan.');
        }
    
        // Method untuk menolak pengajuan (setelah admin memverifikasi dokumen)
        public function tolakPengajuan(Request $request, Pengajuan $pengajuan)
        {
            if ($pengajuan->status !== 'diverifikasi_admin') {
                return back()->with('error', 'Pengajuan ini tidak dapat ditolak pada tahap ini.');
            }
    
            $request->validate([
                'alasan_penolakan' => 'required|string|max:500',
            ]);
    
            $pengajuan->update([
                'status' => 'ditolak_kaprodi',
                'alasan_penolakan_kaprodi' => $request->alasan_penolakan,
            ]);
    
            // TODO: Kirim notifikasi ke mahasiswa bahwa pengajuannya ditolak Kaprodi
            return redirect()->route('kaprodi.pengajuan.index')->with('success', 'Pengajuan berhasil ditolak.');
        }
    
        // Method untuk memfinalkan jadwal sidang setelah semua dosen menyetujui
        public function finalkanJadwal(Pengajuan $pengajuan)
        {
            $sidang = $pengajuan->sidang;
    
            // Pastikan sidang ada dan statusnya sudah 'dosen_ditunjuk' atau 'dosen_menyetujui'
            if (!$sidang || !in_array($pengajuan->status, ['dosen_ditunjuk', 'dosen_menyetujui', 'menunggu_persetujuan_dosen'])) {
                return back()->with('error', 'Jadwal sidang belum lengkap atau belum semua dosen menyetujui.');
            }
    
            // Logika untuk memeriksa apakah semua dosen wajib sudah menyetujui
            $allDosenAgreed = true;
    
            if ($sidang->ketua_sidang_dosen_id && $sidang->persetujuan_ketua_sidang !== 'setuju') {
                $allDosenAgreed = false;
            }
            if ($sidang->sekretaris_sidang_dosen_id && $sidang->persetujuan_sekretaris_sidang !== 'setuju') {
                $allDosenAgreed = false;
            }
            if ($sidang->anggota1_sidang_dosen_id && $sidang->persetujuan_anggota1_sidang !== 'setuju') {
                $allDosenAgreed = false;
            }
            if ($sidang->anggota2_sidang_dosen_id && $sidang->persetujuan_anggota2_sidang !== 'setuju' && $sidang->anggota2_sidang_dosen_id !== null) { // Anggota 2 opsional
                $allDosenAgreed = false;
            }
            if ($sidang->dosen_pembimbing_id && $sidang->persetujuan_dosen_pembimbing !== 'setuju') {
                $allDosenAgreed = false;
            }
            if ($sidang->dosen_penguji1_id && $sidang->persetujuan_dosen_penguji1 !== 'setuju') {
                $allDosenAgreed = false;
            }
    
            if ($allDosenAgreed) {
                $pengajuan->update(['status' => 'siap_sidang_kajur']); // Status baru: siap diverifikasi Kajur
                // TODO: Kirim notifikasi ke Kajur
                return redirect()->route('kaprodi.pengajuan.show', $pengajuan->id)->with('success', 'Jadwal sidang berhasil difinalisasi. Menunggu verifikasi Kajur.');
            } else {
                return back()->with('error', 'Belum semua dosen yang terlibat menyetujui jadwal sidang.');
            }
        }
    }
    ----------------------------------------------
    // FILE: app/Http/Controllers/MahasiswaController.php
    <?php
    
    namespace App\Http\Controllers;
    
    use Illuminate\Http\Request;
    use Illuminate\Support\Facades\Auth;
    use App\Models\Pengajuan; // Ini boleh di sini jika dipakai di dashboard Mahasiswa
    use App\Models\Dosen;     // Ini boleh di sini jika dipakai di dashboard Mahasiswa
    use App\Models\Mahasiswa; // Ini boleh di sini jika dipakai di dashboard Mahasiswa
    use App\Imports\MahasiswaImport;
    use App\Exports\MahasiswaExport;
    use Maatwebsite\Excel\Facades\Excel;
    
    use Illuminate\Support\Facades\Log; // Tambahkan ini
    
    class MahasiswaController extends Controller
    {
        public function loginForm()
        {
            return view('mahasiswa.login');
        }
    
        public function login(Request $request)
        {
            $request->validate([
                'email' => 'required|email',
                'password' => 'required',
            ]);
    
            $credentials = $request->only('email', 'password');
            $credentials['role'] = 'mahasiswa';
    
            if (Auth::attempt($credentials)) {
                $request->session()->regenerate();
                return redirect()->intended(route('mahasiswa.dashboard'));
            }
    
            return back()->withErrors([
                'email' => 'Email atau password salah.',
            ]);
        }
    
        public function dashboard()
        {
            if (!Auth::check()) {
                return redirect()->route('mahasiswa.login')->with('error', 'Silakan login terlebih dahulu.');
            }
    
            $mahasiswaId = Auth::id();
    
            $pengajuanTerbaru = Pengajuan::where('mahasiswa_id', $mahasiswaId)
                                          ->orderBy('created_at', 'desc')
                                          ->limit(5)
                                          ->get();
            $pengajuanTerbaru->load('mahasiswa', 'sidang');
    
            $jumlahPengajuan = Pengajuan::where('mahasiswa_id', $mahasiswaId)->count();
    
            return view('mahasiswa.dashboard', compact('pengajuanTerbaru', 'jumlahPengajuan'));
        }
    
        public function logout(Request $request)
        {
            Auth::logout();
            $request->session()->invalidate();
            $request->session()->regenerateToken();
            return redirect('/');
        }
    
        // Method untuk menampilkan form impor mahasiswa
        public function importForm()
        {
            return view('admin.mahasiswa.import'); // Buat view ini nanti
        }
    
        // Method untuk memproses file Excel mahasiswa
        public function import(Request $request)
        {
            $request->validate([
                'file' => 'required|mimes:xls,xlsx,csv|max:2048', // Validasi file Excel
            ]);
    
            try {
                Excel::import(new MahasiswaImport, $request->file('file')); // Proses impor
                return redirect()->back()->with('success', 'Data mahasiswa berhasil diimpor!');
            } catch (\Maatwebsite\Excel\Validators\ValidationException $e) {
                $failures = $e->failures();
                $errors = [];
                foreach ($failures as $failure) {
                    // Ambil header kolom yang menyebabkan kegagalan
                    $attribute = $failure->attribute();
                    $errorMessage = implode(', ', $failure->errors());
                    $errors[] = 'Baris ' . $failure->row() . ' (Kolom: ' . $attribute . '): ' . $errorMessage;
                }
                return redirect()->back()->with('error', 'Gagal mengimpor data mahasiswa. Ada kesalahan validasi: <ul><li>' . implode('</li><li>', $errors) . '</li></ul>');
            } catch (\Exception $e) {
                Log::error('Kesalahan impor mahasiswa umum: ' . $e->getMessage());
                return redirect()->back()->with('error', 'Terjadi kesalahan saat mengimpor data mahasiswa: ' . $e->getMessage());
            }
        }
    
        // Method Untuk Eksport Data Mahasiswa
        public function export()
        {
            // Nama file yang akan diunduh
            $fileName = 'data_mahasiswa_' . date('Ymd_His') . '.xlsx';
    
            // Unduh file Excel menggunakan kelas export yang sudah dibuat
            return Excel::download(new MahasiswaExport, $fileName);
        }
    }
    ----------------------------------------------
    // FILE: app/Http/Controllers/PengajuanController.php
    <?php
    
    namespace App\Http\Controllers;
    
    use App\Models\Pengajuan;
    use Illuminate\Http\Request;
    use Illuminate\Support\Facades\Auth;
    use Illuminate\Support\Str;
    use App\Models\Dokumen;
    use Illuminate\Support\Facades\Storage;
    use Illuminate\Support\Facades\Validator;
    use App\Models\Dosen;
    use App\Models\Mahasiswa;
    use Illuminate\Validation\Rule; // Don't forget to import Rule
    
    class PengajuanController extends Controller
    {
        private function getLoggedInMahasiswa()
        {
            // Temukan Mahasiswa yang user_id-nya cocok dengan user yang sedang login
            return Mahasiswa::where('user_id', Auth::id())->firstOrFail();
        }
    
        public function pilihJenis()
        {
            if (!Auth::check() || Auth::user()->role !== 'mahasiswa') {
                return redirect()->route('mahasiswa.login')->with('error', 'Silakan login sebagai mahasiswa untuk mengakses halaman ini.');
            }
            return view('mahasiswa.pengajuan.pilih-jenis');
        }
    
        // Mengganti create_ta dan create_pkl menjadi satu metode create
        public function create($jenis)
        {
            if (!Auth::check() || Auth::user()->role !== 'mahasiswa') {
                return redirect()->route('mahasiswa.login')->with('error', 'Silakan login terlebih dahulu.');
            }
        
            if (!in_array($jenis, ['ta', 'pkl'])) {
                abort(404, 'Jenis pengajuan tidak valid.');
            }
        
            $mahasiswa = $this->getLoggedInMahasiswa(); 
        
            $pengajuanAktif = Pengajuan::where('mahasiswa_id', $mahasiswa->id)
                                        ->whereIn('status', ['diajukan_mahasiswa', 'diverifikasi_admin', 'dosen_ditunjuk', 'sedang_diproses'])
                                        ->first();
        
            if ($pengajuanAktif) {
                return redirect()->route('mahasiswa.pengajuan.index')
                                 ->with('error', 'Anda sudah memiliki pengajuan yang sedang diproses. Anda tidak dapat membuat pengajuan baru sampai pengajuan sebelumnya selesai atau dibatalkan.');
            }
        
            $dokumenSyarat = $this->getDokumenSyarat($jenis);
            $dosens = Dosen::orderBy('nama')->get(); // Tetap diperlukan untuk memilih pembimbing 1 & 2
            return view('mahasiswa.pengajuan.form', compact('jenis', 'dokumenSyarat', 'dosens'));
        }
    
        public function store(Request $request)
        {
            if (!Auth::check() || Auth::user()->role !== 'mahasiswa') { 
                return redirect()->route('mahasiswa.login')->with('error', 'Silakan login terlebih dahulu.');
            }
    
            $mahasiswa = $this->getLoggedInMahasiswa();
    
            $pengajuanAktif = Pengajuan::where('mahasiswa_id', $mahasiswa->id)
                                        ->whereIn('status', ['diajukan_mahasiswa', 'diverifikasi_admin', 'dosen_ditunjuk', 'sedang_diproses'])
                                        ->first();
    
            if ($pengajuanAktif) {
                return redirect()->route('mahasiswa.pengajuan.index')
                                 ->with('error', 'Anda sudah memiliki pengajuan yang sedang diproses. Anda tidak dapat membuat pengajuan baru sampai pengajuan sebelumnya selesai atau dibatalkan.');
            }
    
            $status = $request->input('action') === 'draft' ? 'draft' : 'diajukan_mahasiswa';
    
            $validationRules = [
                'jenis_pengajuan' => 'required|in:pkl,ta',
                // Mahasiswa memilih dosen pembimbing 1 (wajib)
                'dosen_pembimbing1_id' => $status === 'diajukan_mahasiswa' ? 'required|exists:dosens,id' : 'nullable|exists:dosens,id',
                // Mahasiswa memilih dosen pembimbing 2 (opsional, bisa jadi penguji 1)
                'dosen_pembimbing2_id' => 'nullable|exists:dosens,id|different:dosen_pembimbing1_id', // Pastikan berbeda dengan pembimbing 1
                'dokumen' => 'array',
            ];
    
            $dokumenSyaratList = $this->getDokumenSyarat($request->jenis_pengajuan);
    
            foreach ($dokumenSyaratList as $key => $namaDokumen) {
                $validationRules["dokumen.{$key}"] = ($status === 'diajukan_mahasiswa') ? 'required|file|mimes:pdf,jpg,jpeg,png|max:2048' : 'nullable|file|mimes:pdf,jpg,jpeg,png|max:2048';
            }
    
            $validator = Validator::make($request->all(), $validationRules);
    
            if ($validator->fails()) {
                return back()->withErrors($validator)->withInput();
            }
    
            $pengajuan = Pengajuan::create([
                'mahasiswa_id' => $mahasiswa->id,
                'jenis_pengajuan' => $request->jenis_pengajuan,
                'status' => $status,
            ]);
    
            // Buat entri sidang dengan dosen pembimbing yang dipilih mahasiswa
            $pengajuan->sidang()->create([
                'dosen_pembimbing_id' => $request->dosen_pembimbing1_id,
                'dosen_penguji1_id' => $request->dosen_pembimbing2_id, // Untuk sementara, gunakan ini sebagai Dosen Pembimbing 2
                'status' => 'belum_dijadwalkan', // Atau 'menunggu_verifikasi_admin'
            ]);
    
            // Upload dan simpan dokumen
            if ($request->has('dokumen')) {
                foreach ($request->file('dokumen') as $nama_dokumen_key => $file) {
                    if (array_key_exists($nama_dokumen_key, $dokumenSyaratList)) {
                        $originalFileName = Str::slug($dokumenSyaratList[$nama_dokumen_key]) . '_' . time() . '.' . $file->getClientOriginalExtension();
                        $path = $file->storeAs('dokumen_pengajuan/' . $pengajuan->id, $originalFileName, 'public');
    
                        Dokumen::create([
                            'pengajuan_id' => $pengajuan->id,
                            'nama_file' => $dokumenSyaratList[$nama_dokumen_key],
                            'path_file' => $path,
                            'status' => 'diajukan_mahasiswa',
                        ]);
                    }
                }
            }
    
            if ($status === 'draft') {
                return redirect()->route('mahasiswa.pengajuan.show', $pengajuan->id)->with('success', 'Pengajuan berhasil disimpan sebagai draft.');
            } else {
                return redirect()->route('mahasiswa.pengajuan.show', $pengajuan->id)->with('success', 'Pengajuan berhasil diajukan_mahasiswa dan akan segera diverifikasi!');
            }
        }
    
        public function show(Pengajuan $pengajuan)
        {
            if (!Auth::check() || Auth::user()->role !== 'mahasiswa') {
                return redirect()->route('mahasiswa.login')->with('error', 'Silakan login terlebih dahulu.');
            }
    
            $mahasiswa = $this->getLoggedInMahasiswa();
    
            if ($mahasiswa->id != $pengajuan->mahasiswa_id) {
                abort(403, 'Anda tidak diizinkan mengakses pengajuan ini.');
            }
    
            $pengajuan->load([
                'dokumens',
                'sidang.ketuaSidang',
                'sidang.sekretarisSidang',
                'sidang.anggota1Sidang',
                'sidang.anggota2Sidang',
            ]);
    
            return view('mahasiswa.pengajuan.show', compact('pengajuan'));
        }
    
        public function simpanSebagaiDraft(Request $request, Pengajuan $pengajuan)
        {
            if (!Auth::check() || Auth::user()->role !== 'mahasiswa') {
                return redirect()->route('mahasiswa.login')->with('error', 'Silakan login terlebih dahulu.');
            }
            $mahasiswa = $this->getLoggedInMahasiswa();
    
            if ($mahasiswa->id != $pengajuan->mahasiswa_id) {
                abort(403, 'Unauthorized');
            }
    
            $pengajuan->update(['status' => 'draft']);
    
            return redirect()->route('mahasiswa.pengajuan.show', $pengajuan->id)->with('success', 'Pengajuan berhasil diperbarui sebagai draft.');
        }
    
        public function edit(Pengajuan $pengajuan)
        {
            if (!Auth::check() || Auth::user()->role !== 'mahasiswa') {
                return redirect()->route('mahasiswa.login')->with('error', 'Silakan login terlebih dahulu.');
            }
            $mahasiswa = $this->getLoggedInMahasiswa();
    
            if ($mahasiswa->id != $pengajuan->mahasiswa_id) {
                abort(403, 'Unauthorized');
            }
    
            if ($pengajuan->status !== 'draft' && !in_array($pengajuan->status, ['ditolak_admin', 'ditolak_kaprodi'])) {
                return redirect()->route('mahasiswa.pengajuan.show', $pengajuan->id)
                                 ->with('error', 'Pengajuan sudah diajukan_mahasiswa dan tidak bisa diedit.');
            }
    
            $jenis = $pengajuan->jenis_pengajuan;
            $dokumenSyarat = $this->getDokumenSyarat($jenis);
            // Menggunakan keyBy 'nama_file' untuk memudahkan akses di view
            $dokumenTerupload = $pengajuan->dokumens->keyBy('nama_file');
            $dosens = Dosen::orderBy('nama')->get();
    
            return view('mahasiswa.pengajuan.edit', compact('pengajuan', 'jenis', 'dokumenSyarat', 'dokumenTerupload', 'dosens'));
        }
    
        public function update(Request $request, Pengajuan $pengajuan)
        {
            if (!Auth::check() || Auth::user()->role !== 'mahasiswa') {
                return redirect()->route('mahasiswa.login')->with('error', 'Silakan login terlebih dahulu.');
            }
            $mahasiswa = $this->getLoggedInMahasiswa();
        
            if ($mahasiswa->id != $pengajuan->mahasiswa_id) {
                abort(403, 'Unauthorized');
            }
        
            // Hanya bisa diupdate jika status draft, ditolak_admin, atau ditolak_kaprodi
            if ($pengajuan->status !== 'draft' && !in_array($pengajuan->status, ['ditolak_admin', 'ditolak_kaprodi'])) {
                return redirect()->route('mahasiswa.pengajuan.show', $pengajuan->id)
                                 ->with('error', 'Pengajuan ini tidak dapat diupdate karena sudah dalam proses verifikasi.');
            }
        
            $status = $request->input('action') === 'submit' ? 'diajukan_mahasiswa' : 'draft';
        
            $validationRules = [
                'action' => 'required|in:draft,submit',
                'dosen_pembimbing1_id' => $status === 'diajukan_mahasiswa' ? 'required|exists:dosens,id' : 'nullable|exists:dosens,id',
                'dosen_pembimbing2_id' => 'nullable|exists:dosens,id|different:dosen_pembimbing1_id',
            ];
        
            $dokumenSyaratList = $this->getDokumenSyarat($pengajuan->jenis_pengajuan);
        
            foreach ($dokumenSyaratList as $key => $namaDokumen) {
                $fieldName = 'dokumen_' . $key; // Perbaikan nama field, sesuaikan dengan blade jika perlu
                $uploadedDoc = $pengajuan->dokumens->where('nama_file', $namaDokumen)->first();
            
                $rulesForThisDoc = [
                    'nullable',
                    'file',
                    'mimes:pdf,jpg,jpeg,png', // Sesuaikan jika di blade hanya pdf
                    'max:2048',
                ];
            
                if ($status === 'diajukan_mahasiswa' && !$uploadedDoc) {
                    $rulesForThisDoc[] = 'required';
                }
            
                $validationRules[$fieldName] = $rulesForThisDoc;
            }
        
            $validator = Validator::make($request->all(), $validationRules);
        
            if ($validator->fails()) {
                return back()->withErrors($validator)->withInput();
            }
        
            $pengajuan->update([
                'status' => $status,
            ]);
        
            // Update entri sidang
            if ($pengajuan->sidang) {
                $pengajuan->sidang->update([
                    'dosen_pembimbing_id' => $request->dosen_pembimbing1_id,
                    'dosen_penguji1_id' => $request->dosen_pembimbing2_id,
                    // Perbarui status jika pengajuan difinalisasi dari draft
                    'status' => $status === 'diajukan_mahasiswa' ? 'belum_dijadwalkan' : $pengajuan->sidang->status,
                ]);
            } else {
                // Jika belum ada sidang (misalnya pengajuan draft baru), buat entri baru
                $pengajuan->sidang()->create([
                    'dosen_pembimbing_id' => $request->dosen_pembimbing1_id,
                    'dosen_penguji1_id' => $request->dosen_pembimbing2_id,
                    'status' => 'belum_dijadwalkan',
                ]);
            }
        
            // Proses dokumen
            foreach ($dokumenSyaratList as $key => $namaDokumen) {
                $fieldName = 'dokumen_' . $key; // Sesuaikan dengan name di Blade Anda
                if ($request->hasFile($fieldName)) {
                    $file = $request->file($fieldName);
                    $namaFileSyarat = $namaDokumen;
                
                    $existingDokumen = Dokumen::where('pengajuan_id', $pengajuan->id)
                                              ->where('nama_file', $namaFileSyarat)
                                              ->first();
                
                    $originalFileName = Str::slug($namaFileSyarat) . '_' . time() . '.' . $file->getClientOriginalExtension();
                    $path = $file->storeAs('dokumen_pengajuan/' . $pengajuan->id, $originalFileName, 'public');
                
                    if ($existingDokumen) {
                        Storage::disk('public')->delete($existingDokumen->path_file);
                        $existingDokumen->update(['path_file' => $path, 'status' => 'diajukan_mahasiswa']);
                    } else {
                        Dokumen::create([
                            'pengajuan_id' => $pengajuan->id,
                            'nama_file' => $namaFileSyarat,
                            'path_file' => $path,
                            'status' => 'diajukan_mahasiswa',
                        ]);
                    }
                }
            }
        
            if ($status === 'draft') {
                return redirect()->route('mahasiswa.pengajuan.show', $pengajuan->id)->with('success', 'Pengajuan draft berhasil diperbarui.');
            } else {
                return redirect()->route('mahasiswa.pengajuan.show', $pengajuan->id)->with('success', 'Pengajuan berhasil difinalisasi dan diajukan!');
            }
        }
    
        public function index()
        {
            if (!Auth::check() || Auth::user()->role !== 'mahasiswa') {
                return redirect()->route('mahasiswa.login')->with('error', 'Silakan login terlebih dahulu.');
            }
    
            $mahasiswa = $this->getLoggedInMahasiswa();
    
            $pengajuans = Pengajuan::where('mahasiswa_id', $mahasiswa->id)
                                    ->with('mahasiswa', 'sidang')
                                    ->orderBy('created_at', 'desc')
                                    ->get();
    
            return view('mahasiswa.pengajuan.index', compact('pengajuans'));
        }
    
        private function getDokumenSyarat($jenisPengajuan)
        {
            if ($jenisPengajuan == 'pkl') {
                return [
                    'laporan_pkl' => 'Laporan PKL sebanyak 2 rangkap',
                    'buku_pkl' => 'Buku PKL',
                    'kuisioner_survey_pkl' => 'Kuisioner survey PKL yang telah diisi dan ditandatangani serta distempel perusahaan',
                    'kuisioner_kelulusan' => 'Kuisioner Kelulusan (jika ada)',
                    'kuisioner_balikan_pkl' => 'Kuisioner balikan PKL',
                    'lembaran_rekomendasi_penguji' => 'Lembaran Rekomendasi Penguji',
                    'surat_permohonan_sidang_pkl' => 'Surat Permohonan Sidang PKL',
                    'lembar_penilaian_sidang_pkl' => 'Lembar Penilaian Sidang PKL (Penguji)',
                    'surat_keterangan_pelaksanaan_pkl' => 'Surat keterangan pelaksanaan PKL (Asli, distempel dan ditandatangani pihak perusahaan)',
                    'fotocopy_cover_laporan_pkl' => 'Fotocopy cover laporan PKL yang ada tanda tangan persetujuan sidang dari dosen pembimbing PKL',
                    'fotocopy_lembar_penilaian_industri' => 'Fotocopy lembar penilaian dari pembimbing di industri (ditandatangani pembimbing industri)',
                    'fotocopy_lembar_penilaian_dosen_pembimbing_pkl' => 'Fotocopy lembar penilaian dari dosen pembimbing PKL (ditandantangani pembimbing kampus)',
                    'fotocopy_lembar_konsultasi_bimbingan_pkl' => 'Fotocopy lembar konsultasi bimbingan PKL (diisi dan ditandatangani pembimbing kampus)',
                ];
            } elseif ($jenisPengajuan == 'ta') {
                return [
                    'surat_permohonan_sidang' => 'Surat Permohonan Sidang',
                    'surat_keterangan_bebas_kompensasi_ganjil_genap' => 'Surat Keterangan bebas Kompensasi Semester Ganjil & Genap',
                    'ipk_terakhir' => 'IPK Terakhir (Lampiran Rapor Semester 1 s.d 5 (D3) dan 1 s.d 7 (D4))',
                    'bukti_menyerahkan_laporan_pkl' => 'Bukti menyerahkan laporan PKL',
                    'nilai_toeic' => 'Nilai TOEIC minimal 450 (D3) dan 550 (D4) (Lampirkan kartu TOEIC)',
                    'tugas_akhir_rangkap_4' => 'Tugas Akhir Rangkap 4 yang disetujui pembimbing',
                    'kartu_bimbingan_konsultasi_ta_9x' => 'Kartu Bimbingan/Konsultasi Tugas Akhir 9x',
                    'fotocopy_ijazah_sma_ma_smk' => 'Fotokopi Ijazah SMA/MA/SMK',
                    // 'map_plastik_5_buah' => 'Map Plastik 5 buah, warna berdasarkan masing-masing Prodi', // Ini biasanya fisik
                    'fotocopy_sertifikat_diksarlin' => 'Fotokopi Sertifikat Diksarlin',
                    'sertifikat_responsi' => 'Sertifikat Responsi',
                    'nilai_satuan_kredit_ekstrakurikuler' => 'Nilai Satuan Kredit Ekstrakurikuler (SKE) (Lampirkan kartu SKE)',
                ];
            }
            return [];
        }
    
        public function destroy(Pengajuan $pengajuan)
        {
            if (!Auth::check() || Auth::user()->role !== 'mahasiswa') {
                return redirect()->route('mahasiswa.login')->with('error', 'Silakan login terlebih dahulu.');
            }
            $mahasiswa = $this->getLoggedInMahasiswa();
    
            if ($mahasiswa->id != $pengajuan->mahasiswa_id) {
                abort(403, 'Unauthorized access.');
            }
    
            if ($pengajuan->status === 'diverifikasi_admin' ||
                $pengajuan->status === 'dosen_ditunjuk' ||
                $pengajuan->status === 'ditolak_admin' ||
                $pengajuan->status === 'ditolak_kaprodi' ||
                $pengajuan->status === 'selesai'
            ) {
                return redirect()->route('mahasiswa.pengajuan.show', $pengajuan->id)
                                 ->with('error', 'Pengajuan ini tidak dapat dihapus karena sudah dalam proses verifikasi atau telah diproses.');
            }
    
            if ($pengajuan->sidang) {
                $pengajuan->sidang->delete();
            }
    
            foreach ($pengajuan->dokumens as $dokumen) {
                Storage::disk('public')->delete($dokumen->path_file);
                $dokumen->delete();
            }
    
            $pengajuan->delete();
    
            return redirect()->route('mahasiswa.pengajuan.index')
                             ->with('success', 'Pengajuan berhasil dihapus.');
        }
    }
    ----------------------------------------------
    // FILE: app/Http/Controllers/SidangController.php
    <?php
    
    namespace App\Http\Controllers;
    
    use Illuminate\Http\Request;
    
    class SidangController extends Controller
    {
        //
    }
    ----------------------------------------------
    // FILE: app/Http/Controllers/Admin/PengajuanAdminController.php
    <?php
    
    namespace App\Http\Controllers\Admin;
    
    use App\Http\Controllers\Controller;
    use Illuminate\Http\Request;
    use App\Models\Pengajuan;
    use App\Models\Dokumen; // Perlu untuk menampilkan dokumen
    use Illuminate\Support\Facades\Storage; // Jika perlu akses storage
    
    class PengajuanAdminController extends Controller
    {
        // Menampilkan daftar pengajuan yang perlu diverifikasi admin
        // Method untuk menampilkan daftar pengajuan mahasiswa yang login
        public function index()
        {
            // Ambil semua pengajuan yang relevan untuk admin
            // Anda bisa menggabungkan kriteria status atau mengurutkan sesuai kebutuhan
            $pengajuans = Pengajuan::whereIn('status', [
                                    'diajukan_mahasiswa', // Pastikan status ini sudah diubah sesuai pengajuan controller
                                    'diverifikasi_admin',
                                    'ditolak_admin',
                                    'dosen_ditunjuk',
                                    'ditolak_kaprodi',
                                    'dosen_menyetujui', // Jika Anda ingin admin melihat status ini
                                    'siap_sidang_kajur', // Jika Anda ingin admin melihat status ini
                                    'dijadwalkan', // Jika Anda ingin admin melihat status ini
                                    'selesai' // Jika Anda ingin admin melihat status ini
                                ])
                                ->with('mahasiswa') // Eager load relasi mahasiswa
                                ->orderBy('created_at', 'desc') // Urutkan berdasarkan tanggal terbaru
                                ->paginate(10); // Gunakan paginate untuk paginasi
    
            // Kirimkan hanya variabel $pengajuans ke view
            return view('admin.pengajuan.index', compact('pengajuans'));
        }
    
    // Menampilkan detail pengajuan untuk verifikasi
        public function show(Pengajuan $pengajuan)
        {
            // Pastikan hanya admin yang bisa melihat pengajuan yang relevan untuk dia
            // Jika statusnya sudah melewati admin (misal 'diverifikasi_admin' atau 'dosen_ditunjuk'), admin tetap bisa lihat tapi tidak bisa aksi
            if ($pengajuan->status !== 'diajukan_mahasiswa' && $pengajuan->status !== 'ditolak_admin') {
                // Admin masih bisa melihat, tapi mungkin perlu pesan/tampilan berbeda
                // Atau Anda bisa arahkan kembali jika pengajuan sudah diproses kaprodi
                // return redirect()->route('admin.pengajuan.index')->with('info', 'Pengajuan ini sudah diproses.');
            }
    
            // Muat relasi dokumen dan sidang agar bisa ditampilkan
            $pengajuan->load(['mahasiswa', 'dokumens', 'sidang.ketuaSidang']);
    
            // Kita bisa langsung menggunakan $pengajuan->dokumens di view,
            // tidak perlu membuat variabel $dokumens terpisah jika sudah di-load.
            // Jika Anda ingin tetap menggunakan $dokumens terpisah (sesuai view Anda),
            // maka definisikan:
            $dokumens = $pengajuan->dokumens;
    
            return view('admin.pengajuan.show', compact('pengajuan', 'dokumens')); // <-- Tambahkan 'dokumens' di sini
        }
    
        // Aksi: Memverifikasi dokumen pengajuan
        public function verify(Pengajuan $pengajuan)
        {
            // Pastikan hanya pengajuan berstatus 'diajukan' atau 'ditolak_admin' yang bisa diverifikasi
            if ($pengajuan->status !== 'diajukan_mahasiswa' && $pengajuan->status !== 'ditolak_admin') {
                return redirect()->route('admin.pengajuan.verifikasi.show', $pengajuan->id)
                                 ->with('error', 'Pengajuan tidak dapat diverifikasi pada status saat ini.');
            }
    
            // Ubah status pengajuan menjadi 'diverifikasi_admin'
            $pengajuan->update(['status' => 'diverifikasi_admin']);
    
            // Redirect kembali ke halaman daftar pengajuan verifikasi admin
            return redirect()->route('admin.pengajuan.verifikasi.index') // <--- PASTIkan ini
                             ->with('success', 'Pengajuan berhasil diverifikasi dan menunggu aksi Kaprodi.');
        }
    
        // Aksi: Menolak pengajuan
        public function reject(Request $request, Pengajuan $pengajuan)
        {
            // Izinkan penolakan jika status 'diajukan_mahasiswa' atau 'ditolak_admin'
            if ($pengajuan->status !== 'diajukan_mahasiswa' && $pengajuan->status !== 'ditolak_admin') {
                return redirect()->route('admin.pengajuan.verifikasi.show', $pengajuan->id)
                                 ->with('error', 'Pengajuan tidak dapat ditolak pada status saat ini.');
            }
        
            $request->validate([
                'alasan_penolakan_admin' => 'required|string|max:500', // Sesuaikan dengan nama input di form
            ]);
        
            $pengajuan->update([
                'status' => 'ditolak_admin',
                'alasan_penolakan_admin' => $request->alasan_penolakan_admin, // Gunakan nama kolom yang benar
            ]);
        
            return redirect()->route('admin.pengajuan.verifikasi.index')
                             ->with('success', 'Pengajuan berhasil ditolak.');
        }
    }
    ----------------------------------------------
    // FILE: app/Http/Controllers/Kaprodi/PengajuanKaprodiController.php
    <?php
    
    namespace App\Http\Controllers\Kaprodi;
    
    use App\Http\Controllers\Controller;
    use App\Models\Pengajuan;
    use App\Models\Dosen;
    use App\Models\Sidang;
    use Illuminate\Http\Request;
    use Illuminate\Support\Facades\Validator;
    use Carbon\Carbon;
    
    class PengajuanKaprodiController extends Controller
    {
        public function index()
        {
            // Pengajuan yang menunggu Kaprodi jadwalkan (setelah diverifikasi admin)
            // atau yang sudah dijadwalkan tapi bisa diubah
            $pengajuansKaprodi = Pengajuan::whereIn('status', ['diverifikasi_admin', 'menunggu_penjadwalan_kaprodi', 'dosen_ditunjuk'])
                                        ->orderBy('created_at', 'desc')
                                        ->with('mahasiswa', 'sidang.ketuaSidang', 'sidang.sekretarisSidang', 'sidang.anggota1Sidang', 'sidang.anggota2Sidang', 'sidang.dosenPembimbing', 'sidang.dosenPenguji1', 'sidang.dosenPenguji2')
                                        ->get();
    
            // Pengajuan yang sudah final (tidak bisa diubah lagi oleh Kaprodi)
            $pengajuansSelesaiKaprodi = Pengajuan::whereIn('status', ['sidang_dijadwalkan_final', 'ditolak_kaprodi'])
                                                ->orderBy('created_at', 'desc')
                                                ->with('mahasiswa', 'sidang.ketuaSidang', 'sidang.sekretarisSidang', 'sidang.anggota1Sidang', 'sidang.anggota2Sidang', 'sidang.dosenPembimbing', 'sidang.dosenPenguji1', 'sidang.dosenPenguji2')
                                                ->get();
    
            return view('kaprodi.pengajuan.index', compact('pengajuansKaprodi', 'pengajuansSelesaiKaprodi'));
        }
    
        public function show(Pengajuan $pengajuan)
        {
            // Muat semua relasi dosen di sidang
            $pengajuan->load([
                'mahasiswa',
                'dokumens',
                'sidang.ketuaSidang',
                'sidang.sekretarisSidang',
                'sidang.anggota1Sidang',
                'sidang.anggota2Sidang',
            ]);
    
            $dosens = Dosen::orderBy('nama')->get();
    
            return view('kaprodi.pengajuan.show', compact('pengajuan', 'dosens'));
        }
    
        // Method ini hanya akan mengubah status pengajuan ke 'menunggu_penjadwalan_kaprodi'
        // setelah admin memverifikasi. Detail sidang akan diatur di method terpisah.
        public function setujui(Request $request, Pengajuan $pengajuan)
        {
            // Pastikan status pengajuan adalah 'diverifikasi_admin'
            if ($pengajuan->status !== 'diverifikasi_admin') {
                return redirect()->route('kaprodi.pengajuan.show', $pengajuan->id)
                                 ->with('error', 'Pengajuan tidak dapat disetujui pada status saat ini.');
            }
        
            // Update status pengajuan menjadi 'menunggu_penjadwalan_kaprodi'
            // Ini adalah status di mana Kaprodi dapat mulai menjadwalkan sidang.
            $pengajuan->update(['status' => 'menunggu_penjadwalan_kaprodi']);
            
            // Buat record Sidang kosong jika belum ada (akan diisi nanti di form jadwal)
            if (!$pengajuan->sidang) {
                $pengajuan->sidang()->create([]);
            }
    
            return redirect()->route('kaprodi.pengajuan.show', $pengajuan->id)
                             ->with('success', 'Pengajuan berhasil disetujui oleh Kaprodi. Silakan jadwalkan sidang.');
        }
    
        public function tolak(Request $request, Pengajuan $pengajuan)
        {
            // Pastikan pengajuan berstatus yang bisa ditolak oleh Kaprodi
            if (!in_array($pengajuan->status, ['diverifikasi_admin', 'menunggu_penjadwalan_kaprodi', 'dosen_ditunjuk'])) {
                return redirect()->route('kaprodi.pengajuan.show', $pengajuan->id)
                                 ->with('error', 'Pengajuan tidak dapat ditolak pada status saat ini.');
            }
    
            $request->validate([
                'alasan_penolakan_kaprodi' => 'required|string|max:500',
            ]);
    
            $pengajuan->update([
                'status' => 'ditolak_kaprodi',
                'alasan_penolakan_kaprodi' => $request->alasan_penolakan_kaprodi, // Gunakan kolom yang benar
            ]);
    
            // Hapus record sidang jika ada (opsional, tergantung kebijakan)
            if ($pengajuan->sidang) {
                $pengajuan->sidang->delete();
            }
    
            return redirect()->route('kaprodi.pengajuan.index')
                             ->with('success', 'Pengajuan berhasil ditolak oleh Kaprodi.');
        }
    
        // Menampilkan form untuk menjadwalkan/mengedit sidang
        public function jadwalSidangForm(Pengajuan $pengajuan)
        {
            // Pastikan pengajuan sudah melewati verifikasi admin dan menunggu penjadwalan Kaprodi
            if (!in_array($pengajuan->status, ['menunggu_penjadwalan_kaprodi', 'dosen_ditunjuk'])) {
                 return redirect()->route('kaprodi.pengajuan.show', $pengajuan->id)
                                 ->with('error', 'Pengajuan tidak dalam status yang tepat untuk penjadwalan sidang.');
            }
    
            $pengajuan->load('sidang'); // Muat data sidang jika sudah ada
            $dosens = Dosen::orderBy('nama')->get(); // Ambil semua dosen
            
            // Data default untuk form (jika belum ada sidang, inisialisasi objek Sidang baru)
            $sidang = $pengajuan->sidang ?? new Sidang();
    
            return view('kaprodi.pengajuan.jadwal_sidang_form', compact('pengajuan', 'dosens', 'sidang'));
        }
    
        public function storeUpdateJadwalSidang(Request $request, Pengajuan $pengajuan)
        {
            // Pastikan pengajuan sudah melewati verifikasi admin dan menunggu penjadwalan Kaprodi
            if (!in_array($pengajuan->status, ['menunggu_penjadwalan_kaprodi', 'dosen_ditunjuk'])) {
                return redirect()->route('kaprodi.pengajuan.show', $pengajuan->id)
                                ->with('error', 'Pengajuan tidak dalam status yang tepat untuk memperbarui jadwal sidang.');
            }
    
            // Validasi input
            $validator = Validator::make($request->all(), [
                'tanggal_sidang'           => 'required|date_format:Y-m-d|after_or_equal:today', // Validasi tanggal
                'waktu_sidang'             => 'required|date_format:H:i', // Validasi waktu
                'ruangan_sidang'           => 'required|string|max:255',
                'ketua_sidang_dosen_id'    => 'required|exists:dosens,id',
                'sekretaris_sidang_dosen_id' => 'required|exists:dosens,id|different:ketua_sidang_dosen_id',
                'anggota1_sidang_dosen_id' => 'required|exists:dosens,id|different:ketua_sidang_dosen_id|different:sekretaris_sidang_dosen_id',
                'anggota2_sidang_dosen_id' => 'nullable|exists:dosens,id|different:ketua_sidang_dosen_id|different:sekretaris_sidang_dosen_id|different:anggota1_sidang_dosen_id',
            ]);
    
            // Gabungkan tanggal dan waktu untuk membentuk tanggal_waktu_sidang
            $combinedDateTime = Carbon::parse($request->tanggal_sidang . ' ' . $request->waktu_sidang);
    
            // Tambahkan validasi kustom untuk memastikan tanggal dan waktu gabungan tidak di masa lalu
            if ($combinedDateTime->isPast()) {
                $validator->after(function ($validator) {
                    $validator->errors()->add('tanggal_waktu_sidang', 'Tanggal dan waktu sidang tidak boleh di masa lalu.');
                });
            }
    
            // Validasi unik untuk dosen di dalam sidang yang sama
            // Ambil semua ID dosen yang dikirim
            $dosenIdsInput = array_filter([
                $request->input('ketua_sidang_dosen_id'),
                $request->input('sekretaris_sidang_dosen_id'),
                $request->input('anggota1_sidang_dosen_id'),
                $request->input('anggota2_sidang_dosen_id'),
            ]);
            // Cek apakah ada duplikasi
            if (count($dosenIdsInput) !== count(array_unique($dosenIdsInput))) {
                $validator->after(function ($validator) {
                    $validator->errors()->add('dosen_bentrok', 'Ada dosen yang ditunjuk lebih dari satu kali dalam peran yang berbeda pada sidang yang sama.');
                });
            }
    
            if ($validator->fails()) {
                return back()->withErrors($validator)->withInput();
            }
    
            // Cek Bentrok Jadwal Sidang (di satu hari, hanya ada 1 persidangan di satu tempat)
            $existingSidangRuangan = Sidang::where('tanggal_waktu_sidang', $combinedDateTime)
                                        ->where('ruangan_sidang', $request->ruangan_sidang)
                                        ->where('pengajuan_id', '!=', $pengajuan->id) // Kecualikan sidang yang sedang di-edit
                                        ->first();
    
            if ($existingSidangRuangan) {
                return back()->withInput()->withErrors([
                    'jadwal_ruangan_bentrok' => 'Ruangan ' . $request->ruangan_sidang . ' sudah digunakan pada ' . $combinedDateTime->format('d F Y H:i') . ' untuk sidang lain.'
                ]);
            }
    
            // Cek Bentrok Jadwal Dosen (apakah dosen yang ditunjuk sudah punya jadwal di waktu yang sama)
            $bentrokDosen = Sidang::where('tanggal_waktu_sidang', $combinedDateTime)
                                ->where('pengajuan_id', '!=', $pengajuan->id) // Kecualikan sidang yang sedang di-edit
                                ->where(function ($query) use ($dosenIdsInput) {
                                    $query->whereIn('ketua_sidang_dosen_id', $dosenIdsInput)
                                          ->orWhereIn('sekretaris_sidang_dosen_id', $dosenIdsInput)
                                          ->orWhereIn('anggota1_sidang_dosen_id', $dosenIdsInput)
                                          ->orWhereIn('anggota2_sidang_dosen_id', $dosenIdsInput);
                                    // Tidak perlu mengecek dosen_pembimbing_id dan dosen_penguji karena sudah dihapus dari form
                                })
                                ->first();
    
            if ($bentrokDosen) {
                $bentrokNamaDosen = [];
                foreach ($dosenIdsInput as $dosenId) {
                    if (
                        $bentrokDosen->ketua_sidang_dosen_id == $dosenId ||
                        $bentrokDosen->sekretaris_sidang_dosen_id == $dosenId ||
                        $bentrokDosen->anggota1_sidang_dosen_id == $dosenId ||
                        $bentrokDosen->anggota2_sidang_dosen_id == $dosenId
                    ) {
                        $bentrokNamaDosen[] = Dosen::find($dosenId)->nama;
                    }
                }
                $bentrokNamaDosen = array_unique($bentrokNamaDosen);
    
                return back()->withInput()->withErrors([
                    'dosen_jadwal_bentrok' => 'Dosen berikut sudah memiliki jadwal sidang lain pada waktu tersebut: ' . implode(', ', $bentrokNamaDosen) . '.'
                ]);
            }
    
            // Cari atau buat record sidang. Karena Sidang memiliki relasi hasOne, kita bisa menggunakan updateOrCreate
            $sidang = Sidang::updateOrCreate(
                ['pengajuan_id' => $pengajuan->id],
                [
                    'tanggal_waktu_sidang'     => $combinedDateTime, // Gunakan Carbon object yang sudah digabung
                    'ruangan_sidang'           => $request->ruangan_sidang,
                    'ketua_sidang_dosen_id'    => $request->ketua_sidang_dosen_id,
                    'sekretaris_sidang_dosen_id' => $request->sekretaris_sidang_dosen_id,
                    'anggota1_sidang_dosen_id' => $request->anggota1_sidang_dosen_id,
                    'anggota2_sidang_dosen_id' => $request->anggota2_sidang_dosen_id,
                ]
            );
    
            // Update status pengajuan jika belum 'dosen_ditunjuk' (atau dari 'menunggu_penjadwalan_kaprodi')
            if ($pengajuan->status === 'menunggu_penjadwalan_kaprodi') {
                $pengajuan->update(['status' => 'dosen_ditunjuk']);
            }
    
            return redirect()->route('kaprodi.pengajuan.show', $pengajuan->id)
                             ->with('success', 'Jadwal sidang dan penunjukan dosen berhasil diperbarui.');
        }
    
        // Metode untuk menetapkan jadwal sidang sebagai final
        public function setJadwalFinal(Pengajuan $pengajuan)
        {
            // Pastikan pengajuan sudah berstatus 'dosen_ditunjuk' dan memiliki detail sidang lengkap
            // Hapus pemeriksaan dosen_pembimbing_id dan dosen_penguji1_id
            if ($pengajuan->status !== 'dosen_ditunjuk' || !$pengajuan->sidang || 
                !$pengajuan->sidang->tanggal_waktu_sidang || !$pengajuan->sidang->ruangan_sidang ||
                !$pengajuan->sidang->ketua_sidang_dosen_id || !$pengajuan->sidang->sekretaris_sidang_dosen_id ||
                !$pengajuan->sidang->anggota1_sidang_dosen_id
                // Anggota 2 adalah nullable, jadi tidak perlu divalidasi di sini
                ) {
                return back()->with('error', 'Sidang belum dijadwalkan lengkap atau tidak dalam status yang tepat untuk difinalkan.');
            }
    
            // Anda bisa menambahkan logika pengecekan persetujuan dosen di sini jika ada mekanisme persetujuan dosen secara aktif.
            // Untuk saat ini, kita langsung finalkan.
            $pengajuan->update(['status' => 'sidang_dijadwalkan_final']);
    
            return redirect()->route('kaprodi.pengajuan.show', $pengajuan->id)
                             ->with('success', 'Jadwal sidang berhasil difinalkan. Mahasiswa akan menerima notifikasi.');
        }
    }
    
    /*<?php
    
    namespace App\Http\Controllers\Kaprodi;
    
    use App\Http\Controllers\Controller;
    use Illuminate\Http\Request;
    use App\Models\Pengajuan;
    use App\Models\Dosen; // Untuk dropdown pemilihan dosen
    use Illuminate\Support\Facades\Validator; // Untuk validasi input
    
    class PengajuanKaprodiController extends Controller
    {
        // Method untuk menampilkan daftar pengajuan yang perlu ditinjau Kaprodi
        public function index()
        {
            // Ambil pengajuan yang statusnya 'diverifikasi_admin' (menunggu aksi Kaprodi)
            $pengajuansKaprodi = Pengajuan::where('status', 'diverifikasi_admin')
                                        ->orderBy('created_at', 'desc')
                                        ->get();
    
            // Ambil pengajuan yang sudah di-handle Kaprodi (misal: disetujui, ditolak, dosen ditunjuk)
            $pengajuansSelesaiKaprodi = Pengajuan::whereIn('status', ['dosen_ditunjuk', 'ditolak_kaprodi'])
                                                ->orderBy('created_at', 'desc')
                                                ->get();
    
            // Muat relasi mahasiswa agar data nama dan NIM tersedia di view
            $pengajuansKaprodi->load('mahasiswa');
            $pengajuansSelesaiKaprodi->load('mahasiswa');
    
            return view('kaprodi.pengajuan.index', compact('pengajuansKaprodi', 'pengajuansSelesaiKaprodi'));
        }
    
        // Method untuk menampilkan detail pengajuan Kaprodi
        public function show(Pengajuan $pengajuan)
        {
            // PENTING: Muat relasi yang relevan untuk Kaprodi
            // - mahasiswa: informasi mahasiswa
            // - dokumens: dokumen yang diupload
            // - sidang.ketuaSidang: ketua sidang yang ditunjuk admin (jika ada)
            // - sidang.pembimbing: dosen pembimbing (jika sudah ditunjuk)
            // - sidang.penguji1: dosen penguji 1 (jika sudah ditunjuk)
            // - sidang.penguji2: dosen penguji 2 (jika sudah ditunjuk)
            $pengajuan->load([
                'mahasiswa',
                'dokumens',
                // Ganti nama relasi di sini sesuai dengan yang ada di model Sidang Anda
                'sidang.ketuaSidang',
                'sidang.sekretarisSidang',
                'sidang.anggota1Sidang',
                'sidang.anggota2Sidang'
            ]);
    
            $dosens = Dosen::orderBy('nama')->get();
    
            return view('kaprodi.pengajuan.show', compact('pengajuan', 'dosens'));
        }
    
        // Method untuk menyetujui pengajuan oleh Kaprodi
        public function setujui(Request $request, Pengajuan $pengajuan)
        {
            // Pastikan status pengajuan
            if ($pengajuan->status !== 'diverifikasi_admin') {
                return redirect()->route('kaprodi.pengajuan.show', $pengajuan->id)
                                 ->with('error', 'Pengajuan tidak dapat disetujui pada status saat ini.');
            }
        
            // Validasi input dosen disesuaikan dengan nama kolom Anda
            $validator = Validator::make($request->all(), [
                'ketua_sidang_dosen_id' => 'required|exists:dosens,id', // Kaprodi yang menentukan ketua sidang?
                'sekretaris_sidang_dosen_id' => 'required|exists:dosens,id|different:ketua_sidang_dosen_id',
                'anggota1_sidang_dosen_id' => 'required|exists:dosens,id|different:ketua_sidang_dosen_id|different:sekretaris_sidang_dosen_id',
                'anggota2_sidang_dosen_id' => 'nullable|exists:dosens,id|different:ketua_sidang_dosen_id|different:sekretaris_sidang_dosen_id|different:anggota1_sidang_dosen_id',
            ]);
        
            if ($validator->fails()) {
                return back()->withErrors($validator)->withInput()->with('error_assign_dosen', true);
            }
        
            // Update status pengajuan
            $pengajuan->update(['status' => 'dosen_ditunjuk']);
        
            // Update data sidang dengan dosen-dosen yang ditunjuk
            if ($pengajuan->sidang) {
                $pengajuan->sidang->update([
                    'ketua_sidang_dosen_id' => $request->ketua_sidang_dosen_id,
                    'sekretaris_sidang_dosen_id' => $request->sekretaris_sidang_dosen_id,
                    'anggota1_sidang_dosen_id' => $request->anggota1_sidang_dosen_id,
                    'anggota2_sidang_dosen_id' => $request->anggota2_sidang_dosen_id,
                ]);
            } else {
                // Fallback, jika record sidang belum ada
                $pengajuan->sidang()->create([
                    'ketua_sidang_dosen_id' => $request->ketua_sidang_dosen_id,
                    'sekretaris_sidang_dosen_id' => $request->sekretaris_sidang_dosen_id,
                    'anggota1_sidang_dosen_id' => $request->anggota1_sidang_dosen_id,
                    'anggota2_sidang_dosen_id' => $request->anggota2_sidang_dosen_id,
                ]);
            }
        
            return redirect()->route('kaprodi.pengajuan.show', $pengajuan->id)
                             ->with('success', 'Pengajuan berhasil disetujui dan dosen berhasil ditunjuk.');
        }
    
        // Method untuk menolak pengajuan oleh Kaprodi
        public function tolak(Request $request, Pengajuan $pengajuan)
        {
            // Pastikan pengajuan berstatus 'diverifikasi_admin'
            if ($pengajuan->status !== 'diverifikasi_admin') {
                return redirect()->route('kaprodi.pengajuan.show', $pengajuan->id)
                                 ->with('error', 'Pengajuan tidak dapat ditolak pada status saat ini.');
            }
    
            // Validasi alasan penolakan
            $request->validate([
                'alasan_penolakan_kaprodi' => 'required|string|max:500',
            ]);
    
            // Ubah status pengajuan menjadi 'ditolak_kaprodi'
            $pengajuan->update([
                'status' => 'ditolak_kaprodi',
                'catatan_kaprodi' => $request->alasan_penolakan_kaprodi,
            ]);
    
            return redirect()->route('kaprodi.pengajuan.show', $pengajuan->id)
                             ->with('success', 'Pengajuan berhasil ditolak oleh Kaprodi.');
        }
    
        // Method terpisah untuk menunjuk dosen (jika Kaprodi ingin menunjuk dosen tanpa langsung menyetujui)
        // Atau ini bisa digabungkan ke method setujui seperti yang saya lakukan di atas.
        // Jika Anda ingin Kaprodi hanya bisa menunjuk dosen setelah menyetujui, maka method ini tidak perlu.
        // Saya telah menggabungkan penunjukan dosen ke dalam method setujui di atas.
        // Jika Anda ingin Kaprodi bisa menunjuk dosen kapan saja setelah diverifikasi_admin,
        // dan status pengajuan tidak berubah sampai Kaprodi benar-benar menyetujui,
        // maka method ini bisa digunakan terpisah, dan method 'setujui' hanya akan mengubah status tanpa input dosen.
        /*
        public function tunjukDosen(Request $request, Pengajuan $pengajuan)
        {
            // Pastikan pengajuan berstatus 'diverifikasi_admin'
            if ($pengajuan->status !== 'diverifikasi_admin') {
                return redirect()->route('kaprodi.pengajuan.show', $pengajuan->id)
                                 ->with('error', 'Dosen tidak dapat ditunjuk pada status saat ini.');
            }
    
            $validator = Validator::make($request->all(), [
                'dosen_pembimbing_id' => 'required|exists:dosens,id',
                'dosen_penguji1_id' => 'required|exists:dosens,id|different:dosen_pembimbing_id',
                'dosen_penguji2_id' => 'nullable|exists:dosens,id|different:dosen_pembimbing_id|different:dosen_penguji1_id',
            ]);
    
            if ($validator->fails()) {
                return back()->withErrors($validator)->withInput();
            }
    
            if ($pengajuan->sidang) {
                $pengajuan->sidang->update([
                    'dosen_pembimbing_id' => $request->dosen_pembimbing_id,
                    'dosen_penguji1_id' => $request->dosen_penguji1_id,
                    'dosen_penguji2_id' => $request->dosen_penguji2_id,
                ]);
            } else {
                $pengajuan->sidang()->create([
                    'dosen_pembimbing_id' => $request->dosen_pembimbing_id,
                    'dosen_penguji1_id' => $request->dosen_penguji1_id,
                    'dosen_penguji2_id' => $request->dosen_penguji2_id,
                ]);
            }
    
            // Status tidak berubah menjadi 'dosen_ditunjuk' di sini jika ini terpisah dari setujui
            return redirect()->route('kaprodi.pengajuan.show', $pengajuan->id)
                             ->with('success', 'Dosen pembimbing dan penguji berhasil ditunjuk.');
        }
        
    }*/
    ----------------------------------------------
}

app/Models{
    // FILE: app/Models/Activity.php
    <?php
    
    namespace App\Models;
    
    use Illuminate\Database\Eloquent\Factories\HasFactory;
    use Illuminate\Database\Eloquent\Model; 
    use Illuminate\Database\Eloquent\Relations\BelongsTo;
    
    class Activity extends Model
    {
        use HasFactory;
    
        protected $fillable = [
            'user_id',
            'activity',
            'module',
            'ip_address',
            'user_agent',
        ];
    
        public function user(): BelongsTo
        {
            return $this->belongsTo(User::class);
        }
    }
    ----------------------------------------------
    // FILE: app/Models/Admin.php
    <?php
    
    namespace App\Models;
    
    use Illuminate\Database\Eloquent\Model;
    
    class Admin extends Model
    {
        //
        use HasFactory;
    
        protected $fillable = [
            'nama',
            'email',
        ];
    }
    ----------------------------------------------
    // FILE: app/Models/Dokumen.php
    <?php
    
    namespace App\Models;
    
    use Illuminate\Database\Eloquent\Factories\HasFactory;
    use Illuminate\Database\Eloquent\Model;
    
    class Dokumen extends Model 
    {
        use HasFactory;
    
        protected $fillable = [
            'pengajuan_id',
            'nama_file',
            'path_file',
        ];
    
        public function pengajuan()
        {
            return $this->belongsTo(Pengajuan::class);
        }
    }
    ----------------------------------------------
    // FILE: app/Models/Dosen.php
    <?php
    
    namespace App\Models;
    
    use Illuminate\Database\Eloquent\Factories\HasFactory;
    use Illuminate\Database\Eloquent\Model;
    use Illuminate\Notifications\Notifiable; // Import trait Notifiable
    
    class Dosen extends Model
    {
        use HasFactory, Notifiable; 
    
        protected $fillable = [
            'user_id',
            'nidn',
            'nama', // Ini adalah kolom 'nama' di DB yang akan diisi dari 'nama_lengkap' Excel
            'jurusan',
            'prodi',
            'jenis_kelamin',
            'email',
            'password', // Sertakan jika Anda mengisi kolom password di tabel dosens
        ];
    
        public function user()
        {
            return $this->belongsTo(User::class);
        }
    }
    ----------------------------------------------
    // FILE: app/Models/Kajur.php
    <?php
    
    namespace App\Models;
    
    use Illuminate\Database\Eloquent\Factories\HasFactory;
    use Illuminate\Database\Eloquent\Model;
    
    class Kajur extends Model
    {
        use HasFactory;
    
        protected $fillable = [
            'nama',
            'email',
        ];
    }
    ----------------------------------------------
    // FILE: app/Models/Kaprodi.php
    <?php
    
    namespace App\Models;
    
    use Illuminate\Database\Eloquent\Factories\HasFactory;
    use Illuminate\Database\Eloquent\Model;
    
    class Kaprodi extends Model
    {
        use HasFactory;
    
        protected $fillable = [
            'nama',
            'email',
        ];
    }
    ----------------------------------------------
    // FILE: app/Models/Mahasiswa.php
    <?php
    
    namespace App\Models;
    
    use Illuminate\Database\Eloquent\Factories\HasFactory;
    use Illuminate\Database\Eloquent\Model; 
    
    class Mahasiswa extends Model
    {
        use HasFactory;
    
        protected $fillable = [
            'user_id',
            'nim',
            'nama_lengkap', // Sesuaikan jika nama kolom di DB berbeda
            'jurusan',
            'prodi',
            'jenis_kelamin',
            'kelas',
            'email',    // Tambahkan jika ada di DB
            //'password', // Tambahkan jika ada di DB
            'user_id',
        ];
    
        // Jika ada relasi ke User
        public function user()
        {
            return $this->belongsTo(User::class);
        }
    
        // Relasi ke Pengajuan (jika perlu)
        public function pengajuans()
        {
            return $this->hasMany(Pengajuan::class);
        }
    }
    ----------------------------------------------
    // FILE: app/Models/Pengajuan.php
    <?php
    
    namespace App\Models;
    
    use Illuminate\Database\Eloquent\Factories\HasFactory;
    use Illuminate\Database\Eloquent\Model;
    
    class Pengajuan extends Model
    {
        use HasFactory;
    
        protected $fillable = [
            'mahasiswa_id',
            'jenis_pengajuan',
            'judul_pengajuan', // Tambahkan jika ada kolom ini di tabel pengajuan
            'status',
            'alasan_penolakan_asdmin',
            'alasan_penolakan_kaprodi',
        ];
    
        // Relasi ke Mahasiswa
        public function mahasiswa()
        {
            return $this->belongsTo(Mahasiswa::class, 'mahasiswa_id', 'id');
        }
    
        // Relasi ke Dokumen
        public function dokumens()
        {
            return $this->hasMany(Dokumen::class);
        }
    
        // Relasi ke Sidang 
        public function sidang()
        {
            return $this->hasOne(Sidang::class);
        }
    
        // Hapus relasi-relasi ini dari Pengajuan karena foreign key ada di model Sidang
        /*
        public function pembimbing()
        {
            return $this->belongsTo(Dosen::class, 'dosen_pembimbing_id');
        }
        
        public function penguji1()
        {
            return $this->belongsTo(Dosen::class, 'dosen_penguji1_id');
        }
        
        public function penguji2()
        {
            return $this->belongsTo(Dosen::class, 'dosen_penguji2_id');
        }
        
        public function ketuaSidang()
        {
            return $this->belongsTo(Dosen::class, 'ketua_sidang_dosen_id');
        }
        */
    }
    ----------------------------------------------
    // FILE: app/Models/Sidang.php
    <?php
    
    namespace App\Models;
    
    use Illuminate\Database\Eloquent\Factories\HasFactory;
    use Illuminate\Database\Eloquent\Model;
    
    // Import model Dosen jika sudah ada relasi di sini
    use App\Models\Dosen;
    use App\Models\Pengajuan;
    
    class Sidang extends Model
    {
        use HasFactory;
    
        protected $fillable = [
            'pengajuan_id',
            'ketua_sidang_dosen_id',
            'sekretaris_sidang_dosen_id', 
            'anggota1_sidang_dosen_id',
            'anggota2_sidang_dosen_id',
            'tanggal_waktu_sidang', // Pastikan nama kolom ini sesuai di database
            'ruangan_sidang',       // Pastikan nama kolom ini sesuai di database
            'dosen_pembimbing_id',
            'dosen_penguji1_id', // Ini untuk pembimbing 2
            // --- KOLOM BARU DITAMBAHKAN ---
            'persetujuan_ketua_sidang',
            'persetujuan_sekretaris_sidang',
            'persetujuan_anggota1_sidang',
            'persetujuan_anggota2_sidang',
            'persetujuan_dosen_pembimbing',
            'persetujuan_dosen_penguji1',
            // --- AKHIR KOLOM BARU ---
            'status', // Pastikan kolom status sidang juga ada di fillable
        ];
    
        // Relasi ke Pengajuan
        public function pengajuan()
        {
            return $this->belongsTo(Pengajuan::class);
        }
    
        public function ketuaSidang()
        {
            return $this->belongsTo(Dosen::class, 'ketua_sidang_dosen_id');
        }
    
        public function sekretarisSidang()
        {
            return $this->belongsTo(Dosen::class, 'sekretaris_sidang_dosen_id');
        }
    
        public function anggota1Sidang()
        {
            return $this->belongsTo(Dosen::class, 'anggota1_sidang_dosen_id');
        }
    
        public function anggota2Sidang()
        {
            return $this->belongsTo(Dosen::class, 'anggota2_sidang_dosen_id');
        }
    
        // --- TAMBAHKAN RELASI INI ---
        public function dosenPembimbing()
        {
            return $this->belongsTo(Dosen::class, 'dosen_pembimbing_id');
        }
    
        public function dosenPenguji1()
        {
            return $this->belongsTo(Dosen::class, 'dosen_penguji1_id');
        }
    
        public function dosenPenguji2()
        {
            return $this->belongsTo(Dosen::class, 'dosen_penguji2_id');
        }
        // --- AKHIR TAMBAHAN RELASI ---
    }
    ----------------------------------------------
    // FILE: app/Models/User.php
    <?php
    
    namespace App\Models;
    
    // use Illuminate\Contracts\Auth\MustVerifyEmail;
    use Illuminate\Database\Eloquent\Factories\HasFactory;
    use Illuminate\Foundation\Auth\User as Authenticatable;
    use Illuminate\Notifications\Notifiable;
    use App\Models\Mahasiswa;
    use App\Models\Dosen; // Jika Anda juga membuat relasi dosen
    
    class User extends Authenticatable
    {
        /** @use HasFactory<\Database\Factories\UserFactory> */
        use HasFactory, Notifiable;
    
        /**
         * The attributes that are mass assignable.
         *
         * @var list<string>
         */
        protected $fillable = [
            'name',
            'email',
            'password',
            'role',
        ];
    
        /**
         * The attributes that should be hidden for serialization.
         *
         * @var list<string>
         */
        protected $hidden = [
            'password',
            'remember_token',
        ]; 
    
        /**
         * Get the attributes that should be cast.
         *
         * @return array<string, string>
         */
        protected function casts(): array
        {
            return [
                'email_verified_at' => 'datetime',
                'password' => 'hashed',
            ];
        }
    
        // Dapatkan mahasiswa yang terkait dengan User ini.
        public function mahasiswa()
        {
            // Asumsi: Di tabel 'mahasiswas', ada kolom 'user_id' yang merupakan foreign key ke 'id' user.
            return $this->hasOne(Mahasiswa::class, 'user_id');
        }
    
        /**
         * Dapatkan dosen yang terkait dengan User ini. (Jika ada relasi dosen)
         */
        public function dosen()
        {
            // Asumsi: Di tabel 'dosens', ada kolom 'user_id' yang merupakan foreign key ke 'id' user.
            return $this->hasOne(Dosen::class);
        }
    }
    ----------------------------------------------
}

database/migrations{
    // FILE: database/migrations/0001_01_01_000000_create_users_table.php
    <?php
    
    use Illuminate\Database\Migrations\Migration;
    use Illuminate\Database\Schema\Blueprint;
    use Illuminate\Support\Facades\Schema;
    
    return new class extends Migration
    {
        /**
         * Run the migrations.
         */
        public function up(): void
        {
            Schema::create('users', function (Blueprint $table) {
                $table->id();
                $table->string('name');
                $table->string('email')->unique();
                $table->timestamp('email_verified_at')->nullable();
                $table->string('password');
                $table->rememberToken();
                $table->timestamps();
            });
    
            Schema::create('password_reset_tokens', function (Blueprint $table) {
                $table->string('email')->primary();
                $table->string('token');
                $table->timestamp('created_at')->nullable();
            });
    
            Schema::create('sessions', function (Blueprint $table) {
                $table->string('id')->primary();
                $table->foreignId('user_id')->nullable()->index();
                $table->string('ip_address', 45)->nullable();
                $table->text('user_agent')->nullable();
                $table->longText('payload');
                $table->integer('last_activity')->index();
            });
        }
    
        /**
         * Reverse the migrations.
         */
        public function down(): void
        {
            Schema::dropIfExists('users');
            Schema::dropIfExists('password_reset_tokens');
            Schema::dropIfExists('sessions');
        }
    };
    ----------------------------------------------
    // FILE: database/migrations/0001_01_01_000001_create_cache_table.php
    <?php
    
    use Illuminate\Database\Migrations\Migration;
    use Illuminate\Database\Schema\Blueprint;
    use Illuminate\Support\Facades\Schema;
    
    return new class extends Migration
    {
        /**
         * Run the migrations.
         */
        public function up(): void
        {
            Schema::create('cache', function (Blueprint $table) {
                $table->string('key')->primary();
                $table->mediumText('value');
                $table->integer('expiration');
            });
    
            Schema::create('cache_locks', function (Blueprint $table) {
                $table->string('key')->primary();
                $table->string('owner');
                $table->integer('expiration');
            });
        }
    
        /**
         * Reverse the migrations.
         */
        public function down(): void
        {
            Schema::dropIfExists('cache');
            Schema::dropIfExists('cache_locks');
        }
    };
    ----------------------------------------------
    // FILE: database/migrations/0001_01_01_000002_create_jobs_table.php
    <?php
    
    use Illuminate\Database\Migrations\Migration;
    use Illuminate\Database\Schema\Blueprint;
    use Illuminate\Support\Facades\Schema;
    
    return new class extends Migration
    {
        /**
         * Run the migrations.
         */
        public function up(): void
        {
            Schema::create('jobs', function (Blueprint $table) {
                $table->id();
                $table->string('queue')->index();
                $table->longText('payload');
                $table->unsignedTinyInteger('attempts');
                $table->unsignedInteger('reserved_at')->nullable();
                $table->unsignedInteger('available_at');
                $table->unsignedInteger('created_at');
            });
    
            Schema::create('job_batches', function (Blueprint $table) {
                $table->string('id')->primary();
                $table->string('name');
                $table->integer('total_jobs');
                $table->integer('pending_jobs');
                $table->integer('failed_jobs');
                $table->longText('failed_job_ids');
                $table->mediumText('options')->nullable();
                $table->integer('cancelled_at')->nullable();
                $table->integer('created_at');
                $table->integer('finished_at')->nullable();
            });
    
            Schema::create('failed_jobs', function (Blueprint $table) {
                $table->id();
                $table->string('uuid')->unique();
                $table->text('connection');
                $table->text('queue');
                $table->longText('payload');
                $table->longText('exception');
                $table->timestamp('failed_at')->useCurrent();
            });
        }
    
        /**
         * Reverse the migrations.
         */
        public function down(): void
        {
            Schema::dropIfExists('jobs');
            Schema::dropIfExists('job_batches');
            Schema::dropIfExists('failed_jobs');
        }
    };
    ----------------------------------------------
    // FILE: database/migrations/2025_05_19_170458_create_admins_table.php
    <?php
    
    use Illuminate\Database\Migrations\Migration;
    use Illuminate\Database\Schema\Blueprint;
    use Illuminate\Support\Facades\Schema;
    
    return new class extends Migration
    {
        public function up(): void
        {
            Schema::create('admins', function (Blueprint $table) {
                $table->id();
                $table->string('nama');
                $table->string('email')->unique();
                $table->timestamps();
            });
        }
    
        public function down(): void
        {
            Schema::dropIfExists('admins');
        }
    };
    ----------------------------------------------
    // FILE: database/migrations/2025_05_19_170459_create_dosens_table.php
    <?php
    
    use Illuminate\Database\Migrations\Migration;
    use Illuminate\Database\Schema\Blueprint;
    use Illuminate\Support\Facades\Schema;
    
    return new class extends Migration
    {
        public function up(): void
        {
            Schema::create('dosens', function (Blueprint $table) {
                $table->id();
                // Kolom yang ada di `desc dosens;` Anda
                $table->foreignId('user_id')->nullable()->unique()->constrained('users')->onDelete('set null'); // Jika dosen punya user_id
                $table->string('nidn')->unique(); // Dari desc dosens
                $table->string('nama');
                $table->string('jurusan');      // Dari desc dosens
                $table->string('prodi');        // Dari desc dosens
                $table->string('jenis_kelamin'); // Dari desc dosens
    
                // Kolom yang kita tambahkan
                $table->string('email')->unique()->nullable();
                $table->string('password');
                $table->rememberToken();
    
                $table->timestamps();
            });
        }
    
        public function down(): void
        {
            Schema::dropIfExists('dosens');
        }
    };
    ----------------------------------------------
    // FILE: database/migrations/2025_05_19_170459_create_mahasiswas_table.php
    <?php
    
    use Illuminate\Database\Migrations\Migration;
    use Illuminate\Database\Schema\Blueprint;
    use Illuminate\Support\Facades\Schema;
    
    return new class extends Migration
    {
        public function up(): void
        {
            Schema::create('mahasiswas', function (Blueprint $table) {
                $table->id();
                $table->string('nim')->unique();
                $table->string('nama_lengkap');
                $table->string('jurusan');
                $table->string('prodi');
                $table->string('jenis_kelamin');
                $table->string('kelas');
                $table->timestamps();
            });
        }
    
        public function down(): void
        {
            Schema::dropIfExists('mahasiswas');
        }
    };
    ----------------------------------------------
    // FILE: database/migrations/2025_05_19_170500_create_kajurs_table.php
    <?php
    
    use Illuminate\Database\Migrations\Migration;
    use Illuminate\Database\Schema\Blueprint;
    use Illuminate\Support\Facades\Schema;
    
    return new class extends Migration
    {
        public function up(): void
        {
            Schema::create('kajurs', function (Blueprint $table) {
                $table->id();
                $table->string('nama');
                $table->string('email')->unique();
                $table->timestamps();
            });
        }
    
        public function down(): void
        {
            Schema::dropIfExists('kajurs');
        }
    };
    ----------------------------------------------
    // FILE: database/migrations/2025_05_19_170500_create_kaprodis_table.php
    <?php
    
    use Illuminate\Database\Migrations\Migration;
    use Illuminate\Database\Schema\Blueprint;
    use Illuminate\Support\Facades\Schema;
    
    return new class extends Migration
    {
        public function up(): void
        {
            Schema::create('kaprodis', function (Blueprint $table) {
                $table->id();
                $table->string('nama');
                $table->string('email')->unique();
                $table->timestamps();
            });
        }
    
        public function down(): void
        {
            Schema::dropIfExists('kaprodis');
        }
    };
    ----------------------------------------------
    // FILE: database/migrations/2025_05_19_170501_create_pengajuans_table.php
    <?php
    
    use Illuminate\Database\Migrations\Migration;
    use Illuminate\Database\Schema\Blueprint;
    use Illuminate\Support\Facades\Schema;
    
    return new class extends Migration
    {
        public function up(): void
        {
            Schema::create('pengajuans', function (Blueprint $table) {
                $table->id();
                $table->foreignId('mahasiswa_id')->constrained('users')->onDelete('cascade');
                $table->string('jenis_pengajuan'); // 'TA' atau 'PKL'
                $table->string('status'); // Misalnya, 'diajukan', 'disetujui', 'ditolak'
                $table->timestamps();
            });
        }
    
        public function down(): void
        {
            Schema::dropIfExists('pengajuans');
        }
    };
    ----------------------------------------------
    // FILE: database/migrations/2025_05_19_170501_create_sidangs_table.php
    <?php
    
    use Illuminate\Database\Migrations\Migration;
    use Illuminate\Database\Schema\Blueprint;
    use Illuminate\Support\Facades\Schema;
    
    return new class extends Migration
    {
        public function up(): void
        {
            Schema::create('sidangs', function (Blueprint $table) {
                $table->id();
                // Foreign key ke pengajuan yang terkait
                $table->foreignId('pengajuan_id')->constrained('pengajuans')->onDelete('cascade');
    
                // Dosen Peserta Sidang (foreign keys ke tabel dosens)
                $table->foreignId('ketua_sidang_dosen_id')->nullable()->constrained('dosens')->onDelete('set null');
                $table->foreignId('sekretaris_sidang_dosen_id')->nullable()->constrained('dosens')->onDelete('set null');
                $table->foreignId('anggota1_sidang_dosen_id')->nullable()->constrained('dosens')->onDelete('set null');
                $table->foreignId('anggota2_sidang_dosen_id')->nullable()->constrained('dosens')->onDelete('set null');
    
                // Tanggal dan Waktu Sidang (opsional, bisa ditambahkan nanti)
                $table->dateTime('tanggal_waktu_sidang')->nullable();
                $table->string('ruangan_sidang')->nullable();
    
                $table->timestamps();
            });
        }
    
        /**
         * Reverse the migrations.
         */
        public function down(): void
        {
            Schema::dropIfExists('sidangs');
        }
    };
    ----------------------------------------------
    // FILE: database/migrations/2025_05_19_170502_create_dokumens_table.php
    <?php
    
    use Illuminate\Database\Migrations\Migration;
    use Illuminate\Database\Schema\Blueprint;
    use Illuminate\Support\Facades\Schema;
    
    return new class extends Migration
    {
        public function up(): void
        {
            Schema::create('dokumens', function (Blueprint $table) {
                $table->id();
                $table->foreignId('pengajuan_id')->constrained();
                $table->string('nama_file');
                $table->string('path_file');
                $table->timestamps();
            });
        }
    
        public function down(): void
        {
            Schema::dropIfExists('dokumens');
        }
    };
    ----------------------------------------------
    // FILE: database/migrations/2025_05_19_183620_create_activities_table.php
    <?php
    
    use Illuminate\Database\Migrations\Migration;
    use Illuminate\Database\Schema\Blueprint;
    use Illuminate\Support\Facades\Schema;
    
    class CreateActivitiesTable extends Migration
    {
        /**
         * Run the migrations.
         *
         * @return void
         */
        public function up()
        {
            Schema::create('activities', function (Blueprint $table) {
                $table->id();
                $table->unsignedBigInteger('user_id')->nullable(); // Siapa yang melakukan aktivitas (jika terkait user)
                $table->string('activity'); // Deskripsi aktivitas
                $table->string('module')->nullable(); // Modul yang terkait dengan aktivitas
                $table->string('ip_address')->nullable(); // Alamat IP user
                $table->text('user_agent')->nullable(); // Informasi browser user
                $table->timestamps();
    
                $table->foreign('user_id')->references('id')->on('users')->onDelete('set null');
            });
        }
    
        /**
         * Reverse the migrations.
         *
         * @return void
         */
        public function down()
        {
            Schema::dropIfExists('activities');
        }
    }
    ----------------------------------------------
    // FILE: database/migrations/2025_05_19_195938_add_role_to_users_table.php
    <?php
    
    use Illuminate\Database\Migrations\Migration;
    use Illuminate\Database\Schema\Blueprint;
    use Illuminate\Support\Facades\Schema;
    
    return new class extends Migration
    {
        /**
         * Run the migrations.
         */
        public function up(): void
        {
            Schema::table('users', function (Blueprint $table) {
                $table->string('role')->default('mahasiswa'); // Tambahkan kolom 'role' dengan nilai default 'mahasiswa'
                // Anda bisa menambahkan indeks jika sering melakukan query berdasarkan role
                $table->index('role');
            });
        }
    
        /**
         * Reverse the migrations.
         */
        public function down(): void
        {
            Schema::table('users', function (Blueprint $table) {
                $table->dropColumn('role'); // Hapus kolom 'role' jika migrasi di-rollback
            });
        }
    };
    ----------------------------------------------
    // FILE: database/migrations/2025_05_19_200352_add_user_id_to_mahasiswas_table.php
    <?php
    
    use Illuminate\Database\Migrations\Migration;
    use Illuminate\Database\Schema\Blueprint;
    use Illuminate\Support\Facades\Schema;
    
    return new class extends Migration
    {
        /**
         * Run the migrations.
         */
        public function up(): void
        {
            Schema::table('mahasiswas', function (Blueprint $table) {
                $table->unsignedBigInteger('user_id')->unique(); // Tambahkan kolom 'user_id' sebagai unsigned big integer dan unique
                $table->foreign('user_id')->references('id')->on('users')->onDelete('cascade'); // Buat foreign key ke tabel 'users'
            });
        }
        
    
        /**
         * Reverse the migrations.
         */
        public function down(): void
        {
            Schema::table('mahasiswas', function (Blueprint $table) {
                $table->dropForeign(['user_id']); // Hapus foreign key
                $table->dropColumn('user_id'); // Hapus kolom 'user_id'
            });
        }
    };
    ----------------------------------------------
    // FILE: database/migrations/2025_05_21_103532_add_catatan_admin_to_pengajuans_table.php
    <?php
    
    use Illuminate\Database\Migrations\Migration;
    use Illuminate\Database\Schema\Blueprint;
    use Illuminate\Support\Facades\Schema;
    
    return new class extends Migration
    {
        /**
         * Run the migrations.
         */
        public function up(): void
        {
            Schema::table('pengajuans', function (Blueprint $table) {
                $table->text('catatan_admin')->nullable()->after('status'); // Tambahkan kolom ini
            });
        }
    
        /**
         * Reverse the migrations.
         */
        public function down(): void
        {
            Schema::table('pengajuans', function (Blueprint $table) {
                $table->dropColumn('catatan_admin'); // Hapus kolom jika rollback
            });
        }
    };
    ----------------------------------------------
    // FILE: database/migrations/2025_05_21_104156_add_catatan_kaprodi_to_pengajuans_table.php
    <?php
    
    use Illuminate\Database\Migrations\Migration;
    use Illuminate\Database\Schema\Blueprint;
    use Illuminate\Support\Facades\Schema;
    
    return new class extends Migration
    {
        /**
         * Run the migrations.
         */
        public function up(): void
        {
            Schema::table('pengajuans', function (Blueprint $table) {
                $table->text('catatan_kaprodi')->nullable()->after('catatan_admin'); // Tambahkan kolom ini
            });
        }
    
        /**
         * Reverse the migrations.
         */
        public function down(): void
        {
            Schema::table('pengajuans', function (Blueprint $table) {
                $table->dropColumn('catatan_kaprodi'); // Hapus kolom jika rollback
            });
        }
    };
    ----------------------------------------------
    // FILE: database/migrations/2025_05_21_151930_add_dosen_to_sidangs_table.php
    <?php
    
    use Illuminate\Database\Migrations\Migration;
    use Illuminate\Database\Schema\Blueprint;
    use Illuminate\Support\Facades\Schema;
    
    return new class extends Migration
    {
        /**
         * Run the migrations.
         */
        public function up()
        {
            Schema::table('sidangs', function (Blueprint $table) {
                $table->foreignId('dosen_pembimbing_id')->nullable()->constrained('dosens')->onDelete('set null');
                $table->foreignId('dosen_penguji1_id')->nullable()->constrained('dosens')->onDelete('set null');
                $table->foreignId('dosen_penguji2_id')->nullable()->constrained('dosens')->onDelete('set null');
                // Jika ada ketua sidang di tabel sidang
                // $table->foreignId('ketua_sidang_dosen_id')->nullable()->constrained('dosens')->onDelete('set null');
            });
        }
        
        public function down()
        {
            Schema::table('sidangs', function (Blueprint $table) {
                $table->dropForeign(['dosen_pembimbing_id']);
                $table->dropForeign(['dosen_penguji1_id']);
                $table->dropForeign(['dosen_penguji2_id']);
                // $table->dropForeign(['ketua_sidang_dosen_id']);
            
                $table->dropColumn(['dosen_pembimbing_id', 'dosen_penguji1_id', 'dosen_penguji2_id']);
                // $table->dropColumn(['ketua_sidang_dosen_id']);
            });
        }
    };
    ----------------------------------------------
    // FILE: database/migrations/2025_05_22_075409_add_email_to_mahasiswas_table.php
    <?php
    
    use Illuminate\Database\Migrations\Migration;
    use Illuminate\Database\Schema\Blueprint;
    use Illuminate\Support\Facades\Schema;
    
    return new class extends Migration
    {
        /**
         * Run the migrations.
         */
        public function up(): void
        {
            Schema::table('mahasiswas', function (Blueprint $table) {
                // Tambahkan kolom 'email'
                // Penting: Pastikan kolom ini sesuai dengan kebutuhan Anda.
                // Jika email harus unik di tabel mahasiswas, gunakan ->unique().
                // Jika email boleh null, tambahkan ->nullable().
                // Saya sarankan unique dan tidak nullable jika email akan digunakan sebagai identitas.
                $table->string('email')->unique()->after('jenis_kelamin'); // Atau setelah kolom lain yang relevan
                // Jika Anda juga menyimpan password di tabel mahasiswas, dan itu diisi,
                // pastikan kolom password juga sudah ada atau tambahkan di sini jika belum.
                // $table->string('password')->after('email')->nullable(); // Jika perlu
            });
        }
    
        /**
         * Reverse the migrations.
         */
        public function down(): void
        {
            Schema::table('mahasiswas', function (Blueprint $table) {
                // Ketika rollback, hapus kolom 'email'
                $table->dropColumn('email');
            });
        }
    };
    ----------------------------------------------
    // FILE: database/migrations/2025_05_29_080322_add_columns_to_pengajuans_table.php
    <?php
    
    use Illuminate\Database\Migrations\Migration;
    use Illuminate\Database\Schema\Blueprint;
    use Illuminate\Support\Facades\Schema;
    
    return new class extends Migration
    {
        /**
         * Run the migrations.
         */
        public function up(): void
        {
            Schema::table('pengajuans', function (Blueprint $table) {
                // Menambahkan kolom jenis_pengajuan jika belum ada
                if (!Schema::hasColumn('pengajuans', 'jenis_pengajuan')) {
                    $table->string('jenis_pengajuan')->after('mahasiswa_id'); // Sesuaikan posisi jika perlu
                }
                // Menambahkan kolom status jika belum ada
                if (!Schema::hasColumn('pengajuans', 'status')) {
                    $table->string('status')->default('draft')->after('jenis_pengajuan'); // Default status 'draft'
                }
            });
        }
    
        /**
         * Reverse the migrations.
         */
        public function down(): void
        {
            Schema::table('pengajuans', function (Blueprint $table) {
                $table->dropColumn('jenis_pengajuan');
                $table->dropColumn('status');
            });
        }
    };
    ----------------------------------------------
    // FILE: database/migrations/2025_06_02_101730_add_dosen_approval_status_to_sidangs_table.php
    <?php
    
    use Illuminate\Database\Migrations\Migration;
    use Illuminate\Database\Schema\Blueprint;
    use Illuminate\Support\Facades\Schema;
    
    return new class extends Migration
    {
        /**
         * Run the migrations.
         */
        public function up(): void
        {
            Schema::table('sidangs', function (Blueprint $table) {
                // Kolom untuk melacak status persetujuan masing-masing dosen
                $table->enum('persetujuan_ketua_sidang', ['pending', 'setuju', 'tolak'])->default('pending')->after('ketua_sidang_dosen_id');
                $table->enum('persetujuan_sekretaris_sidang', ['pending', 'setuju', 'tolak'])->default('pending')->after('sekretaris_sidang_dosen_id');
                $table->enum('persetujuan_anggota1_sidang', ['pending', 'setuju', 'tolak'])->default('pending')->after('anggota1_sidang_dosen_id');
                $table->enum('persetujuan_anggota2_sidang', ['pending', 'setuju', 'tolak'])->default('pending')->after('anggota2_sidang_dosen_id');
                // Tambahkan juga untuk dosen pembimbing jika perlu konfirmasi mereka juga
                $table->enum('persetujuan_dosen_pembimbing', ['pending', 'setuju', 'tolak'])->default('pending')->after('dosen_pembimbing_id');
                $table->enum('persetujuan_dosen_penguji1', ['pending', 'setuju', 'tolak'])->default('pending')->after('dosen_penguji1_id'); // Ini adalah pembimbing 2
            });
        }
    
        /**
         * Reverse the migrations.
         */
        public function down(): void
        {
            Schema::table('sidangs', function (Blueprint $table) {
                $table->dropColumn([
                    'persetujuan_ketua_sidang',
                    'persetujuan_sekretaris_sidang',
                    'persetujuan_anggota1_sidang',
                    'persetujuan_anggota2_sidang',
                    'persetujuan_dosen_pembimbing',
                    'persetujuan_dosen_penguji1',
                ]);
            });
        }
    };
    ----------------------------------------------
    // FILE: database/migrations/2025_06_02_110640_add_status_to_sidangs_table.php
    <?php
    
    use Illuminate\Database\Migrations\Migration;
    use Illuminate\Database\Schema\Blueprint;
    use Illuminate\Support\Facades\Schema;
    
    return new class extends Migration
    {
        /**
         * Run the migrations.
         */
        public function up(): void
        {
            Schema::table('sidangs', function (Blueprint $table) {
                // Tambahkan kolom 'status' setelah 'pengajuan_id' atau di akhir
                // Gunakan after() jika Anda ingin menempatkannya di posisi tertentu
                $table->enum('status', [
                    'belum_dijadwalkan',
                    'dosen_ditunjuk',
                    'dosen_menyetujui',
                    'dijadwalkan',
                    'ditolak_jadwal', // Jika ada dosen yang menolak jadwal atau kajur menolak
                    'selesai',
                    // Tambahkan status lain yang relevan di masa depan
                ])->default('belum_dijadwalkan')->after('pengajuan_id'); // Atau setelah kolom terakhir jika tidak spesifik
            });
        }
    
        /**
         * Reverse the migrations.
         */
        public function down(): void
        {
            Schema::table('sidangs', function (Blueprint $table) {
                $table->dropColumn('status');
            });
        }
    };
    ----------------------------------------------
    // FILE: database/migrations/2025_06_02_161127_create_notifications_table.php
    <?php
    
    use Illuminate\Database\Migrations\Migration;
    use Illuminate\Database\Schema\Blueprint;
    use Illuminate\Support\Facades\Schema;
    
    return new class extends Migration
    { 
        /**
         * Run the migrations.
         */
        public function up(): void
        {
            Schema::create('notifications', function (Blueprint $table) {
                $table->uuid('id')->primary();
                $table->string('type');
                $table->morphs('notifiable');
                $table->text('data');
                $table->timestamp('read_at')->nullable();
                $table->timestamps();
            });
        }
    
        /**
         * Reverse the migrations.
         */
        public function down(): void
        {
            Schema::dropIfExists('notifications');
        }
    };
    ----------------------------------------------
}

resources/views{
    // FILE: resources/views/admin/dashboard.blade.php
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Admin Dashboard</title>
        <meta name="csrf-token" content="{{ csrf_token() }}">
    </head>
    <body>
    
        <h2>Admin Dashboard</h2>
    
        <p>Selamat datang, Admin!</p>
    
        <hr> {{-- Garis pemisah untuk menu navigasi --}}
    
        <h3>Menu Navigasi</h3>
        <ul>
            <li><a href="{{ route('admin.dashboard') }}">Dashboard</a></li>
            <li><a href="{{ route('admin.mahasiswa.index') }}">Manajemen Mahasiswa</a></li>
            <li><a href="{{ route('admin.dosen.index') }}">Manajemen Dosen</a></li>
            {{-- Link ke daftar pengajuan yang perlu diverifikasi admin --}}
            <li><a href="{{ route('admin.pengajuan.verifikasi.index') }}">Verifikasi Pengajuan Sidang</a></li>
            {{-- Anda bisa menambahkan link ke daftar pengajuan lama jika masih digunakan --}}
            {{-- <li><a href="{{ route('admin.pengajuan.index') }}">Daftar Semua Pengajuan (Lama)</a></li> --}}        {{-- Tambahkan link lain sesuai kebutuhan --}}
            <li><a href="{{ route('admin.sidang.index') }}">Manajemen Sidang</a></li>
        </ul>
    
        <hr>
    
        <form action="{{ route('admin.logout') }}" method="POST">
            @csrf <button type="submit">Logout</button>
        </form>
    
    </body>
    </html>
    ----------------------------------------------
    // FILE: resources/views/admin/login.blade.php
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Admin Login</title>
    </head>
    <body>
    
        <h2>Admin Login</h2>
    
        @if ($errors->any())
            <div>
                <ul>
                    @foreach ($errors->all() as $error)
                        <li>{{ $error }}</li>
                    @endforeach
                </ul>
            </div>
        @endif
    
        <form method="POST" action="{{ route('admin.login') }}">
            @csrf
    
            <div>
                <label for="email">Email</label>
                <input type="email" name="email" id="email" required>
            </div>
    
            <div>
                <label for="password">Password</label>
                <input type="password" name="password" id="password" required>
            </div>
    
            <button type="submit">Login</button>
        </form>
    
    </body>
    </html>
    ----------------------------------------------
    // FILE: resources/views/admin/activities/index.blade.php
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Log Aktivitas</title>
    </head>
    <body>
    
        <h2>Log Aktivitas</h2>
    
        <table>
            <thead>
                <tr>
                    <th>Waktu</th>
                    <th>User</th>
                    <th>Aktivitas</th>
                    <th>Modul</th>
                    <th>IP Address</th>
                    <th>User Agent</th>
                </tr>
            </thead>
            <tbody>
                @foreach ($activities as $activity)
                    <tr>
                        <td>{{ $activity->created_at }}</td>
                        <td>{{ $activity->user ? $activity->user->name : 'Sistem' }}</td>
                        <td>{{ $activity->activity }}</td>
                        <td>{{ $activity->module }}</td>
                        <td>{{ $activity->ip_address }}</td>
                        <td>{{ $activity->user_agent }}</td>
                    </tr>
                @endforeach
            </tbody>
        </table>
    
        {{ $activities->links() }}  </body>
    </html>
    ----------------------------------------------
    // FILE: resources/views/admin/dosen/create.blade.php
    <!DOCTYPE html>
    <html lang="en">
    
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Tambah Dosen</title>
    </head>
    
    <body>
    
        <h2>Tambah Dosen</h2>
    
        @if ($errors->any())
        <div style="color: red;"> {{-- Menambahkan style agar lebih terlihat --}}
            <ul>
                @foreach ($errors->all() as $error)
                <li>{{ $error }}</li>
                @endforeach
            </ul>
        </div>
        @endif
    
        <form method="POST" action="{{ route('admin.dosen.store') }}">
            @csrf
    
            <div>
                <label for="nidn">NIDN:</label>
                <input type="text" name="nidn" id="nidn" value="{{ old('nidn') }}" required>
            </div>
    
            <div>
                <label for="nama">Nama Dosen:</label> {{-- Mengganti nama_lengkap menjadi nama --}}
                <input type="text" name="nama" id="nama" value="{{ old('nama') }}" required>
            </div>
    
            <div>
                <label for="jurusan">Jurusan:</label> {{-- Input baru --}}
                <input type="text" name="jurusan" id="jurusan" value="{{ old('jurusan') }}" required>
            </div>
    
            <div>
                <label for="prodi">Program Studi:</label> {{-- Input baru --}}
                <input type="text" name="prodi" id="prodi" value="{{ old('prodi') }}" required>
            </div>
    
            <div>
                <label for="jenis_kelamin">Jenis Kelamin:</label>
                <select name="jenis_kelamin" id="jenis_kelamin" required>
                    <option value="Laki-laki" {{ old('jenis_kelamin')=='Laki-laki' ? 'selected' : '' }}>Laki-laki</option>
                    <option value="Perempuan" {{ old('jenis_kelamin')=='Perempuan' ? 'selected' : '' }}>Perempuan</option>
                </select>
            </div>
    
            <div>
                <label for="email">Email (untuk Login):</label> {{-- Input baru --}}
                <input type="email" name="email" id="email" value="{{ old('email') }}" required>
            </div>
    
            <div>
                <label for="password">Password (untuk Login):</label> {{-- Input baru --}}
                <input type="password" name="password" id="password" required>
            </div>
    
            <button type="submit">Simpan Dosen</button>
        </form>
    
    </body>
    
    </html>
    ----------------------------------------------
    // FILE: resources/views/admin/dosen/edit.blade.php
    <!DOCTYPE html>
    <html lang="en">
    
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Edit Dosen</title>
    </head>
    
    <body>
    
        <h2>Edit Dosen</h2>
    
        @if ($errors->any())
        <div>
            <ul>
                @foreach ($errors->all() as $error)
                <li>{{ $error }}</li>
                @endforeach
            </ul>
        </div>
        @endif
    
        <form method="POST" action="{{ route('admin.dosen.update', $dosen->id) }}">
            @csrf
            @method('PUT')
    
            <div>
                <label for="nidn">NIDN</label>
                <input type="text" name="nidn" id="nidn" value="{{ old('nidn', $dosen->nidn) }}" required>
            </div>
    
            <div>
                <label for="nama_lengkap">Nama Lengkap</label>
                <input type="text" name="nama_lengkap" id="nama_lengkap" value="{{ old('nama_lengkap', $dosen->nama_lengkap) }}"
                    required>
            </div>
    
            <div>
                <label for="jenis_kelamin">Jenis Kelamin</label>
                <select name="jenis_kelamin" id="jenis_kelamin" required>
                    <option value="Laki-laki" {{ old('jenis_kelamin', $dosen->jenis_kelamin)=='Laki-laki' ? 'selected' : '' }}>Laki-laki
                    </option>
                    <option value="Perempuan" {{ old('jenis_kelamin', $dosen->jenis_kelamin)=='Perempuan' ? 'selected' : '' }}>Perempuan
                    </option>
                </select>
            </div>
    
            <button type="submit">Update</button>
        </form>
    
    </body>
    
    </html>
    ----------------------------------------------
    // FILE: resources/views/admin/dosen/import.blade.php
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Impor Data Dosen</title>
    </head>
    <body>
        <h1>Impor Data Dosen dari Excel</h1>
    
        @if (session('success'))
            <div style="color: green;">
                {{ session('success') }}
            </div>
        @endif
    
        @if (session('error'))
            <div style="color: red;">
                {{ session('error') }}
            </div>
        @endif
    
        <form action="{{ route('admin.dosen.import') }}" method="POST" enctype="multipart/form-data">
            @csrf
            <div>
                <label for="file">Pilih File Excel (.xls, .xlsx, .csv):</label>
                <input type="file" name="file" id="file" required>
                @error('file')
                    <div style="color: red;">{{ $message }}</div>
                @enderror
            </div>
            <br>
            <button type="submit">Impor Data</button>
        </form>
    
        <p>Pastikan file Excel Anda memiliki kolom dengan header persis seperti di bawah ini (case-insensitive):</p>
        <table>
            <thead>
                <tr>
                    <th>NIDN</th>
                    <th>Nama Lengkap</th>
                    <th>Jurusan</th>
                    <th>Prodi</th>
                    <th>Jenis Kelamin</th>
                    <th>Email</th> {{-- <--- PENTING: Tambahkan header ini --}}
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>197001012000011001</td>
                    <td>Prof. Dr. Andi Wijaya</td>
                    <td>Teknik Informatika</td>
                    <td>Sistem Informasi</td>
                    <td>Laki-laki</td>
                    <td>andi.wijaya@example.com</td> {{-- <--- PENTING: Tambahkan contoh email --}}
                </tr>
                <tr>
                    <td>198005102005021002</td>
                    <td>Dr. Budi Santoso</td>
                    <td>Teknik Informatika</td>
                    <td>Teknik Komputer</td>
                    <td>Laki-laki</td>
                    <td>budi.santoso@example.com</td> {{-- <--- PENTING: Tambahkan contoh email --}}
                </tr>
            </tbody>
        </table>
        <p>Password akun dosen akan disetel default `password123`. Harap informasikan kepada dosen untuk mengubahnya setelah login pertama kali.</p>
    
        <br>
        <a href="{{ route('admin.dashboard') }}">Kembali ke Dashboard Admin</a>
        <br>
        <a href="{{ route('admin.dosen.index') }}">Lihat Daftar Dosen</a>
    
    </body>
    </html>
    ----------------------------------------------
    // FILE: resources/views/admin/dosen/index.blade.php
    <!DOCTYPE html>
    <html lang="en">
    
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Daftar Dosen</title>
    </head>
    
    <body>
    
        <h2>Daftar Dosen</h2>
    
        @if (session('success'))
        <div>
            {{ session('success') }}
        </div>
        @endif
    
        <a href="{{ route('admin.dosen.create') }}">Tambah Dosen</a>
        <a href="{{ route('admin.dosen.import') }}">Import Dosen</a>
        <a href="{{ route('admin.dashboard') }}">Kembali Ke Dashboard</a>
    
        <table>
            <thead>
                <tr>
                    <th>NIDN</th>
                    <th>Nama Lengkap</th>
                    <th>Jurusan</th>
                    <th>Prodi</th>
                    <th>Jenis Kelamin</th>
                    <th>Aksi</th>
                </tr>
            </thead>
            <tbody>
                @foreach ($dosens as $dosen)
                <tr>
                    <td>{{ $dosen->nidn }}</td>
                    <td>{{ $dosen->nama }}</td>
                    <td>{{ $dosen->jurusan }}</td>
                    <td>{{ $dosen->prodi }}</td>
                    <td>{{ $dosen->jenis_kelamin }}</td>
                    <td>
                        <a href="{{ route('admin.dosen.show', $dosen->id) }}">Detail</a>
                        <a href="{{ route('admin.dosen.edit', $dosen->id) }}">Edit</a>
                        <form action="{{ route('admin.dosen.destroy', $dosen->id) }}" method="POST" style="display: inline;">
                            @csrf
                            @method('DELETE')
                            <button type="submit" onclick="return confirm('Apakah Anda yakin ingin menghapus?')">Hapus</button>
                        </form>
                    </td>
                </tr>
                @endforeach
            </tbody>
        </table>
    
    </body>
    
    </html>
    ----------------------------------------------
    // FILE: resources/views/admin/dosen/show.blade.php
    <!DOCTYPE html>
    <html lang="en">
    
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Detail Dosen</title>
    </head>
    
    <body>
    
        <h2>Detail Dosen</h2>
    
        <p>NIDN: {{ $dosen->nidn }}</p>
        <p>Nama Lengkap: {{ $dosen->nama_lengkap }}</p>
        <p>Jenis Kelamin: {{ $dosen->jenis_kelamin }}</p>
    
        <a href="{{ route('admin.dosen.index') }}">Kembali ke Daftar Dosen</a>
    
    </body>
    
    </html>
    ----------------------------------------------
    // FILE: resources/views/admin/dosen/jadwal/create.blade.php
    <!DOCTYPE html>
    <html lang="en">
    
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Buat Jadwal Sidang</title>
    </head>
    
    <body>
    
        <h2>Buat Jadwal Sidang</h2>
    
        <p>Mahasiswa: {{ $pengajuan->mahasiswa->nama_lengkap }} ({{ $pengajuan->mahasiswa->nim }})</p>
    
        @if ($errors->any())
            <div>
                <ul>
                    @foreach ($errors->all() as $error)
                        <li>{{ $error }}</li>
                    @endforeach
                </ul>
            </div>
        @endif
    
        <form method="POST" action="{{ route('dosen.jadwal.store', $pengajuan->id) }}">
            @csrf
    
            <div>
                <label for="tanggal_sidang">Tanggal Sidang</label>
                <input type="date" name="tanggal_sidang" id="tanggal_sidang" value="{{ old('tanggal_sidang') }}" required>
            </div>
    
            <div>
                <label for="waktu_sidang">Waktu Sidang</label>
                <input type="time" name="waktu_sidang" id="waktu_sidang" value="{{ old('waktu_sidang') }}" required>
            </div>
    
            <div>
                <label for="tempat_sidang">Tempat Sidang</label>
                <input type="text" name="tempat_sidang" id="tempat_sidang" value="{{ old('tempat_sidang') }}" required>
            </div>
    
            <button type="submit">Simpan Jadwal</button>
        </form>
    
    </body>
    
    </html>
    ----------------------------------------------
    // FILE: resources/views/admin/dosen/jadwal/show.blade.php
    <!DOCTYPE html>
    <html lang="en">
    
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Detail Jadwal Sidang</title>
    </head>
    
    <body>
    
        <h2>Detail Jadwal Sidang</h2>
    
        <p>Mahasiswa: {{ $sidang->pengajuan->mahasiswa->nama_lengkap }} ({{ $sidang->pengajuan->mahasiswa->nim }})</p>
        <p>Tanggal Sidang: {{ $sidang->tanggal_sidang }}</p>
        <p>Waktu Sidang: {{ $sidang->waktu_sidang }}</p>
        <p>Tempat Sidang: {{ $sidang->tempat_sidang }}</p>
    
        <a href="{{ route('dosen.pengajuan.show', $sidang->pengajuan_id) }}">Kembali ke Detail Pengajuan</a>
    
    </body>
    
    </html>
    ----------------------------------------------
    // FILE: resources/views/admin/dosen/pengajuan/index.blade.php
    <!DOCTYPE html>
    <html lang="en">
    
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Daftar Pengajuan Sidang</title>
    </head>
    
    <body>
    
        <h2>Daftar Pengajuan Sidang</h2>
    
        @if (session('success'))
            <div>
                {{ session('success') }}
            </div>
        @endif
    
        <table>
            <thead>
                <tr>
                    <th>Mahasiswa</th>
                    <th>Jenis Pengajuan</th>
                    <th>Status</th>
                    <th>Aksi</th>
                </tr>
            </thead>
            <tbody>
                @foreach ($pengajuans as $pengajuan)
                    <tr>
                        <td>{{ $pengajuan->mahasiswa->nama_lengkap }} ({{ $pengajuan->mahasiswa->nim }})</td>
                        <td>{{ $pengajuan->jenis_pengajuan }}</td>
                        <td>{{ $pengajuan->status }}</td>
                        <td>
                            <a href="{{ route('dosen.pengajuan.show', $pengajuan->id) }}">Detail</a>
                        </td>
                    </tr>
                @endforeach
            </tbody>
        </table>
    
    </body>
    
    </html>
    ----------------------------------------------
    // FILE: resources/views/admin/dosen/pengajuan/show.blade.php
    <!DOCTYPE html>
    <html lang="en">
    
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Detail Pengajuan Sidang</title>
    </head>
    
    <body>
    
        <h2>Detail Pengajuan Sidang</h2>
    
        <p>Mahasiswa: {{ $pengajuan->mahasiswa->nama_lengkap }} ({{ $pengajuan->mahasiswa->nim }})</p>
        <p>Jenis Pengajuan: {{ $pengajuan->jenis_pengajuan }}</p>
        <p>Status: {{ $pengajuan->status }}</p>
    
        <h3>Dokumen Pengajuan</h3>
        @if (count($dokumens) > 0)
            <ul>
                @foreach ($dokumens as $dokumen)
                    <li>
                        <a href="{{ asset('storage/' . $dokumen->path_file) }}" target="_blank">{{ $dokumen->nama_file }}</a>
                        - Status: {{ $dokumen->status }}
                        @if ($dokumen->status == 'diajukan')
                            <form action="{{ route('dosen.dokumen.setujui', $dokumen->id) }}" method="POST" style="display: inline;">
                                @csrf
                                @method('PUT')
                                <button type="submit" onclick="return confirm('Apakah Anda yakin ingin menyetujui dokumen ini?')">Setujui</button>
                            </form>
                            <form action="{{ route('dosen.dokumen.tolak', $dokumen->id) }}" method="POST" style="display: inline;">
                                @csrf
                                @method('PUT')
                                <button type="submit" onclick="return confirm('Apakah Anda yakin ingin menolak dokumen ini?')">Tolak</button>
                            </form>
                        @endif
                    </li>
                @endforeach
            </ul>
        @else
            <p>Tidak ada dokumen yang diupload.</p>
        @endif
    
        <a href="{{ route('dosen.pengajuan.index') }}">Kembali ke Daftar Pengajuan</a>
    
    </body>
    
    </html>
    ----------------------------------------------
    // FILE: resources/views/admin/mahasiswa/create.blade.php
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Tambah Mahasiswa</title>
    </head>
    <body>
    
        <h2>Tambah Mahasiswa</h2>
    
        @if ($errors->any())
            <div>
                <ul>
                    @foreach ($errors->all() as $error)
                        <li>{{ $error }}</li>
                    @endforeach
                </ul>
            </div>
        @endif
    
        <form method="POST" action="{{ route('admin.mahasiswa.store') }}">
            @csrf
    
            <div>
                <label for="nim">NIM</label>
                <input type="text" name="nim" id="nim" value="{{ old('nim') }}" required>
            </div>
    
            <div>
                <label for="nama_lengkap">Nama Lengkap</label>
                <input type="text" name="nama_lengkap" id="nama_lengkap" value="{{ old('nama_lengkap') }}" required>
            </div>
    
            <div>
                <label for="jurusan">Jurusan</label>
                <input type="text" name="jurusan" id="jurusan" value="{{ old('jurusan') }}" required>
            </div>
    
            <div>
                <label for="prodi">Prodi</label>
                <input type="text" name="prodi" id="prodi" value="{{ old('prodi') }}" required>
            </div>
    
            <div>
                <label for="jenis_kelamin">Jenis Kelamin</label>
                <select name="jenis_kelamin" id="jenis_kelamin" required>
                    <option value="Laki-laki" {{ old('jenis_kelamin') == 'Laki-laki' ? 'selected' : '' }}>Laki-laki</option>
                    <option value="Perempuan" {{ old('jenis_kelamin') == 'Perempuan' ? 'selected' : '' }}>Perempuan</option>
                </select>
            </div>
    
            <div>
                <label for="kelas">Kelas</label>
                <input type="text" name="kelas" id="kelas" value="{{ old('kelas') }}" required>
            </div>
    
            {{-- Tambahkan field email dan password ini --}}
            <div>
                <label for="email">Email (untuk Login)</label>
                <input type="email" name="email" id="email" value="{{ old('email') }}" required>
            </div>
    
            <div>
                <label for="password">Password (untuk Login)</label>
                <input type="password" name="password" id="password" required>
            </div>
            {{-- Akhir tambahan --}}
    
            <button type="submit">Simpan</button>
        </form>
    
    </body>
    </html>
    ----------------------------------------------
    // FILE: resources/views/admin/mahasiswa/edit.blade.php
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Edit Mahasiswa</title>
    </head>
    <body>
    
        <h2>Edit Mahasiswa</h2>
    
        @if ($errors->any())
            <div>
                <ul>
                    @foreach ($errors->all() as $error)
                        <li>{{ $error }}</li>
                    @endforeach
                </ul>
            </div>
        @endif
    
        <form method="POST" action="{{ route('admin.mahasiswa.update', $mahasiswa->id) }}">
            @csrf
            @method('PUT')
    
            <div>
                <label for="nim">NIM</label>
                <input type="text" name="nim" id="nim" value="{{ old('nim', $mahasiswa->nim) }}" required>
            </div>
    
            <div>
                <label for="nama_lengkap">Nama Lengkap</label>
                <input type="text" name="nama_lengkap" id="nama_lengkap" value="{{ old('nama_lengkap', $mahasiswa->nama_lengkap) }}" required>
            </div>
    
            <div>
                <label for="jurusan">Jurusan</label>
                <input type="text" name="jurusan" id="jurusan" value="{{ old('jurusan', $mahasiswa->jurusan) }}" required>
            </div>
    
            <div>
                <label for="prodi">Prodi</label>
                <input type="text" name="prodi" id="prodi" value="{{ old('prodi', $mahasiswa->prodi) }}" required>
            </div>
    
            <div>
                <label for="jenis_kelamin">Jenis Kelamin</label>
                <select name="jenis_kelamin" id="jenis_kelamin" required>
                    <option value="Laki-laki" {{ old('jenis_kelamin', $mahasiswa->jenis_kelamin) == 'Laki-laki' ? 'selected' : '' }}>Laki-laki</option>
                    <option value="Perempuan" {{ old('jenis_kelamin', $mahasiswa->jenis_kelamin) == 'Perempuan' ? 'selected' : '' }}>Perempuan</option>
                </select>
            </div>
    
            <div>
                <label for="kelas">Kelas</label>
                <input type="text" name="kelas" id="kelas" value="{{ old('kelas', $mahasiswa->kelas) }}" required>
            </div>
    
            <button type="submit">Update</button>
        </form>
    
    </body>
    </html>
    ----------------------------------------------
    // FILE: resources/views/admin/mahasiswa/import.blade.php
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Impor Data Mahasiswa</title>
    </head>
    <body>
        <h1>Impor Data Mahasiswa dari Excel</h1>
    
        @if (session('success'))
            <div style="color: green;">
                {{ session('success') }}
            </div>
        @endif
    
        @if (session('error'))
            <div style="color: red;">
                {!! session('error') !!} {{-- Gunakan {!! !!} untuk render HTML dari pesan error --}}
            </div>
        @endif
    
        <form action="{{ route('admin.mahasiswa.import') }}" method="POST" enctype="multipart/form-data">
            @csrf
            <div>
                <label for="file">Pilih File Excel (.xls, .xlsx, .csv):</label>
                <input type="file" name="file" id="file" required>
                @error('file')
                    <div style="color: red;">{{ $message }}</div>
                @enderror
            </div>
            <br>
            <button type="submit">Impor Data</button>
        </form>
    
        <p>Pastikan file Excel Anda memiliki kolom dengan header persis seperti di bawah ini (case-insensitive):</p>
        <table>
            <thead>
                <tr>
                    <th>NIM</th>
                    <th>Nama Lengkap</th>
                    <th>Jurusan</th>
                    <th>Prodi</th>
                    <th>Jenis Kelamin</th>
                    <th>Kelas</th>
                    <th>Email</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>2021001001</td>
                    <td>Budi Cahyono</td>
                    <td>Teknologi Informasi</td>
                    <td>Teknik Komputer</td>
                    <td>Laki-laki</td>
                    <td>TI-2</td>
                    <td>budi.cahyono@example.com</td>
                </tr>
                <tr>
                    <td>2022002002</td>
                    <td>Siti Aminah</td>
                    <td>Teknologi Informasi</td>
                    <td>Sistem Informasi</td>
                    <td>Perempuan</td>
                    <td>TI-2</td>
                    <td>siti.aminah@example.com</td>
                </tr>
            </tbody>
        </table>
        <p>Password akun mahasiswa akan disetel default `password123`. Harap informasikan kepada mahasiswa untuk mengubahnya setelah login pertama kali.</p>
    
        <br>
        <a href="{{ route('admin.dashboard') }}">Kembali ke Dashboard Admin</a>
        <br>
        <a href="{{ route('admin.mahasiswa.index') }}">Lihat Daftar Mahasiswa</a>
    
    </body>
    </html>
    ----------------------------------------------
    // FILE: resources/views/admin/mahasiswa/index.blade.php
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Daftar Mahasiswa</title>
    </head>
    <body>
    
        <h2>Daftar Mahasiswa</h2>
    
        @if (session('success'))
            <div>
                {{ session('success') }}
            </div>
        @endif
    
        <a href="{{ route('admin.mahasiswa.create') }}">Tambah Mahasiswa</a>
        <a href="{{ route('admin.mahasiswa.import') }}">Import Mahasiswa</a>
        <a href="{{ route('mahasiswas.export') }}" class="btn btn-success"><i class="fas fa-file-excel"></i> Export Mahasiswa</a> 
        <a href="{{ route('admin.dashboard') }}">Kembali Ke Dashboard</a>
            <table>
            <thead>
                <tr>
                    <th>NIM</th>
                    <th>Nama Lengkap</th>
                    <th>Jurusan</th>
                    <th>Prodi</th>
                    <th>Jenis Kelamin</th>
                    <th>Kelas</th>
                    <th>Aksi</th>
                </tr>
            </thead>
            <tbody>
                @foreach ($mahasiswas as $mahasiswa)
                    <tr>
                        <td>{{ $mahasiswa->nim }}</td>
                        <td>{{ $mahasiswa->nama_lengkap }}</td>
                        <td>{{ $mahasiswa->jurusan }}</td>
                        <td>{{ $mahasiswa->prodi }}</td>
                        <td>{{ $mahasiswa->jenis_kelamin }}</td>
                        <td>{{ $mahasiswa->kelas }}</td>
                        <td>
                            <a href="{{ route('admin.mahasiswa.show', $mahasiswa->id) }}">Detail</a>
                            <a href="{{ route('admin.mahasiswa.edit', $mahasiswa->id) }}">Edit</a>
                            <form action="{{ route('admin.mahasiswa.destroy', $mahasiswa->id) }}" method="POST" style="display: inline;">
                                @csrf
                                @method('DELETE')
                                <button type="submit" onclick="return confirm('Apakah Anda yakin ingin menghapus?')">Hapus</button>
                            </form>
                        </td>
                    </tr>
                @endforeach
            </tbody>
        </table>
    
    </body>
    </html>
    ----------------------------------------------
    // FILE: resources/views/admin/mahasiswa/show.blade.php
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Detail Mahasiswa</title>
    </head>
    <body>
    
        <h2>Detail Mahasiswa</h2>
    
        <p>NIM: {{ $mahasiswa->nim }}</p>
        <p>Nama Lengkap: {{ $mahasiswa->nama_lengkap }}</p>
        <p>Jurusan: {{ $mahasiswa->jurusan }}</p>
        <p>Prodi: {{ $mahasiswa->prodi }}</p>
        <p>Jenis Kelamin: {{ $mahasiswa->jenis_kelamin }}</p>
        <p>Kelas: {{ $mahasiswa->kelas }}</p>
    
        <a href="{{ route('admin.mahasiswa.index') }}">Kembali ke Daftar Mahasiswa</a>
    
    </body>
    
    </html>
    ----------------------------------------------
    // FILE: resources/views/admin/pengajuan/index.blade.php
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Daftar Pengajuan Mahasiswa (Admin)</title>
        </head>
    <body>
        <div class="container">
            <h2>Daftar Pengajuan Mahasiswa</h2>
    
            @if (session('success'))
                <div class="alert alert-success">{{ session('success') }}</div>
            @endif
            @if (session('error'))
                <div class="alert alert-danger">{{ session('error') }}</div>
            @endif
    
            <table>
                <thead>
                    <tr>
                        <th>NIM</th>
                        <th>Nama Mahasiswa</th>
                        <th>Jenis Pengajuan</th>
                        <th>Status</th>
                        <th>Tanggal Diajukan</th>
                        <th>Aksi</th>
                    </tr>
                </thead>
                <tbody>
                    @forelse ($pengajuans as $pengajuan)
                    <tr>
                        <td>{{ $pengajuan->mahasiswa->nim }}</td>
                        <td>{{ $pengajuan->mahasiswa->nama_lengkap }}</td>
                        <td>{{ strtoupper($pengajuan->jenis_pengajuan) }}</td>
                        <td>
                            @if ($pengajuan->status == 'diajukan_mahasiswa')
                                <span class="status-pending">Menunggu Verifikasi Admin</span>
                            @elseif ($pengajuan->status == 'diverifikasi_admin')
                                <span class="status-success">Diverifikasi Admin</span>
                            @elseif ($pengajuan->status == 'ditolak_admin')
                                <span class="status-danger">Ditolak Admin</span>
                            @else
                                {{ $pengajuan->status }}
                            @endif
                        </td>
                        <td>{{ \Carbon\Carbon::parse($pengajuan->created_at)->translatedFormat('d F Y') }}</td>
                        <td>
                            <a href="{{ route('admin.pengajuan.verifikasi.show', $pengajuan->id) }}">Lihat Detail & Verifikasi</a>
                        </td>
                    </tr>
                    @empty
                    <tr>
                        <td colspan="6">Tidak ada pengajuan yang perlu diverifikasi saat ini.</td>
                    </tr>
                    @endforelse
                </tbody>
            </table>
    
            {{ $pengajuans->links() }}
        </div>
        <div>
            <li>
                <a href="{{ route('admin.dashboard') }}">kembali Ke Dashboard</a>
            </li>
        </div>
    </body>
    </html>
    ----------------------------------------------
    // FILE: resources/views/admin/pengajuan/show.blade.php
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Detail Pengajuan & Verifikasi</title>
        <style>
            body {
                font-family: Arial, sans-serif;
                background-color: #f4f7f6;
                margin: 0;
                padding: 20px;
                color: #333;
            }
            .container {
                max-width: 900px;
                margin: 20px auto;
                background: #fff;
                padding: 30px;
                border-radius: 8px;
                box-shadow: 0 4px 12px rgba(0,0,0,0.1);
            }
            h2, h3 {
                color: #0056b3;
                border-bottom: 2px solid #e0e0e0;
                padding-bottom: 10px;
                margin-bottom: 25px;
            }
            .info-group {
                margin-bottom: 20px;
                padding-left: 15px;
                border-left: 5px solid #007bff;
                background-color: #f8fafd;
                padding: 10px 15px;
                border-radius: 4px;
            }
            .info-group label {
                display: block;
                font-weight: bold;
                color: #555;
                margin-bottom: 5px;
            }
            .info-group p {
                margin: 0;
                color: #333;
                line-height: 1.5;
            }
            .document-list {
                list-style: none;
                padding: 0;
                margin-top: 15px;
            }
            .document-item {
                margin-bottom: 10px;
                padding: 12px 15px;
                border: 1px solid #ddd;
                border-radius: 5px;
                display: flex;
                justify-content: space-between;
                align-items: center;
                background-color: #ffffff;
                box-shadow: 0 2px 4px rgba(0,0,0,0.05);
            }
            .document-item span {
                font-weight: bold;
                color: #333;
            }
            .document-item a {
                text-decoration: none;
                color: #007bff;
                font-weight: bold;
                transition: color 0.2s ease-in-out;
            }
            .document-item a:hover {
                color: #0056b3;
                text-decoration: underline;
            }
        
            hr {
                border: 0;
                height: 1px;
                background: #eee;
                margin: 30px 0;
            }
        
            /* Styles for the verification form */
            .form-group {
                margin-bottom: 20px;
                display: flex;
                flex-direction: column; /* Menumpuk elemen di dalamnya secara vertikal */
            }
        
            /* Ini adalah label utama "Pilih Status Verifikasi:" */
            .form-group > label {
                display: block;
                font-weight: bold;
                margin-bottom: 8px;
                color: #555;
            }
        
            /* Penataan untuk radio button dan labelnya */
            .form-group .radio-option {
                display: flex; /* Gunakan flexbox untuk menyelaraskan radio dan label di sampingnya */
                align-items: center; /* Pusatkan secara vertikal */
                margin-bottom: 5px; /* Jarak antar pilihan radio */
            }
        
            .form-group input[type="radio"] {
                margin-right: 8px; /* Jarak antara radio button dan label */
                margin-left: 0; /* Pastikan tidak ada margin kiri yang tidak diinginkan */
                flex-shrink: 0; /* Pastikan radio button tidak menyusut */
                order: 1; /* Radio button akan muncul pertama (paling kiri) */
            }
        
            .form-group .radio-option label {
                font-weight: normal; /* Atur ulang bold dari label utama jika perlu */
                margin-bottom: 0; /* Hapus margin bawah default untuk label ini */
                cursor: pointer; /* Memberikan indikasi bahwa label bisa diklik */
                order: 2; /* Label akan muncul kedua (di sebelah kanan radio) */
            }
        
            .form-group textarea {
                width: 100%;
                padding: 10px;
                border: 1px solid #ccc;
                border-radius: 4px;
                box-sizing: border-box; /* Ensures padding doesn't affect total width */
                min-height: 80px;
                resize: vertical;
                font-size: 1em;
            }
            .buttons {
                text-align: right;
                margin-top: 25px;
            }
            .buttons button {
                background-color: #28a745;
                color: white;
                padding: 10px 20px;
                border: none;
                border-radius: 5px;
                cursor: pointer;
                font-size: 1em;
                transition: background-color 0.2s ease-in-out;
            }
            .buttons button:hover {
                background-color: #218838;
            }
            .back-link {
                display: block;
                text-align: center;
                margin-top: 30px;
                color: #007bff;
                text-decoration: none;
                font-weight: bold;
            }
            .back-link:hover {
                text-decoration: underline;
            }
        
            /* Alerts (from previous suggestions) */
            .alert {
                padding: 15px;
                margin-bottom: 20px;
                border: 1px solid transparent;
                border-radius: 4px;
            }
            .alert-success {
                color: #155724;
                background-color: #d4edda;
                border-color: #c3e6cb;
            }
            .alert-danger {
                color: #721c24;
                background-color: #f8d7da;
                border-color: #f5c6cb;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <h2>Detail Pengajuan Mahasiswa</h2>
    
            @if (session('success'))
                <div class="alert alert-success">{{ session('success') }}</div>
            @endif
            @if (session('error'))
                <div class="alert alert-danger">{{ session('error') }}</div>
            @endif
            @if ($errors->any())
                <div class="alert alert-danger">
                    <ul>
                        @foreach ($errors->all() as $error)
                            <li>{{ $error }}</li>
                        @endforeach
                    </ul>
                </div>
            @endif
    
            <div class="info-group">
                <label>Mahasiswa:</label>
                <p>{{ $pengajuan->mahasiswa->nama_lengkap }} (NIM: {{ $pengajuan->mahasiswa->nim }})</p>
            </div>
            <div class="info-group">
                <label>Jenis Pengajuan:</label>
                <p>{{ strtoupper($pengajuan->jenis_pengajuan) }}</p>
            </div>
            <div class="info-group">
                <label>Judul Pengajuan:</label>
                <p>{{ $pengajuan->judul }}</p>
            </div>
            <div class="info-group">
                <label>Tanggal Diajukan:</label>
                <p>{{ \Carbon\Carbon::parse($pengajuan->created_at)->translatedFormat('d F Y H:i') }}</p>
            </div>
            <div class="info-group">
                <label>Status Saat Ini:</label>
                <p>{{ $pengajuan->status }} @if($pengajuan->alasan_penolakan_admin) (Alasan: {{ $pengajuan->alasan_penolakan_admin }}) @endif</p>
            </div>
    
            <h3>Dokumen Terlampir:</h3>
            <ul class="document-list">
                @forelse ($pengajuan->dokumens as $dokumen)
                <li class="document-item">
                    {{-- Tampilkan nama dokumen dari kolom 'nama_file' --}}
                    <span>{{ $dokumen->nama_file }}</span>
                    {{-- Gunakan path_file dari database --}}
                    <a href="{{ Storage::url($dokumen->path_file) }}" target="_blank">Lihat Dokumen</a>
                </li>
                @empty
                <li class="document-item">Tidak ada dokumen terlampir.</li>
                @endforelse
            </ul>
    
            <hr>
    
            @if ($pengajuan->status == 'diajukan_mahasiswa' || $pengajuan->status == 'ditolak_admin')
                <h3>Verifikasi Dokumen:</h3>
                <form action="{{ route('admin.pengajuan.verifikasi.verify', $pengajuan->id) }}" method="POST">
                    @csrf
                    @method('PUT')
    
                    <div class="form-group">
                        <label>Pilih Status Verifikasi:</label>
                    
                        <div class="radio-option">
                            <input type="radio" name="verifikasi_status" id="status_setuju" value="setuju" {{ old('verifikasi_status') == 'setuju' ? 'checked' : '' }} required>
                            <label for="status_setuju">Setuju (Dokumen Lengkap & Valid)</label>
                        </div>
                    
                        <div class="radio-option">
                            <input type="radio" name="verifikasi_status" id="status_tolak" value="tolak" {{ old('verifikasi_status') == 'tolak' ? 'checked' : '' }} required>
                            <label for="status_tolak">Tolak (Dokumen Tidak Lengkap / Tidak Valid)</label>
                        </div>
                    </div>
    
                    <div class="form-group" id="alasan_tolak_admin_group" style="display: {{ old('verifikasi_status') == 'tolak' ? 'block' : 'none' }};">
                        <label for="alasan_penolakan_admin">Alasan Penolakan:</label>
                        <textarea name="alasan_penolakan_admin" id="alasan_penolakan_admin" placeholder="Sebutkan alasan penolakan, contoh: 'Dokumen transkrip nilai belum terlampir.'">{{ old('alasan_penolakan_admin') }}</textarea>
                        @error('alasan_penolakan_admin')
                            <span class="error-message">{{ $message }}</span>
                        @enderror
                    </div>
    
                    <div class="buttons">
                        <button type="submit">Kirim Verifikasi</button>
                    </div>
                </form>
            @else
                <div class="alert alert-info">Pengajuan ini sudah diverifikasi dan tidak dapat diubah lagi oleh Admin.</div>
            @endif
    
            <a href="{{ route('admin.pengajuan.index') }}" class="back-link">Kembali ke Daftar Pengajuan</a>
        </div>
    
        <script>
            const statusSetuju = document.getElementById('status_setuju');
            const statusTolak = document.getElementById('status_tolak');
            const alasanTolakAdminGroup = document.getElementById('alasan_tolak_admin_group');
            const alasanAdminTextarea = document.getElementById('alasan_penolakan_admin');
    
            function toggleAlasanAdminField() {
                if (statusTolak.checked) {
                    alasanTolakAdminGroup.style.display = 'block';
                    alasanAdminTextarea.setAttribute('required', 'required');
                } else {
                    alasanTolakAdminGroup.style.display = 'none';
                    alasanAdminTextarea.removeAttribute('required');
                    alasanAdminTextarea.value = '';
                }
            }
    
            statusSetuju.addEventListener('change', toggleAlasanAdminField);
            statusTolak.addEventListener('change', toggleAlasanAdminField);
    
            toggleAlasanAdminField(); // Call on page load
        </script>
    </body>
    </html>
    ----------------------------------------------
    // FILE: resources/views/admin/sidang/index.blade.php
    <!DOCTYPE html>
    <html lang="en">
    
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Daftar Persidangan</title>
    </head>
    
    <body>
    
        <h2>Daftar Persidangan</h2>
    
        @if (session('success'))
            <div>
                {{ session('success') }}
            </div>
        @endif
    
        <a href="{{ route('admin.sidang.kalender') }}">Lihat Kalender Sidang</a>
    
        <table>
            <thead>
                <tr>
                    <th>Mahasiswa</th>
                    <th>Tanggal Sidang</th>
                    <th>Waktu Sidang</th> <th>Tempat Sidang</th>
                    <th>Aksi</th>
                </tr>
            </thead>
            <tbody>
                @foreach ($sidangs as $sidang)
                    <tr>
                        <td>{{ $sidang->pengajuan->mahasiswa->nama_lengkap }} ({{ $sidang->pengajuan->mahasiswa->nim }})</td>
                        {{-- Menggunakan properti dari model Sidang yang benar --}}
                        <td>{{ $sidang->tanggal_waktu_sidang ? \Carbon\Carbon::parse($sidang->tanggal_waktu_sidang)->format('d F Y') : 'Belum Dijadwalkan' }}</td>
                        <td>{{ $sidang->tanggal_waktu_sidang ? \Carbon\Carbon::parse($sidang->tanggal_waktu_sidang)->format('H:i') . ' WIB' : 'Belum Dijadwalkan' }}</td>
                        <td>{{ $sidang->ruangan_sidang ? $sidang->ruangan_sidang : 'Belum Ditentukan' }}</td>
                        <td>
                            <a href="{{ route('admin.sidang.show', $sidang->id) }}">Detail</a>
                        </td>
                    </tr>
                @endforeach
            </tbody>
        </table>
    
    </body>
    
    </html>
    ----------------------------------------------
    // FILE: resources/views/admin/sidang/kalender.blade.php
    <!DOCTYPE html>
    <html lang="en">
    
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Kalender Persidangan</title>
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/fullcalendar@3.10.2/dist/fullcalendar.min.css" />
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/moment@2.29.1/moment.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/fullcalendar@3.10.2/dist/fullcalendar.min.js"></script>
    </head>
    
    <body>
    
        <h2>Kalender Persidangan</h2>
    
        <div id="calendar"></div>
    
        <script>
            $(document).ready(function () {
                $('#calendar').fullCalendar({
                    header: {
                        left: 'prev,next today',
                        center: 'title',
                        right: 'month,agendaWeek,agendaDay'
                    },
                    events: @json($events) // Mengirimkan data events ke kalender
                });
            });
        </script>
    
    </body>
    
    </html>
    ----------------------------------------------
    // FILE: resources/views/admin/sidang/show.blade.php
    <!DOCTYPE html>
    <html lang="en">
    
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Detail Persidangan</title>
    </head>
    
    <body>
    
        <h2>Detail Persidangan</h2>
    
        <p>Mahasiswa: {{ $sidang->pengajuan->mahasiswa->nama_lengkap }} ({{ $sidang->pengajuan->mahasiswa->nim }})</p>
        <p>Jenis Pengajuan: {{ $sidang->pengajuan->jenis_pengajuan }}</p>
    
        <p>Tanggal Sidang:
            @if ($sidang->tanggal_waktu_sidang)
                <strong>{{ \Carbon\Carbon::parse($sidang->tanggal_waktu_sidang)->format('d F Y') }}</strong>
            @else
                Belum Dijadwalkan
            @endif
        </p>
        <p>Waktu Sidang:
            @if ($sidang->tanggal_waktu_sidang)
                <strong>{{ \Carbon\Carbon::parse($sidang->tanggal_waktu_sidang)->format('H:i') }} WIB</strong>
            @else
                Belum Dijadwalkan
            @endif
        </p>
        <p>Tempat Sidang:
            @if ($sidang->ruangan_sidang)
                <strong>{{ $sidang->ruangan_sidang }}</strong>
            @else
                Belum Ditentukan
            @endif
        </p>
    
        ---
    
        <h3>Informasi Anggota Sidang</h3>
        {{-- Memastikan relasi anggota sidang sudah dimuat di controller --}}
        <p><strong>Ketua Sidang:</strong> {{ $sidang->ketuaSidang->nama ?? 'Belum Ditunjuk' }}</p>
        <p><strong>Sekretaris Sidang:</strong> {{ $sidang->sekretarisSidang->nama ?? 'Belum Ditunjuk' }}</p>
        <p><strong>Anggota Sidang 1:</strong> {{ $sidang->anggota1Sidang->nama ?? 'Belum Ditunjuk' }}</p>
        <p><strong>Anggota Sidang 2:</strong> {{ $sidang->anggota2Sidang->nama ?? 'Belum Ditunjuk' }}</p>
    
        <a href="{{ route('admin.sidang.index') }}">Kembali ke Daftar Persidangan</a>
    
    </body>
    
    </html>
    ----------------------------------------------
    // FILE: resources/views/auth/register-mahasiswa.blade.php
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Registrasi Mahasiswa</title>
    </head>
    <body>
    
        <h2>Registrasi Mahasiswa</h2>
    
        @if ($errors->any())
            <div>
                <ul>
                    @foreach ($errors->all() as $error)
                        <li>{{ $error }}</li>
                    @endforeach
                </ul>
            </div>
        @endif
    
        <form method="POST" action="{{ route('register.mahasiswa') }}">
            @csrf
    
            <div>
                <label for="nim">NIM</label>
                <input type="text" name="nim" id="nim" value="{{ old('nim') }}" required>
            </div>
    
            <div>
                <label for="nama_lengkap">Nama Lengkap</label>
                <input type="text" name="nama_lengkap" id="nama_lengkap" value="{{ old('nama_lengkap') }}" required>
            </div>
    
            <div>
                <label for="jurusan">Jurusan</label>
                <input type="text" name="jurusan" id="jurusan" value="{{ old('jurusan') }}" required>
            </div>
    
            <div>
                <label for="prodi">Program Studi</label>
                <input type="text" name="prodi" id="prodi" value="{{ old('prodi') }}" required>
            </div>
    
            <div>
                <label for="jenis_kelamin">Jenis Kelamin</label>
                <select name="jenis_kelamin" id="jenis_kelamin" required>
                    <option value="L">Laki-laki</option>
                    <option value="P">Perempuan</option>
                </select>
            </div>
    
            <div>
                <label for="kelas">Kelas</label>
                <input type="text" name="kelas" id="kelas" value="{{ old('kelas') }}" required>
            </div>
    
            <div>
                <label for="email">Email</label>
                <input type="email" name="email" id="email" value="{{ old('email') }}" required>
            </div>
    
            <div>
                <label for="password">Password</label>
                <input type="password" name="password" id="password" required>
            </div>
    
            <div>
                <label for="password_confirmation">Konfirmasi Password</label>
                <input type="password" name="password_confirmation" id="password_confirmation" required>
            </div>
    
            <button type="submit">Daftar</button>
        </form>
    
    </body>
    </html>
    ----------------------------------------------
    // FILE: resources/views/dosen/dashboard.blade.php
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Dashboard Dosen</title>
        <style>
            /* Basic styles for overall layout, alerts, etc. (similar to previous views) */
            .notification-section {
                background-color: #e9f5fd;
                border: 1px solid #cce5ff;
                padding: 20px;
                margin-bottom: 30px;
                border-radius: 8px;
            }
            .notification-section h3 {
                color: #007bff;
                margin-top: 0;
                margin-bottom: 15px;
            }
            .notification-list {
                list-style: none;
                padding: 0;
            }
            .notification-item {
                background-color: #fff;
                border: 1px solid #dee2e6;
                padding: 15px;
                margin-bottom: 10px;
                border-radius: 6px;
                display: flex;
                justify-content: space-between;
                align-items: center;
                flex-wrap: wrap; /* Allow wrapping on small screens */
            }
            .notification-content {
                flex-grow: 1;
            }
            .notification-actions {
                margin-left: 20px;
                white-space: nowrap; /* Keep buttons on one line */
            }
            .notification-item p {
                margin: 0;
                color: #333;
            }
            .notification-item strong {
                color: #0056b3;
            }
            .notification-item .timestamp {
                font-size: 0.8em;
                color: #6c757d;
                margin-top: 5px;
                display: block;
            }
            .notification-item a.action-link {
                display: inline-block;
                background-color: #28a745;
                color: white;
                padding: 8px 12px;
                border-radius: 5px;
                text-decoration: none;
                font-size: 0.9em;
                margin-right: 10px;
            }
            .notification-item button {
                background-color: #6c757d;
                color: white;
                border: none;
                padding: 8px 12px;
                border-radius: 5px;
                cursor: pointer;
                font-size: 0.9em;
            }
            .sidang-invitations-section {
                background-color: #f7f7f7;
                border: 1px solid #e0e0e0;
                padding: 20px;
                border-radius: 8px;
            }
            .sidang-invitations-section h3 {
                color: #343a40;
                margin-top: 0;
                margin-bottom: 15px;
            }
            .sidang-item {
                background-color: #fff;
                border: 1px solid #ccc;
                padding: 15px;
                margin-bottom: 10px;
                border-radius: 6px;
            }
            .sidang-item strong {
                color: #11acc7;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <h2>Dashboard Dosen</h2>
    
            @if (session('success'))
                <div class="alert alert-success">{{ session('success') }}</div>
            @endif
            @if (session('error'))
                <div class="alert alert-danger">{{ session('error') }}</div>
            @endif
            @if (session('info'))
                <div class="alert alert-info">{{ session('info') }}</div>
            @endif
    
            <div class="notification-section">
                <h3>Notifikasi Terbaru (Belum Dibaca)</h3>
                @forelse ($unreadNotifications as $notification)
                    <div class="notification-item">
                        <div class="notification-content">
                            @if ($notification->type === 'App\Notifications\DosenSidangInvitation')
                                <p><strong>Undangan Sidang Baru:</strong> {{ $notification->data['message'] }}</p>
                                <p>Mahasiswa: {{ $notification->data['mahasiswa_nama'] }}</p>
                                <p>Jenis: {{ $notification->data['jenis_pengajuan'] }}</p>
                                <p>Tanggal: {{ $notification->data['tanggal_sidang'] }}</p>
                                <p>Ruangan: {{ $notification->data['ruangan_sidang'] }}</p>
                            @else
                                <p>Notifikasi Umum: {{ $notification->data['message'] ?? 'Tidak ada detail pesan.' }}</p>
                            @endif
                            <span class="timestamp">{{ $notification->created_at->diffForHumans() }}</span>
                        </div>
                        <div class="notification-actions">
                            @if ($notification->type === 'App\Notifications\DosenSidangInvitation' && isset($notification->data['sidang_id']))
                                <a href="{{ route('dosen.sidang.respon.form', $notification->data['sidang_id']) }}" class="action-link">Respon Undangan</a>
                            @endif
                            <form action="{{ route('dosen.notifications.markAsRead', $notification->id) }}" method="POST" style="display: inline-block;">
                                @csrf
                                <button type="submit">Tandai Sudah Dibaca</button>
                            </form>
                        </div>
                    </div>
                @empty
                    <p>Tidak ada notifikasi baru.</p>
                @endforelse
                {{-- Link untuk melihat semua notifikasi (dibaca/belum dibaca) bisa ditambahkan di sini --}}
                {{-- <a href="{{ route('dosen.notifications.index') }}" class="back-link">Lihat Semua Notifikasi</a> --}}
            </div>
    
            <div class="sidang-invitations-section">
                <h3>Undangan Sidang Menunggu Respon</h3>
                @forelse ($sidangInvitations as $sidang) 
                    <div class="sidang-item">
                        <p><strong>Mahasiswa:</strong> {{ $sidang->pengajuan->mahasiswa->nama_lengkap }} (NIM: {{ $sidang->pengajuan->mahasiswa->nim }})</p>
                        <p><strong>Jenis Sidang:</strong> {{ strtoupper($sidang->pengajuan->jenis_pengajuan) }}</p>
                        <p><strong>Tanggal & Waktu:</strong> {{ \Carbon\Carbon::parse($sidang->tanggal_waktu_sidang)->translatedFormat('l, d F Y H:i') }}</p>
                        <p><strong>Ruangan:</strong> {{ $sidang->ruangan_sidang }}</p>
                        <p><strong>Peran Anda:</strong>
                            @php
                                $dosenLoginId = Auth::user()->dosen->id;
                                if ($sidang->ketua_sidang_dosen_id == $dosenLoginId) echo 'Ketua Sidang';
                                elseif ($sidang->sekretaris_sidang_dosen_id == $dosenLoginId) echo 'Sekretaris Sidang';
                                elseif ($sidang->anggota1_sidang_dosen_id == $dosenLoginId) echo 'Anggota Sidang 1 (Penguji)';
                                elseif ($sidang->anggota2_sidang_dosen_id == $dosenLoginId) echo 'Anggota Sidang 2 (Penguji)';
                                elseif ($sidang->dosen_pembimbing_id == $dosenLoginId) echo 'Dosen Pembimbing 1';
                                elseif ($sidang->dosen_penguji1_id == $dosenLoginId) echo 'Dosen Pembimbing 2';
                            @endphp
                        </p>
                        <a href="{{ route('dosen.sidang.respon.form', $sidang->id) }}" class="action-link" style="background-color: #007bff;">Respon Undangan Ini</a>
                    </div>
                @empty
                    <p>Tidak ada undangan sidang yang menunggu respon Anda.</p>
                @endforelse
            </div>
        </div>
    </body>
    </html>
    ----------------------------------------------
    // FILE: resources/views/dosen/login.blade.php
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Dosen Login</title>
    </head>
    <body>
    
        <h2>Dosen Login</h2>
    
        @if ($errors->any())
            <div>
                <ul>
                    @foreach ($errors->all() as $error)
                        <li>{{ $error }}</li>
                    @endforeach
                </ul>
            </div>
        @endif
    
        <form method="POST" action="{{ route('dosen.login') }}">
            @csrf
    
            <div>
                <label for="email">Email</label>
                <input type="email" name="email" id="email" required>
            </div>
    
            <div>
                <label for="password">Password</label>
                <input type="password" name="password" id="password" required>
            </div>
    
            <button type="submit">Login</button>
        </form>
    
    </body>
    </html>
    ----------------------------------------------
    // FILE: resources/views/dosen/respon_sidang.blade.php
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Respon Undangan Sidang</title>
        <style>
            body { font-family: sans-serif; margin: 20px; background-color: #f4f7f6; }
            .container { max-width: 800px; margin: 0 auto; background-color: #fff; padding: 30px; border-radius: 8px; box-shadow: 0 0 10px rgba(0,0,0,0.1); }
            h2 { color: #007bff; margin-bottom: 20px; }
            p { margin-bottom: 10px; }
            strong { color: #333; } /* Updated color for strong tags */
            .form-group { margin-bottom: 15px; }
            label { display: block; margin-bottom: 5px; font-weight: bold; }
            textarea, select { width: 100%; padding: 10px; border: 1px solid #ccc; border-radius: 4px; box-sizing: border-box; }
            .buttons { margin-top: 20px; }
            .btn { padding: 10px 20px; border: none; border-radius: 5px; cursor: pointer; text-decoration: none; display: inline-block; font-size: 1em; }
            .btn-primary { background-color: #007bff; color: white; }
            .btn-danger { background-color: #dc3545; color: white; margin-left: 10px; }
            .back-link { display: inline-block; margin-bottom: 20px; color: #007bff; text-decoration: none; }
            .alert { padding: 15px; margin-bottom: 20px; border-radius: 4px; }
            .alert-success { background-color: #d4edda; color: #155724; border: 1px solid #c3e6cb; }
            .alert-danger { background-color: #f8d7da; color: #721c24; border: 1px solid #f5c6cb; }
        </style>
    </head>
    <body>
        <div class="container">
            <h2>Respon Undangan Sidang</h2>
            <a href="{{ route('dosen.dashboard') }}" class="back-link">&larr; Kembali ke Dashboard</a>
    
            @if (session('success'))
                <div class="alert alert-success">
                    {{ session('success') }}
                </div>
            @endif
            @if (session('error'))
                <div class="alert alert-danger">
                    {{ session('error') }}
                </div>
            @endif
    
            <h3>Detail Sidang</h3>
            <p><strong>Mahasiswa:</strong> {{ $sidang->pengajuan->mahasiswa->nama_lengkap }} (NIM: {{ $sidang->pengajuan->mahasiswa->nim }})</p>
            <p><strong>Jenis Sidang:</strong> {{ strtoupper($sidang->pengajuan->jenis_pengajuan) }}</p>
            <p><strong>Tanggal & Waktu:</strong> {{ \Carbon\Carbon::parse($sidang->tanggal_waktu_sidang)->translatedFormat('l, d F Y H:i') }}</p>
            <p><strong>Ruangan:</strong> {{ $sidang->ruangan_sidang }}</p>
            <p><strong>Ketua Sidang:</strong> {{ $sidang->ketuaSidang->nama ?? 'N/A' }}</p>
            <p><strong>Sekretaris Sidang:</strong> {{ $sidang->sekretarisSidang->nama ?? 'N/A' }}</p>
            <p><strong>Anggota Sidang 1:</strong> {{ $sidang->anggota1Sidang->nama ?? 'N/A' }}</p>
            <p><strong>Anggota Sidang 2:</strong> {{ $sidang->anggota2Sidang->nama ?? 'N/A' }}</p>
            <p><strong>Dosen Pembimbing 1:</strong> {{ $sidang->dosenPembimbing->nama ?? 'N/A' }}</p>
            <p><strong>Dosen Pembimbing 2 (Penguji 1):</strong> {{ $sidang->dosenPenguji1->nama ?? 'N/A' }}</p>
    
            <hr>
    
            <h3>Respon Anda</h3>
            <p>Anda berperan sebagai:
                @php
                    $dosenLoginId = Auth::user()->dosen->id;
                    if ($sidang->ketua_sidang_dosen_id == $dosenLoginId) echo 'Ketua Sidang';
                    elseif ($sidang->sekretaris_sidang_dosen_id == $dosenLoginId) echo 'Sekretaris Sidang';
                    elseif ($sidang->anggota1_sidang_dosen_id == $dosenLoginId) echo 'Anggota Sidang 1 (Penguji)';
                    elseif ($sidang->anggota2_sidang_dosen_id == $dosenLoginId) echo 'Anggota Sidang 2 (Penguji)';
                    elseif ($sidang->dosen_pembimbing_id == $dosenLoginId) echo 'Dosen Pembimbing 1';
                    elseif ($sidang->dosen_penguji1_id == $dosenLoginId) echo 'Dosen Pembimbing 2';
                @endphp
            </p>
    
            <form action="{{ route('dosen.sidang.respon.submit', $sidang->id) }}" method="POST">
                @csrf
                <div class="form-group">
                    <label for="respon">Pilih Respon:</label>
                    <select name="respon" id="respon" class="form-control" required>
                        <option value="">-- Pilih Respon --</option>
                        <option value="setuju" {{ old('respon') == 'setuju' ? 'selected' : '' }}>Setuju</option>
                        <option value="tolak" {{ old('respon') == 'tolak' ? 'selected' : '' }}>Tolak</option>
                    </select>
                    @error('respon') <span class="error-message">{{ $message }}</span> @enderror
                </div>
    
                <div class="form-group">
                    <label for="catatan">Catatan (Opsional):</label>
                    <textarea name="catatan" id="catatan" rows="4" class="form-control" placeholder="Tulis catatan jika diperlukan">{{ old('catatan') }}</textarea>
                    @error('catatan') <span class="error-message">{{ $message }}</span> @enderror
                </div>
    
                <div class="buttons">
                    <button type="submit" class="btn btn-primary">Kirim Respon</button>
                </div>
            </form>
        </div>
    </body>
    </html>
    ----------------------------------------------
    // FILE: resources/views/dosen/pengajuan/pengajuan_saya.blade.php
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Pengajuan Saya - Dosen</title>
        <style>
            body { font-family: sans-serif; margin: 20px; background-color: #f4f7f6; }
            .container {
                max-width: 1400px; /* Lebarkan container untuk menampung lebih banyak kolom */
                width: 95%; /* Pastikan responsifitas untuk layar lebih kecil */
                margin: 30px auto;
                padding: 25px;
                border: 1px solid #e0e0e0;
                border-radius: 10px;
                box-shadow: 0 4px 8px rgba(0,0,0,0.05);
                background-color: #fff;
            }
            h2 { text-align: center; margin-bottom: 25px; color: #333; }
            .back-link { display: inline-block; margin-bottom: 20px; text-decoration: none; color: #007bff; font-weight: bold; }
            .back-link:hover { text-decoration: underline; }
            table { width: 100%; border-collapse: collapse; margin-top: 20px; }
            th, td {
                border: 1px solid #e9e9e9;
                padding: 12px 15px;
                text-align: left;
                font-size: 0.95em;
                /* white-space: nowrap; */ /* Dihapus untuk memungkinkan teks wrap jika dibutuhkan */
            }
            th { background-color: #f8f8f8; color: #555; text-transform: uppercase; }
            tr:nth-child(even) { background-color: #fcfcfc; }
            tr:hover { background-color: #f1f1f1; }
            .btn { padding: 8px 15px; border: none; border-radius: 5px; cursor: pointer; text-decoration: none; color: white; display: inline-block; font-size: 0.9em; margin-top: 5px; transition: background-color 0.3s ease; }
            .btn-info { background-color: #17a2b8; }
            .btn-info:hover { background-color: #138496; }
            .btn-warning { background-color: #ffc107; color: #333; }
            .btn-warning:hover { background-color: #e0a800; }
            .alert { padding: 12px; margin-bottom: 20px; border-radius: 5px; font-size: 0.95em; }
            .alert-success { background-color: #d4edda; color: #155724; border: 1px solid #c3e6cb; }
            .alert-danger { background-color: #f8d7da; color: #721c24; border: 1px solid #f5c6cb; }
            .no-data { text-align: center; color: #777; padding: 30px; font-size: 1.1em; }
        </style>
    </head>
    <body>
        <div class="container">
            <h2>Daftar Pengajuan yang Melibatkan Anda</h2>
            <a href="{{ route('dosen.dashboard') }}" class="back-link">&larr; Kembali ke Dashboard</a>
    
            @if (session('success'))
                <div class="alert alert-success">
                    {{ session('success') }}
                </div>
            @endif
            @if (session('error'))
                <div class="alert alert-danger">
                    {{ session('error') }}
                </div>
            @endif
    
            @if ($pengajuansInvolved->isEmpty())
                <p class="no-data">Tidak ada pengajuan yang melibatkan Anda saat ini.</p>
            @else
                {{-- Wrapper table-responsive dihapus --}}
                <table>
                    <thead>
                        <tr>
                            <th>ID Pengajuan</th>
                            <th>Mahasiswa</th>
                            <th>Jenis</th>
                            <th>Status</th>
                            <th>Peran Anda</th>
                            {{-- Kolom Pembimbing, Penguji 1, Penguji 2 dihapus --}}
                            <th>Ketua Sidang</th>
                            <th>Sekretaris</th>
                            <th>Anggota 1</th>
                            <th>Anggota 2</th>
                            <th>Aksi</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach ($pengajuansInvolved as $pengajuan)
                            <tr>
                                <td>{{ $pengajuan->id }}</td>
                                <td>{{ $pengajuan->mahasiswa->nama_lengkap }} ({{ $pengajuan->mahasiswa->nim }})</td>
                                <td>{{ strtoupper($pengajuan->jenis_pengajuan) }}</td>
                                <td>{{ str_replace('_', ' ', $pengajuan->status) }}</td>
                                <td>
                                    @php
                                        $dosenId = Auth::user()->dosen->id;
                                        $roles = [];
                                        if ($pengajuan->sidang) {
                                            if ($pengajuan->sidang->dosen_pembimbing_id == $dosenId) $roles[] = 'Pembimbing';
                                            if ($pengajuan->sidang->dosen_penguji1_id == $dosenId) $roles[] = 'Penguji 1';
                                            if ($pengajuan->sidang->dosen_penguji2_id == $dosenId) $roles[] = 'Penguji 2';
                                            if ($pengajuan->sidang->ketua_sidang_dosen_id == $dosenId) $roles[] = 'Ketua Sidang';
                                            if ($pengajuan->sidang->sekretaris_sidang_dosen_id == $dosenId) $roles[] = 'Sekretaris Sidang';
                                            if ($pengajuan->sidang->anggota1_sidang_dosen_id == $dosenId) $roles[] = 'Anggota Sidang 1';
                                            if ($pengajuan->sidang->anggota2_sidang_dosen_id == $dosenId) $roles[] = 'Anggota Sidang 2';
                                        }
                                    @endphp
                                    {{ empty($roles) ? 'N/A' : implode(', ', $roles) }}
                                </td>
                                {{-- Data cell untuk Pembimbing, Penguji 1, Penguji 2 dihapus --}}
                                <td>{{ $pengajuan->sidang->ketuaSidang->nama ?? 'N/A' }}</td>
                                <td>{{ $pengajuan->sidang->sekretarisSidang->nama ?? 'N/A' }}</td>
                                <td>{{ $pengajuan->sidang->anggota1Sidang->nama ?? 'N/A' }}</td>
                                <td>{{ $pengajuan->sidang->anggota2Sidang->nama ?? 'N/A' }}</td>
                                <td>
                                    <a href="{{ route('dosen.pengajuan.show', $pengajuan->id) }}" class="btn btn-info">Detail</a>
                                    {{-- Contoh Aksi Spesifik berdasarkan status dan peran --}}
                                    @if ($pengajuan->status === 'dosen_ditunjuk' && $pengajuan->sidang)
                                        @if (in_array($dosenId, [$pengajuan->sidang->dosen_pembimbing_id, $pengajuan->sidang->dosen_penguji1_id, $pengajuan->sidang->dosen_penguji2_id]))
                                            {{-- Link ke form nilai jika dosen ini adalah pembimbing/penguji --}}
                                            <a href="{{ route('dosen.sidang.nilai.edit', $pengajuan->sidang->id) }}" class="btn btn-warning">Beri Nilai</a>
                                        @endif
                                        @if ($pengajuan->sidang->ketua_sidang_dosen_id == $dosenId && is_null($pengajuan->sidang->tanggal_waktu_sidang))
                                            {{-- Link ke form jadwal jika dosen ini ketua sidang dan jadwal belum ada --}}
                                            <a href="{{ route('dosen.jadwal.create', $pengajuan->id) }}" class="btn btn-info" style="background-color: #6c757d;">Jadwalkan</a>
                                        @endif
                                    @endif
                                </td>
                            </tr>
                        @endforeach
                    </tbody>
                </table>
            @endif
        </div>
    </body>
    </html>
    ----------------------------------------------
    // FILE: resources/views/dosen/pengajuan/show.blade.php
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Detail Pengajuan - Dosen</title>
        <style>
            body { font-family: sans-serif; margin: 20px; background-color: #f4f7f6; }
            .container { max-width: 900px; margin: 30px auto; padding: 25px; border: 1px solid #e0e0e0; border-radius: 10px; box-shadow: 0 4px 8px rgba(0,0,0,0.05); background-color: #fff; }
            h2 { text-align: center; margin-bottom: 25px; color: #333; }
            .detail-group { margin-bottom: 15px; }
            .detail-group label { font-weight: bold; display: block; margin-bottom: 5px; color: #555; }
            .detail-group p { margin: 0; padding: 8px 12px; background-color: #f9f9f9; border: 1px solid #eee; border-radius: 5px; }
            .dokumen-list { list-style-type: none; padding: 0; }
            .dokumen-list li { background-color: #f0f8ff; border: 1px solid #e0efff; padding: 10px; margin-bottom: 8px; border-radius: 5px; display: flex; justify-content: space-between; align-items: center; }
            .dokumen-list li a { text-decoration: none; color: #007bff; font-weight: bold; }
            .dokumen-list li a:hover { text-decoration: underline; }
            .btn-primary:hover { background-color: #0056b3; }
            .btn-success { background-color: #28a745; }
            .btn-danger { background-color: #dc3545; }
            .btn-danger:hover { background-color: #c82333; }
            .btn-info { background-color: #17a2b8; }
            .btn-info:hover { background-color: #138496; }
        
            .btn {
            padding: 8px 15px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            text-decoration: none;
            color: white; /* Pastikan ini ada dan efektif untuk semua tombol */
            display: inline-block;
            font-size: 0.9em;
            margin-right: 10px;
            margin-top: 20px;
            transition: background-color 0.3s ease;
            }
            .btn-primary {
                background-color: #007bff;
                color: white; /* Tambahkan atau pastikan ini ada untuk .btn-primary */
            }
            .btn-primary:hover {
                background-color: #0056b3;
            }
            /* ... gaya CSS lainnya ... */
        
            /* Spesifik untuk tautan di daftar dokumen jika Anda ingin lebih presisi */
            .dokumen-list li a.btn-primary {
                color: white; /* Pastikan ini ada khusus untuk tombol 'Lihat' */
            }
        </style>
        
    </head>
    <body>
        <div class="container">
            <h2>Detail Pengajuan - {{ strtoupper($pengajuan->jenis_pengajuan) }}</h2>
    
            <div class="detail-group">
                <label>Mahasiswa:</label>
                <p>{{ $pengajuan->mahasiswa->nama_lengkap }} ({{ $pengajuan->mahasiswa->nim }})</p>
            </div>
    
            <div class="detail-group">
                <label>Jenis Pengajuan:</label>
                <p>{{ strtoupper($pengajuan->jenis_pengajuan) }}</p>
            </div>
    
            @if ($pengajuan->judul_pengajuan)
                <div class="detail-group">
                    <label>Judul Pengajuan:</label>
                    <p>{{ $pengajuan->judul_pengajuan }}</p>
                </div>
            @endif
    
            <div class="detail-group">
                <label>Status Pengajuan:</label>
                <p>{{ str_replace('_', ' ', $pengajuan->status) }}</p>
            </div>
    
            @if ($pengajuan->catatan_admin)
                <div class="detail-group">
                    <label>Catatan Admin:</label>
                    <p>{{ $pengajuan->catatan_admin }}</p>
                </div>
            @endif
    
            @if ($pengajuan->catatan_kaprodi)
                <div class="detail-group">
                    <label>Catatan Kaprodi:</label>
                    <p>{{ $pengajuan->catatan_kaprodi }}</p>
                </div>
            @endif
    
            <h3>Informasi Sidang:</h3>
            @if ($pengajuan->sidang)
                <div class="detail-group">
                    <label>Tanggal & Waktu Sidang:</label>
                    <p>{{ $pengajuan->sidang->tanggal_waktu_sidang ? \Carbon\Carbon::parse($pengajuan->sidang->tanggal_waktu_sidang)->format('d F Y H:i') : 'Belum Dijadwalkan' }}</p>
                </div>
                <div class="detail-group">
                    <label>Ruangan Sidang:</label>
                    <p>{{ $pengajuan->sidang->ruangan_sidang ?? 'Belum Ditentukan' }}</p>
                </div>
                {{-- Bagian Dosen Pembimbing dan Penguji dihapus sesuai permintaan --}}
                {{--
                <div class="detail-group">
                    <label>Dosen Pembimbing:</label>
                    <p>{{ $pengajuan->sidang->dosenPembimbing->nama ?? 'N/A' }}</p>
                </div>
                <div class="detail-group">
                    <label>Dosen Penguji 1:</label>
                    <p>{{ $pengajuan->sidang->dosenPenguji1->nama ?? 'N/A' }}</p>
                </div>
                <div class="detail-group">
                    <label>Dosen Penguji 2:</label>
                    <p>{{ $pengajuan->sidang->dosenPenguji2->nama ?? 'N/A' }}</p>
                </div>
                --}}
                <div class="detail-group">
                    <label>Ketua Sidang:</label>
                    <p>{{ $pengajuan->sidang->ketuaSidang->nama ?? 'N/A' }}</p>
                </div>
                <div class="detail-group">
                    <label>Sekretaris Sidang:</label>
                    <p>{{ $pengajuan->sidang->sekretarisSidang->nama ?? 'N/A' }}</p>
                </div>
                <div class="detail-group">
                    <label>Anggota Sidang 1:</label>
                    <p>{{ $pengajuan->sidang->anggota1Sidang->nama ?? 'N/A' }}</p>
                </div>
                <div class="detail-group">
                    <label>Anggota Sidang 2:</label>
                    <p>{{ $pengajuan->sidang->anggota2Sidang->nama ?? 'N/A' }}</p>
                </div>
                @else
                <p>Informasi sidang belum tersedia.</p>
            @endif
    
            {{--<h3>Dokumen Pengajuan:</h3>
            @if ($pengajuan->dokumens->isEmpty())
                <p>Tidak ada dokumen yang diunggah untuk pengajuan ini.</p>
            @else
                <ul class="dokumen-list">
                    @foreach ($pengajuan->dokumens as $dokumen)
                        <li>
                            <span>{{ $dokumen->jenis_dokumen }}: {{ $dokumen->nama_file }} (Status: {{ str_replace('_', ' ', $dokumen->status) }})</span>
                            <div>
                                <a href="{{ url('storage/' . $dokumen->path_file) }}" target="_blank" class="btn btn-primary" style="margin-top: 0;">Lihat</a>
                                
                                @if ($dokumen->status === 'menunggu_verifikasi')
                                    <form action="{{ route('dosen.dokumen.setujui', $dokumen->id) }}" method="POST" style="display:inline-block;">
                                        @csrf
                                        @method('PUT')
                                        <button type="submit" class="btn btn-success" style="margin-top: 0;">Setujui</button>
                                    </form>
                                    <form action="{{ route('dosen.dokumen.tolak', $dokumen->id) }}" method="POST" style="display:inline-block;">
                                        @csrf
                                        @method('PUT')
                                        <button type="submit" class="btn btn-danger" style="margin-top: 0;">Tolak</button>
                                    </form>
                                @endif
                            </div>
                        </li>
                    @endforeach
                </ul>
            @endif--}}
    
            <a href="{{ route('dosen.pengajuan.saya') }}" class="btn btn-info">Kembali ke Daftar Pengajuan Saya</a>
        </div>
    </body>
    </html>
    ----------------------------------------------
    // FILE: resources/views/dosen/sidang/respon_form.blade.php
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Respon Undangan Sidang</title>
        <style>
            body {
                font-family: Arial, sans-serif;
                background-color: #f4f4f4;
                margin: 0;
                padding: 20px;
            }
            .container {
                max-width: 800px;
                margin: 20px auto;
                background-color: #fff;
                padding: 30px;
                border-radius: 8px;
                box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            }
            h2 {
                color: #333;
                margin-bottom: 20px;
                text-align: center;
            }
            .info-group {
                margin-bottom: 15px;
            }
            .info-group label {
                font-weight: bold;
                display: block;
                margin-bottom: 5px;
                color: #555;
            }
            .info-group p {
                margin: 0;
                padding: 8px 12px;
                background-color: #f9f9f9;
                border: 1px solid #ddd;
                border-radius: 4px;
            }
            .form-group {
                margin-bottom: 20px;
            }
            .form-group label {
                display: block;
                margin-bottom: 8px;
                font-weight: bold;
            }
            .form-group input[type="radio"] {
                margin-right: 10px;
            }
            .form-group textarea {
                width: 100%;
                padding: 10px;
                border: 1px solid #ddd;
                border-radius: 4px;
                resize: vertical;
                min-height: 80px;
            }
            .buttons {
                text-align: right;
                margin-top: 30px;
            }
            .buttons button {
                padding: 10px 20px;
                border: none;
                border-radius: 5px;
                cursor: pointer;
                font-size: 16px;
                margin-left: 10px;
            }
            .buttons button[type="submit"] {
                background-color: #007bff;
                color: white;
            }
            .buttons .btn-tolak {
                background-color: #dc3545;
                color: white;
            }
            .alert {
                padding: 15px;
                margin-bottom: 20px;
                border-radius: 4px;
                text-align: center;
            }
            .alert-success {
                background-color: #d4edda;
                color: #155724;
                border: 1px solid #c3e6cb;
            }
            .alert-danger {
                background-color: #f8d7da;
                color: #721c24;
                border: 1px solid #f5c6cb;
            }
            .alert-info {
                background-color: #d1ecf1;
                color: #0c5460;
                border: 1px solid #bee5eb;
            }
            .back-link {
                display: block;
                text-align: center;
                margin-top: 20px;
                color: #007bff;
                text-decoration: none;
            }
            .error-message {
                color: #dc3545;
                font-size: 0.8em;
                margin-top: 5px;
                display: block;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <h2>Respon Undangan Sidang</h2>
    
            @if (session('success'))
                <div class="alert alert-success">{{ session('success') }}</div>
            @endif
            @if (session('error'))
                <div class="alert alert-danger">{{ session('error') }}</div>
            @endif
            @if (session('info'))
                <div class="alert alert-info">{{ session('info') }}</div>
            @endif
            @if ($errors->any())
                <div class="alert alert-danger">
                    <ul>
                        @foreach ($errors->all() as $error)
                            <li>{{ $error }}</li>
                        @endforeach
                    </ul>
                </div>
            @endif
    
            <div class="info-group">
                <label>Mahasiswa:</label>
                <p>{{ $sidang->pengajuan->mahasiswa->nama_lengkap }} (NIM: {{ $sidang->pengajuan->mahasiswa->nim }})</p>
            </div>
            <div class="info-group">
                <label>Jenis Pengajuan:</label>
                <p>{{ strtoupper($sidang->pengajuan->jenis_pengajuan) }}</p>
            </div>
            @if ($sidang->tanggal_waktu_sidang)
                <div class="info-group">
                    <label>Tanggal & Waktu Sidang:</label>
                    <p>{{ \Carbon\Carbon::parse($sidang->tanggal_waktu_sidang)->translatedFormat('l, d F Y H:i') }} WIB</p>
                </div>
            @endif
            @if ($sidang->ruangan_sidang)
                <div class="info-group">
                    <label>Ruangan Sidang:</label>
                    <p>{{ $sidang->ruangan_sidang }}</p>
                </div>
            @endif
            <div class="info-group">
                <label>Peran Anda:</label>
                <p>
                    @if ($peran == 'ketua_sidang') Ketua Sidang
                    @elseif ($peran == 'sekretaris_sidang') Sekretaris Sidang
                    @elseif ($peran == 'anggota1_sidang') Anggota Sidang 1 (Penguji)
                    @elseif ($peran == 'anggota2_sidang') Anggota Sidang 2 (Penguji)
                    @elseif ($peran == 'dosen_pembimbing') Dosen Pembimbing 1
                    @elseif ($peran == 'dosen_penguji1') Dosen Pembimbing 2
                    @endif
                </p>
            </div>
    
            <hr>
    
            <h3>Tim Sidang:</h3>
            <div class="info-group">
                <label>Dosen Pembimbing 1:</label>
                <p>{{ $sidang->dosenPembimbing->nama ?? '-' }}</p>
            </div>
            <div class="info-group">
                <label>Dosen Pembimbing 2:</label>
                <p>{{ $sidang->dosenPenguji1->nama ?? '-' }}</p>
            </div>
            <div class="info-group">
                <label>Ketua Sidang:</label>
                <p>{{ $sidang->ketuaSidang->nama ?? '-' }}</p>
            </div>
            <div class="info-group">
                <label>Sekretaris Sidang:</label>
                <p>{{ $sidang->sekretarisSidang->nama ?? '-' }}</p>
            </div>
            <div class="info-group">
                <label>Anggota Sidang 1 (Penguji):</label>
                <p>{{ $sidang->anggota1Sidang->nama ?? '-' }}</p>
            </div>
            <div class="info-group">
                <label>Anggota Sidang 2 (Penguji):</label>
                <p>{{ $sidang->anggota2Sidang->nama ?? '-' }}</p>
            </div>
            
            <hr>
    
            <form action="{{ route('dosen.sidang.respon.submit', $sidang->id) }}" method="POST">
                @csrf
                <div class="form-group">
                    <label>Respon Anda:</label>
                    <input type="radio" name="response" id="response_setuju" value="setuju" {{ old('response') == 'setuju' ? 'checked' : '' }} required>
                    <label for="response_setuju">Setuju</label>
                    
                    <input type="radio" name="response" id="response_tolak" value="tolak" {{ old('response') == 'tolak' ? 'checked' : '' }} required>
                    <label for="response_tolak">Tolak</label>
                    @error('response')
                        <span class="error-message">{{ $message }}</span>
                    @enderror
                </div>
    
                <div class="form-group" id="alasan_tolak_group" style="display: {{ old('response') == 'tolak' ? 'block' : 'none' }};">
                    <label for="alasan">Alasan (Wajib jika Menolak):</label>
                    <textarea name="alasan" id="alasan" placeholder="Sebutkan alasan Anda menolak undangan sidang ini...">{{ old('alasan') }}</textarea>
                    @error('alasan')
                        <span class="error-message">{{ $message }}</span>
                    @enderror
                </div>
    
                <div class="buttons">
                    <button type="submit" name="action" value="submit_response">Kirim Respon</button>
                </div>
            </form>
    
            <a href="{{ route('dosen.dashboard') }}" class="back-link">Kembali ke Dashboard Dosen</a>
        </div>
    
        <script>
            const responseSetuju = document.getElementById('response_setuju');
            const responseTolak = document.getElementById('response_tolak');
            const alasanTolakGroup = document.getElementById('alasan_tolak_group');
            const alasanTextarea = document.getElementById('alasan');
    
            function toggleAlasanField() {
                if (responseTolak.checked) {
                    alasanTolakGroup.style.display = 'block';
                    alasanTextarea.setAttribute('required', 'required'); // Wajib jika menolak
                } else {
                    alasanTolakGroup.style.display = 'none';
                    alasanTextarea.removeAttribute('required');
                    alasanTextarea.value = ''; // Kosongkan jika tidak menolak
                }
            }
    
            responseSetuju.addEventListener('change', toggleAlasanField);
            responseTolak.addEventListener('change', toggleAlasanField);
    
            // Panggil saat halaman dimuat jika ada old input
            toggleAlasanField();
        </script>
    </body>
    </html>
    ----------------------------------------------
    // FILE: resources/views/dosen/sidang/nilai/edit.blade.php
    <!DOCTYPE html>
    <html lang="en">
    
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Input Nilai Sidang</title>
    </head>
    
    <body>
    
        <h2>Input Nilai Sidang</h2>
    
        <p>Mahasiswa: {{ $sidang->pengajuan->mahasiswa->nama_lengkap }} ({{ $sidang->pengajuan->mahasiswa->nim }})</p>
    
        @if (session('success'))
            <div>
                {{ session('success') }}
            </div>
        @endif
    
        @if ($errors->any())
            <div>
                <ul>
                    @foreach ($errors->all() as $error)
                        <li>{{ $error }}</li>
                    @endforeach
                </ul>
            </div>
        @endif
    
        <form method="POST" action="{{ route('dosen.sidang.nilai.store', $sidang->id) }}">
            @csrf
    
            <div>
                <label for="nilai_pembimbing">Nilai Pembimbing</label>
                <input type="number" name="nilai_pembimbing" id="nilai_pembimbing" value="{{ old('nilai_pembimbing', $sidang->nilai_pembimbing) }}" required>
            </div>
    
            <div>
                <label for="nilai_penguji_1">Nilai Penguji 1</label>
                <input type="number" name="nilai_penguji_1" id="nilai_penguji_1" value="{{ old('nilai_penguji_1', $sidang->nilai_penguji_1) }}" required>
            </div>
    
            <div>
                <label for="nilai_penguji_2">Nilai Penguji 2</label>
                <input type="number" name="nilai_penguji_2" id="nilai_penguji_2" value="{{ old('nilai_penguji_2', $sidang->nilai_penguji_2) }}" required>
            </div>
    
            <button type="submit">Simpan Nilai</button>
        </form>
    
        <a href="{{ route('dosen.pengajuan.show', $sidang->pengajuan_id) }}">Kembali ke Detail Pengajuan</a>
    
    </body>
    
    </html>
    ----------------------------------------------
    // FILE: resources/views/emails/jadwal_sidang.blade.php
    <!DOCTYPE html>
    <html lang="en">
    
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Jadwal Sidang Mahasiswa</title>
    </head>
    
    <body>
    
        <h2>Jadwal Sidang Mahasiswa</h2>
    
        <p>Yth. Bapak/Ibu Dosen,</p>
    
        <p>
            Dengan hormat, kami memberitahukan bahwa telah dijadwalkan sidang untuk mahasiswa:
            <b>{{ $sidang->pengajuan->mahasiswa->nama_lengkap }} ({{ $sidang->pengajuan->mahasiswa->nim }})</b>
        </p>
    
        <p>
            <b>Detail Sidang:</b><br>
            Tanggal: {{ $sidang->tanggal_sidang }}<br>
            Waktu: {{ $sidang->waktu_sidang }}<br>
            Tempat: {{ $sidang->tempat_sidang }}
        </p>
    
        <p>
            Demikian informasi ini kami sampaikan. Terima kasih atas perhatiannya.
        </p>
    
    </body>
    
    </html>
    ----------------------------------------------
    // FILE: resources/views/kajur/dashboard.blade.php
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Dashboard Kajur</title>
        <style>
            body { font-family: sans-serif; margin: 20px; }
            .container { max-width: 1280px; margin: 0 auto; padding: 20px; border: 1px solid #ccc; border-radius: 8px; }
            .header { background-color: #f2f2f2; padding: 15px; border-bottom: 1px solid #eee; margin-bottom: 20px; display: flex; justify-content: space-between; align-items: center; }
            .nav-links a { margin-right: 15px; text-decoration: none; color: #007bff; }
            .card { border: 1px solid #ddd; border-radius: 5px; padding: 15px; margin-bottom: 15px; background-color: #fff; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
            .card-header { font-weight: bold; margin-bottom: 10px; color: #333; }
            .card-body { font-size: 1.5em; text-align: center; color: #555; }
            .row { display: flex; justify-content: space-around; flex-wrap: wrap; }
            .col-md-4 { flex: 0 0 30%; max-width: 30%; padding: 10px; box-sizing: border-box; }
            .alert { padding: 10px; margin-bottom: 15px; border-radius: 5px; }
            .alert-success { background-color: #d4edda; color: #155724; border-color: #c3e6cb; }
            .alert-danger { background-color: #f8d7da; color: #721c24; border-color: #f5c6cb; }
            hr { border: none; border-top: 1px solid #eee; margin: 20px 0; }
            .logout-form button { background-color: #dc3545; color: white; padding: 8px 12px; border: none; border-radius: 5px; cursor: pointer; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Dashboard Kajur</h1>
                <div class="nav-links">
                    <a href="{{ route('kajur.dashboard') }}">Dashboard</a>
                    <a href="{{ route('kajur.pengajuan.perlu_verifikasi') }}">Pengajuan Perlu Verifikasi</a>
                    <a href="{{ route('kajur.pengajuan.sudah_verifikasi') }}">Pengajuan Terverifikasi</a>
                    {{-- Tambahkan link navigasi lainnya sesuai kebutuhan --}}
                    <form action="{{ route('kajur.logout') }}" method="POST" class="logout-form" style="display: inline;">
                        @csrf
                        <button type="submit">Logout</button>
                    </form>
                </div>
            </div>
    
            @if (session('success'))
                <div class="alert alert-success">
                    {{ session('success') }}
                </div>
            @endif
    
            @if (session('error'))
                <div class="alert alert-danger">
                    {{ session('error') }}
                </div>
            @endif
    
            <h2>Ringkasan Sidang</h2>
            <div class="row">
                <div class="col-md-4">
                    <div class="card">
                        <div class="card-header">Sidang Hari Ini</div>
                        <div class="card-body">{{ $jumlahSidangSedang }}</div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card">
                        <div class="card-header">Sidang Telah Berlangsung</div>
                        <div class="card-body">{{ $jumlahSidangTelah }}</div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card">
                        <div class="card-header">Sidang Akan Datang</div>
                        <div class="card-body">{{ $jumlahSidangAkan }}</div>
                    </div>
                </div>
            </div>
    
            <hr>
    
            {{-- Ini adalah dashboard utama, daftar pengajuan akan di halaman terpisah --}}
            <p>Gunakan navigasi di atas untuk melihat daftar pengajuan.</p>
        </div>
    </body>
    </html>
    ----------------------------------------------
    // FILE: resources/views/kajur/login.blade.php
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Kajur Login</title>
    </head>
    <body>
    
        <h2>Kajur Login</h2>
    
        @if ($errors->any())
            <div>
                <ul>
                    @foreach ($errors->all() as $error)
                        <li>{{ $error }}</li>
                    @endforeach
                </ul>
            </div>
        @endif
    
        <form method="POST" action="{{ route('kajur.login') }}">
            @csrf
    
            <div>
                <label for="email">Email</label>
                <input type="email" name="email" id="email" required>
            </div>
    
            <div>
                <label for="password">Password</label>
                <input type="password" name="password" id="password" required>
            </div>
    
            <button type="submit">Login</button>
        </form>
    
    </body>
    </html>
    ----------------------------------------------
    // FILE: resources/views/kajur/pengajuan/index.blade.php
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Daftar Pengajuan Menunggu Pengesahan (Kajur)</title>
        </head>
    <body>
        <div class="container">
            <h2>Daftar Pengajuan Menunggu Pengesahan Kajur</h2>
    
            @if (session('success'))
                <div class="alert alert-success">{{ session('success') }}</div>
            @endif
            @if (session('error'))
                <div class="alert alert-danger">{{ session('error') }}</div>
            @endif
    
            <table>
                <thead>
                    <tr>
                        <th>NIM</th>
                        <th>Nama Mahasiswa</th>
                        <th>Jenis Pengajuan</th>
                        <th>Tanggal Sidang</th>
                        <th>Ruangan</th>
                        <th>Status</th>
                        <th>Aksi</th>
                    </tr>
                </thead>
                <tbody>
                    @forelse ($pengajuans as $pengajuan)
                    <tr>
                        <td>{{ $pengajuan->mahasiswa->nim }}</td>
                        <td>{{ $pengajuan->mahasiswa->nama_lengkap }}</td>
                        <td>{{ strtoupper($pengajuan->jenis_pengajuan) }}</td>
                        <td>{{ $pengajuan->sidang->tanggal_waktu_sidang ? \Carbon\Carbon::parse($pengajuan->sidang->tanggal_waktu_sidang)->translatedFormat('d F Y H:i') : '-' }}</td>
                        <td>{{ $pengajuan->sidang->ruangan_sidang ?? '-' }}</td>
                        <td>
                            @if ($pengajuan->status == 'siap_sidang_kajur')
                                <span class="status-warning">Menunggu Pengesahan Kajur</span>
                            @else
                                {{ $pengajuan->status }}
                            @endif
                        </td>
                        <td>
                            <a href="{{ route('kajur.pengajuan.show', $pengajuan->id) }}">Lihat Detail & Sahkan</a>
                        </td>
                    </tr>
                    @empty
                    <tr>
                        <td colspan="7">Tidak ada pengajuan yang menunggu pengesahan Kajur.</td>
                    </tr>
                    @endforelse
                </tbody>
            </table>
    
            {{ $pengajuans->links() }}
        </div>
    </body>
    </html>
    ----------------------------------------------
    // FILE: resources/views/kajur/pengajuan/perlu_verifikasi.blade.php
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Pengajuan Perlu Verifikasi - Kajur</title>
        <style>
            body { font-family: sans-serif; margin: 20px; }
            .container { max-width: 1280px; margin: 0 auto; padding: 20px; border: 1px solid #ccc; border-radius: 8px; }
            .header { background-color: #f2f2f2; padding: 15px; border-bottom: 1px solid #eee; margin-bottom: 20px; display: flex; justify-content: space-between; align-items: center; }
            .nav-links a { margin-right: 15px; text-decoration: none; color: #007bff; }
            .table { width: 100%; border-collapse: collapse; margin-top: 20px; }
            .table th, .table td { border: 1px solid #ddd; padding: 8px; text-align: left; }
            .table th { background-color: #f2f2f2; }
            .btn { padding: 8px 12px; border: none; border-radius: 5px; cursor: pointer; text-decoration: none; display: inline-block; }
            .btn-primary { background-color: #007bff; color: white; }
            .alert { padding: 10px; margin-bottom: 15px; border-radius: 5px; }
            .alert-success { background-color: #d4edda; color: #155724; border-color: #c3e6cb; }
            .alert-danger { background-color: #f8d7da; color: #721c24; border-color: #f5c6cb; }
            .logout-form button { background-color: #dc3545; color: white; padding: 8px 12px; border: none; border-radius: 5px; cursor: pointer; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Pengajuan Perlu Verifikasi</h1>
                <div class="nav-links">
                    <a href="{{ route('kajur.dashboard') }}">Dashboard</a>
                    <a href="{{ route('kajur.pengajuan.perlu_verifikasi') }}">Pengajuan Perlu Verifikasi</a>
                    <a href="{{ route('kajur.pengajuan.sudah_verifikasi') }}">Pengajuan Terverifikasi</a>
                    {{-- Tambahkan link navigasi lainnya sesuai kebutuhan --}}
                    <form action="{{ route('kajur.logout') }}" method="POST" class="logout-form" style="display: inline;">
                        @csrf
                        <button type="submit">Logout</button>
                    </form>
                </div>
            </div>
    
            @if (session('success'))
                <div class="alert alert-success">
                    {{ session('success') }}
                </div>
            @endif
    
            @if (session('error'))
                <div class="alert alert-danger">
                    {{ session('error') }}
                </div>
            @endif
    
            @if ($pengajuanSiapSidang->isEmpty())
                <p>Tidak ada pengajuan sidang yang siap diverifikasi saat ini.</p>
            @else
                <table class="table">
                    <thead>
                        <tr>
                            <th>ID Pengajuan</th>
                            <th>Nama Mahasiswa</th>
                            <th>Judul Tugas Akhir</th>
                            <th>Tanggal Pengajuan</th>
                            <th>Status</th>
                            <th>Aksi</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach ($pengajuanSiapSidang as $pengajuan)
                        <tr>
                            <td>{{ $pengajuan->id }}</td>
                            <td>{{ $pengajuan->mahasiswa->nama }}</td> {{-- Asumsi ada relasi ke model Mahasiswa --}}
                            <td>{{ $pengajuan->judul_tugas_akhir }}</td>
                            <td>{{ $pengajuan->created_at->format('d M Y') }}</td>
                            <td>{{ Str::replace('_', ' ', Str::title($pengajuan->status)) }}</td>
                            <td>
                                <a href="{{ route('kajur.verifikasi.form', $pengajuan->id) }}" class="btn btn-primary">Verifikasi</a>
                            </td>
                        </tr>
                        @endforeach
                    </tbody>
                </table>
            @endif
        </div>
    </body>
    </html>
    ----------------------------------------------
    // FILE: resources/views/kajur/pengajuan/show.blade.php
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Detail Pengajuan & Pengesahan Jadwal (Kajur)</title>
        </head>
    <body>
        <div class="container">
            <h2>Detail Pengajuan & Pengesahan Jadwal Sidang</h2>
    
            @if (session('success'))
                <div class="alert alert-success">{{ session('success') }}</div>
            @endif
            @if (session('error'))
                <div class="alert alert-danger">{{ session('error') }}</div>
            @endif
            @if ($errors->any())
                <div class="alert alert-danger">
                    <ul>
                        @foreach ($errors->all() as $error)
                            <li>{{ $error }}</li>
                        @endforeach
                    </ul>
                </div>
            @endif
    
            <div class="info-group">
                <label>Mahasiswa:</label>
                <p>{{ $pengajuan->mahasiswa->nama_lengkap }} (NIM: {{ $pengajuan->mahasiswa->nim }})</p>
            </div>
            <div class="info-group">
                <label>Jenis Pengajuan:</label>
                <p>{{ strtoupper($pengajuan->jenis_pengajuan) }}</p>
            </div>
            <div class="info-group">
                <label>Judul Pengajuan:</label>
                <p>{{ $pengajuan->judul }}</p>
            </div>
            <div class="info-group">
                <label>Status Saat Ini:</label>
                <p>{{ $pengajuan->status }} @if($pengajuan->alasan_penolakan_kajur) (Alasan: {{ $pengajuan->alasan_penolakan_kajur }}) @endif</p>
            </div>
    
            <h3>Detail Jadwal Sidang:</h3>
            @if ($pengajuan->sidang)
                <div class="info-group">
                    <label>Tanggal & Waktu Sidang:</label>
                    <p>{{ \Carbon\Carbon::parse($pengajuan->sidang->tanggal_waktu_sidang)->translatedFormat('l, d F Y H:i') }} WIB</p>
                </div>
                <div class="info-group">
                    <label>Ruangan Sidang:</label>
                    <p>{{ $pengajuan->sidang->ruangan_sidang }}</p>
                </div>
                <div class="info-group">
                    <label>Ketua Sidang:</label>
                    <p>{{ $pengajuan->sidang->ketuaSidang->nama ?? '-' }} (Persetujuan: {{ $pengajuan->sidang->persetujuan_ketua_sidang ?? '-' }})</p>
                </div>
                <div class="info-group">
                    <label>Sekretaris Sidang:</label>
                    <p>{{ $pengajuan->sidang->sekretarisSidang->nama ?? '-' }} (Persetujuan: {{ $pengajuan->sidang->persetujuan_sekretaris_sidang ?? '-' }})</p>
                </div>
                <div class="info-group">
                    <label>Anggota Sidang 1 (Penguji):</label>
                    <p>{{ $pengajuan->sidang->anggota1Sidang->nama ?? '-' }} (Persetujuan: {{ $pengajuan->sidang->persetujuan_anggota1_sidang ?? '-' }})</p>
                </div>
                @if ($pengajuan->sidang->anggota2Sidang)
                <div class="info-group">
                    <label>Anggota Sidang 2 (Penguji):</label>
                    <p>{{ $pengajuan->sidang->anggota2Sidang->nama ?? '-' }} (Persetujuan: {{ $pengajuan->sidang->persetujuan_anggota2_sidang ?? '-' }})</p>
                </div>
                @endif
                <div class="info-group">
                    <label>Dosen Pembimbing 1:</label>
                    <p>{{ $pengajuan->sidang->dosenPembimbing->nama ?? '-' }} (Persetujuan: {{ $pengajuan->sidang->persetujuan_dosen_pembimbing ?? '-' }})</p>
                </div>
                <div class="info-group">
                    <label>Dosen Pembimbing 2:</label>
                    <p>{{ $pengajuan->sidang->dosenPenguji1->nama ?? '-' }} (Persetujuan: {{ $pengajuan->sidang->persetujuan_dosen_penguji1 ?? '-' }})</p>
                </div>
            @else
                <div class="alert alert-info">Jadwal sidang belum ditentukan.</div>
            @endif
    
            <hr>
    
            @if ($pengajuan->status == 'siap_sidang_kajur')
                <h3>Pengesahan Jadwal Sidang:</h3>
                <form action="{{ route('kajur.pengajuan.sahkan', $pengajuan->id) }}" method="POST">
                    @csrf
                    @method('PUT')
    
                    <div class="form-group">
                        <label>Pilih Status Pengesahan:</label>
                        <input type="radio" name="sahkan_status" id="sahkan_setuju" value="setuju" {{ old('sahkan_status') == 'setuju' ? 'checked' : '' }} required>
                        <label for="sahkan_setuju">Setuju (Jadwal Sah & Final)</label><br>
                        
                        <input type="radio" name="sahkan_status" id="sahkan_tolak" value="tolak" {{ old('sahkan_status') == 'tolak' ? 'checked' : '' }} required>
                        <label for="sahkan_tolak">Tolak (Ada Masalah dengan Jadwal)</label>
                        @error('sahkan_status')
                            <span class="error-message">{{ $message }}</span>
                        @enderror
                    </div>
    
                    <div class="form-group" id="alasan_tolak_kajur_group" style="display: {{ old('sahkan_status') == 'tolak' ? 'block' : 'none' }};">
                        <label for="alasan_penolakan_kajur">Alasan Penolakan:</label>
                        <textarea name="alasan_penolakan_kajur" id="alasan_penolakan_kajur" placeholder="Sebutkan alasan penolakan, contoh: 'Waktu sidang tidak sesuai dengan kalender akademik.'">{{ old('alasan_penolakan_kajur') }}</textarea>
                        @error('alasan_penolakan_kajur')
                            <span class="error-message">{{ $message }}</span>
                        @enderror
                    </div>
    
                    <div class="buttons">
                        <button type="submit">Kirim Pengesahan</button>
                    </div>
                </form>
            @else
                <div class="alert alert-info">Jadwal sidang ini sudah diverifikasi dan tidak dapat diubah lagi oleh Kajur.</div>
            @endif
    
            <a href="{{ route('kajur.pengajuan.index') }}" class="back-link">Kembali ke Daftar Pengajuan</a>
        </div>
    
        <script>
            const sahkanSetuju = document.getElementById('sahkan_setuju');
            const sahkanTolak = document.getElementById('sahkan_tolak');
            const alasanTolakKajurGroup = document.getElementById('alasan_tolak_kajur_group');
            const alasanKajurTextarea = document.getElementById('alasan_penolakan_kajur');
    
            function toggleAlasanKajurField() {
                if (sahkanTolak.checked) {
                    alasanTolakKajurGroup.style.display = 'block';
                    alasanKajurTextarea.setAttribute('required', 'required');
                } else {
                    alasanTolakKajurGroup.style.display = 'none';
                    alasanKajurTextarea.removeAttribute('required');
                    alasanKajurTextarea.value = '';
                }
            }
    
            sahkanSetuju.addEventListener('change', toggleAlasanKajurField);
            sahkanTolak.addEventListener('change', toggleAlasanKajurField);
    
            toggleAlasanKajurField(); // Call on page load
        </script>
    </body>
    </html>
    ----------------------------------------------
    // FILE: resources/views/kajur/pengajuan/sudah_verifikasi.blade.php
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Pengajuan Terverifikasi - Kajur</title>
        <style>
            body { font-family: sans-serif; margin: 20px; }
            .container { max-width: 1280px; margin: 0 auto; padding: 20px; border: 1px solid #ccc; border-radius: 8px; }
            .header { background-color: #f2f2f2; padding: 15px; border-bottom: 1px solid #eee; margin-bottom: 20px; display: flex; justify-content: space-between; align-items: center; }
            .nav-links a { margin-right: 15px; text-decoration: none; color: #007bff; }
            .table { width: 100%; border-collapse: collapse; margin-top: 20px; }
            .table th, .table td { border: 1px solid #ddd; padding: 8px; text-align: left; }
            .table th { background-color: #f2f2f2; }
            .btn { padding: 8px 12px; border: none; border-radius: 5px; cursor: pointer; text-decoration: none; display: inline-block; }
            .btn-primary { background-color: #007bff; color: white; }
            .alert { padding: 10px; margin-bottom: 15px; border-radius: 5px; }
            .alert-success { background-color: #d4edda; color: #155724; border-color: #c3e6cb; }
            .alert-danger { background-color: #f8d7da; color: #721c24; border-color: #f5c6cb; }
            .logout-form button { background-color: #dc3545; color: white; padding: 8px 12px; border: none; border-radius: 5px; cursor: pointer; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Pengajuan Sudah Diverifikasi</h1>
                <div class="nav-links">
                    <a href="{{ route('kajur.dashboard') }}">Dashboard</a>
                    <a href="{{ route('kajur.pengajuan.perlu_verifikasi') }}">Pengajuan Perlu Verifikasi</a>
                    <a href="{{ route('kajur.pengajuan.sudah_verifikasi') }}">Pengajuan Terverifikasi</a>
                    <form action="{{ route('kajur.logout') }}" method="POST" class="logout-form" style="display: inline;">
                        @csrf
                        <button type="submit">Logout</button>
                    </form>
                </div>
            </div>
    
            @if (session('success'))
                <div class="alert alert-success">
                    {{ session('success') }}
                </div>
            @endif
    
            @if (session('error'))
                <div class="alert alert-danger">
                    {{ session('error') }}
                </div>
            @endif
    
            @if ($pengajuanTerverifikasi->isEmpty())
                <p>Tidak ada pengajuan sidang yang sudah diverifikasi saat ini.</p>
            @else
                <table class="table">
                    <thead>
                        <tr>
                            <th>ID Pengajuan</th>
                            <th>Nama Mahasiswa</th> <th>Jenis Pengajuan</th>
                            <th>Tanggal Diajukan</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach ($pengajuanTerverifikasi as $pengajuan)
                        <tr>
                            <td>{{ $pengajuan->id }}</td>
                            <td>{{ $pengajuan->mahasiswa->nama_lengkap }}</td> <td>{{ Str::replace('_', ' ', Str::title($pengajuan->jenis_pengajuan)) }}</td>
                            <td>{{ $pengajuan->created_at->format('d M Y H:i') }}</td>
                            <td>{{ Str::replace('_', ' ', Str::title($pengajuan->status)) }}</td>
                        </tr>
                        @endforeach
                    </tbody>
                </table>
            @endif
        </div>
    </body>
    </html>
    ----------------------------------------------
    // FILE: resources/views/kajur/pengajuan/verifikasi.blade.php
    {{-- resources/views/kajur/pengajuan/verifikasi.blade.php --}}
    
    @section('content')
    <div class="container">
        <h1>Verifikasi Pengajuan Sidang</h1>
        <p>Anda akan memverifikasi pengajuan sidang ini:</p>
    
        <div class="card mb-4">
            <div class="card-header">Detail Pengajuan</div>
            <div class="card-body">
                <p><strong>ID Pengajuan:</strong> {{ $pengajuan->id }}</p>
                <p><strong>Nama Mahasiswa:</strong> {{ $pengajuan->mahasiswa->nama }}</p>
                <p><strong>NIM:</strong> {{ $pengajuan->mahasiswa->nim }}</p>
                <p><strong>Judul Tugas Akhir:</strong> {{ $pengajuan->judul_tugas_akhir }}</p>
                <p><strong>Status Saat Ini:</strong> {{ Str::replace('_', ' ', Str::title($pengajuan->status)) }}</p>
                {{-- Tambahkan detail lain yang relevan --}}
            </div>
        </div>
    
        <form action="{{ route('kajur.verifikasi.store', $pengajuan->id) }}" method="POST">
            @csrf
            <p>Apakah Anda yakin ingin memverifikasi pengajuan sidang ini?</p>
            {{-- Anda bisa menambahkan input untuk catatan verifikasi jika diperlukan --}}
            {{--
            <div class="form-group mb-3">
                <label for="catatan">Catatan (Opsional):</label>
                <textarea name="catatan" id="catatan" class="form-control" rows="3"></textarea>
            </div>
            --}}
            <button type="submit" class="btn btn-success">Verifikasi Sekarang</button>
            <a href="{{ route('kajur.dashboard') }}" class="btn btn-secondary">Batal</a>
        </form>
    </div>
    ----------------------------------------------
    // FILE: resources/views/kajur/pengajuan/verifikasi_form.blade.php
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Verifikasi Pengajuan - Kajur</title>
        <style>
            body { font-family: sans-serif; margin: 20px; }
            .container { max-width: 800px; margin: 0 auto; padding: 20px; border: 1px solid #ccc; border-radius: 8px; }
            .header { background-color: #f2f2f2; padding: 15px; border-bottom: 1px solid #eee; margin-bottom: 20px; display: flex; justify-content: space-between; align-items: center; }
            .nav-links a { margin-right: 15px; text-decoration: none; color: #007bff; }
            .card { border: 1px solid #ddd; border-radius: 5px; padding: 15px; margin-bottom: 15px; background-color: #fff; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
            .card-header { font-weight: bold; margin-bottom: 10px; color: #333; }
            .card-body p { margin-bottom: 8px; }
            .btn { padding: 8px 12px; border: none; border-radius: 5px; cursor: pointer; text-decoration: none; display: inline-block; }
            .btn-success { background-color: #28a745; color: white; }
            .btn-secondary { background-color: #6c757d; color: white; }
            .alert { padding: 10px; margin-bottom: 15px; border-radius: 5px; }
            .alert-success { background-color: #d4edda; color: #155724; border-color: #c3e6cb; }
            .alert-danger { background-color: #f8d7da; color: #721c24; border-color: #f5c6cb; }
            .logout-form button { background-color: #dc3545; color: white; padding: 8px 12px; border: none; border-radius: 5px; cursor: pointer; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Verifikasi Pengajuan Sidang</h1>
                <div class="nav-links">
                    <a href="{{ route('kajur.dashboard') }}">Dashboard</a>
                    <a href="{{ route('kajur.pengajuan.perlu_verifikasi') }}">Pengajuan Perlu Verifikasi</a>
                    <a href="{{ route('kajur.pengajuan.sudah_verifikasi') }}">Pengajuan Terverifikasi</a>
                    {{-- Tambahkan link navigasi lainnya sesuai kebutuhan --}}
                    <form action="{{ route('kajur.logout') }}" method="POST" class="logout-form" style="display: inline;">
                        @csrf
                        <button type="submit">Logout</button>
                    </form>
                </div>
            </div>
    
            @if (session('success'))
                <div class="alert alert-success">
                    {{ session('success') }}
                </div>
            @endif
    
            @if (session('error'))
                <div class="alert alert-danger">
                    {{ session('error') }}
                </div>
            @endif
    
            <p>Anda akan memverifikasi pengajuan sidang ini:</p>
    
            <div class="card mb-4">
                <div class="card-header">Detail Pengajuan</div>
                <div class="card-body">
                    <p><strong>ID Pengajuan:</strong> {{ $pengajuan->id }}</p>
                    <p><strong>Nama Mahasiswa:</strong> {{ $pengajuan->mahasiswa->nama }}</p>
                    <p><strong>NIM:</strong> {{ $pengajuan->mahasiswa->nim }}</p>
                    <p><strong>Judul Tugas Akhir:</strong> {{ $pengajuan->judul_tugas_akhir }}</p>
                    <p><strong>Status Saat Ini:</strong> {{ Str::replace('_', ' ', Str::title($pengajuan->status)) }}</p>
                </div>
            </div>
    
            <form action="{{ route('kajur.verifikasi.store', $pengajuan->id) }}" method="POST">
                @csrf
                <p>Apakah Anda yakin ingin memverifikasi pengajuan sidang ini?</p>
                <button type="submit" class="btn btn-success">Verifikasi Sekarang</button>
                <a href="{{ route('kajur.pengajuan.perlu_verifikasi') }}" class="btn btn-secondary">Batal</a>
            </form>
        </div>
    </body>
    </html>
    ----------------------------------------------
    // FILE: resources/views/kajur/sidang/akan.blade.php
    <!DOCTYPE html>
    <html lang="en">
    
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Sidang Akan Dilaksanakan</title>
    </head>
    
    <body>
    
        <h2>Sidang Akan Dilaksanakan</h2>
    
        <table>
            <thead>
                <tr>
                    <th>Mahasiswa</th>
                    <th>Jenis Sidang</th>
                    <th>Tanggal</th>
                    <th>Waktu</th>
                    <th>Tempat</th>
                    <th>Aksi</th>
                </tr>
            </thead>
            <tbody>
                @foreach ($sidangs as $sidang)
                    <tr>
                        <td>{{ $sidang->pengajuan->mahasiswa->nama_lengkap }}</td>
                        <td>{{ $sidang->pengajuan->jenis_pengajuan }}</td>
                        <td>{{ $sidang->tanggal_sidang }}</td>
                        <td>{{ $sidang->waktu_sidang }}</td>
                        <td>{{ $sidang->tempat_sidang }}</td>
                        <td><a href="{{ route('kajur.sidang.show', $sidang->id) }}">Detail</a></td>
                    </tr>
                @endforeach
            </tbody>
        </table>
    
    </body>
    
    </html>
    ----------------------------------------------
    // FILE: resources/views/kajur/sidang/sedang.blade.php
    <!DOCTYPE html>
    <html lang="en">
    
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Sidang Sedang Berlangsung</title>
    </head>
    
    <body>
    
        <h2>Sidang Sedang Berlangsung</h2>
    
        <table>
            <thead>
                <tr>
                    <th>Mahasiswa</th>
                    <th>Jenis Sidang</th>
                    <th>Tanggal</th>
                    <th>Waktu</th>
                    <th>Tempat</th>
                    <th>Aksi</th>
                </tr>
            </thead>
            <tbody>
                @foreach ($sidangs as $sidang)
                    <tr>
                        <td>{{ $sidang->pengajuan->mahasiswa->nama_lengkap }}</td>
                        <td>{{ $sidang->pengajuan->jenis_pengajuan }}</td>
                        <td>{{ $sidang->tanggal_sidang }}</td>
                        <td>{{ $sidang->waktu_sidang }}</td>
                        <td>{{ $sidang->tempat_sidang }}</td>
                        <td><a href="{{ route('kajur.sidang.show', $sidang->id) }}">Detail</a></td>
                    </tr>
                @endforeach
            </tbody>
        </table>
    
    </body>
    
    </html>
    ----------------------------------------------
    // FILE: resources/views/kajur/sidang/show.blade.php
    <!DOCTYPE html>
    <html lang="en">
    
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Detail Sidang</title>
    </head>
    
    <body>
    
        <h2>Detail Sidang</h2>
    
        <p>Mahasiswa: {{ $sidang->pengajuan->mahasiswa->nama_lengkap }} ({{ $sidang->pengajuan->mahasiswa->nim }})</p>
        <p>Jenis Sidang: {{ $sidang->pengajuan->jenis_pengajuan }}</p>
        <p>Tanggal Sidang: {{ $sidang->tanggal_sidang }}</p>
        <p>Waktu Sidang: {{ $sidang->waktu_sidang }}</p>
        <p>Tempat Sidang: {{ $sidang->tempat_sidang }}</p>
        <p>Dosen Pembimbing: {{ $sidang->pembimbing->nama }}</p>
        <p>Dosen Penguji 1: {{ $sidang->penguji_1->nama }}</p>
        <p>Dosen Penguji 2: {{ $sidang->penguji_2->nama }}</p>
        @if ($sidang->tanggal_selesai)
            <p>Tanggal Selesai: {{ $sidang->tanggal_selesai }}</p>
            <p>Nilai Akhir: {{ $sidang->nilai_akhir }}</p>
            <p>Status Lulus: {{ $sidang->status_lulus }}</p>
        @endif
    
    </body>
    
    </html>
    ----------------------------------------------
    // FILE: resources/views/kajur/sidang/telah.blade.php
    <!DOCTYPE html>
    <html lang="en">
    
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Sidang Telah Dilaksanakan</title>
    </head>
    
    <body>
    
        <h2>Sidang Telah Dilaksanakan</h2>
    
        <table>
            <thead>
                <tr>
                    <th>Mahasiswa</th>
                    <th>Jenis Sidang</th>
                    <th>Tanggal</th>
                    <th>Waktu</th>
                    <th>Tempat</th>
                    <th>Nilai</th>
                    <th>Status</th>
                    <th>Aksi</th>
                </tr>
            </thead>
            <tbody>
                @foreach ($sidangs as $sidang)
                    <tr>
                        <td>{{ $sidang->pengajuan->mahasiswa->nama_lengkap }}</td>
                        <td>{{ $sidang->pengajuan->jenis_pengajuan }}</td>
                        <td>{{ $sidang->tanggal_sidang }}</td>
                        <td>{{ $sidang->waktu_sidang }}</td>
                        <td>{{ $sidang->tempat_sidang }}</td>
                        <td>{{ $sidang->nilai_akhir }}</td>
                        <td>{{ $sidang->status_lulus }}</td>
                        <td><a href="{{ route('kajur.sidang.show', $sidang->id) }}">Detail</a></td>
                    </tr>
                @endforeach
            </tbody>
        </table>
    
    </body>
    
    </html>
    ----------------------------------------------
    // FILE: resources/views/kaprodi/dashboard.blade.php
    <!DOCTYPE html>
    <html lang="en">
    
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Dashboard Kaprodi</title>
    </head>
    
    <body>
    
        <h2>Dashboard Kaprodi</h2>
    
        <p>Jumlah Dosen: {{ $jumlahDosen }}</p>
        <p>Jumlah Pengajuan Baru: {{ $jumlahPengajuan }}</p>
    
        <h3>Pengajuan Terbaru</h3>
        @if ($pengajuanBaru->count() > 0)
            <ul>
                @foreach ($pengajuanBaru as $pengajuan)
                    <li>{{ $pengajuan->mahasiswa->nama_lengkap }} - {{ $pengajuan->jenis_pengajuan }}</li>
                @endforeach
            </ul>
        @else
            <p>Tidak ada pengajuan baru.</p>
        @endif
    
        <li><a href="{{ route('kaprodi.pengajuan.index') }}">Ke Menu Menajemen Pengajuan Sidang</a></li>
    
        <br>
    
        <form action="{{ route('kaprodi.logout') }}" method="POST">
            @csrf <button type="submit">Logout</button>
        </form>
    
    </body>
    
    </html>
    ----------------------------------------------
    // FILE: resources/views/kaprodi/auth/login.blade.php
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Kaprodi Login</title>
    </head>
    
    <body>
    
    <h2>Kaprodi Login</h2>
    
    @if ($errors->any())
        <div>
            <ul>
                @foreach ($errors->all() as $error)
                    <li>{{ $error }}</li>
                @endforeach
            </ul>
        </div>
    @endif
    
    <form method="POST" action="{{ route('kaprodi.login') }}">
        @csrf
    
        <div>
            <label for="email">Email</label>
            <input type="email" name="email" id="email" required>
    
           </div>
    
        <div>
            <label for="password">Password</label>
            <input type="password" name="password" id="password" required>
        </div>
    
        <button type="submit">Login</button>
    </form>
    
    </body>
    </html>
    ----------------------------------------------
    // FILE: resources/views/kaprodi/dosen/index.blade.php
    <!DOCTYPE html>
    <html lang="en">
    
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Daftar Dosen</title>
    </head>
    
    <body>
    
        <h2>Daftar Dosen</h2>
    
        <table>
            <thead>
                <tr>
                    <th>Nama Dosen</th>
                    <th>NIP</th>
                    <th>Jurusan</th>
                    <th>Program Studi</th>
                    </tr>
            </thead>
            <tbody>
                @foreach ($dosens as $dosen)
                    <tr>
                        <td>{{ $dosen->nama }}</td>
                        <td>{{ $dosen->nip }}</td>
                        <td>{{ $dosen->jurusan }}</td>
                        <td>{{ $dosen->prodi }}</td>
                        </tr>
                @endforeach
            </tbody>
        </table>
    
    </body>
    
    </html>
    ----------------------------------------------
    // FILE: resources/views/kaprodi/pengajuan/aksi.blade.php
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Detail Pengajuan Kaprodi</title>
        <style>
            /* Umum */
            body {
                font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
                margin: 0;
                padding: 20px;
                background-color: #eef2f5; /* Warna latar belakang lebih lembut */
                color: #333;
            }
    
            .container {
                max-width: 850px; /* Lebar container lebih besar */
                margin: 30px auto;
                padding: 30px; /* Padding lebih besar */
                border: 1px solid #dcdcdc; /* Border lebih lembut */
                border-radius: 12px; /* Sudut lebih membulat */
                box-shadow: 0 6px 12px rgba(0,0,0,0.08); /* Shadow lebih menonjol */
                background-color: #fff;
            }
    
            h2 {
                text-align: center;
                margin-bottom: 30px;
                color: #2c3e50; /* Warna judul lebih gelap */
                font-size: 2.2em; /* Ukuran judul lebih besar */
                font-weight: 600;
            }
    
            h3 {
                margin-top: 35px;
                margin-bottom: 20px;
                color: #34495e; /* Warna sub-judul */
                border-bottom: 2px solid #007bff; /* Garis bawah biru */
                padding-bottom: 8px;
                font-size: 1.5em;
            }
    
            h4 {
                margin-top: 25px;
                margin-bottom: 15px;
                color: #444;
                font-size: 1.2em;
            }
    
            p {
                margin-bottom: 8px;
                line-height: 1.6;
                font-size: 0.98em;
            }
            p strong {
                color: #2c3e50; /* Warna bold lebih kontras */
                display: inline-block; /* Untuk alignment yang lebih baik */
                min-width: 150px; /* Agar label lebih rapi */
            }
    
            .alert {
                padding: 15px;
                margin-bottom: 25px;
                border-radius: 8px;
                font-size: 1em;
                display: flex; /* Untuk ikon/alignment */
                align-items: center;
            }
            .alert-success { background-color: #d4edda; color: #155724; border: 1px solid #c3e6cb; }
            .alert-danger { background-color: #f8d7da; color: #721c24; border: 1px solid #f5c6cb; }
            .alert-info { background-color: #d1ecf1; color: #0c5460; border: 1px solid #bee5eb; }
    
            /* Buttons */
            .btn {
                padding: 10px 20px; /* Padding lebih besar */
                border: none;
                border-radius: 6px; /* Sudut lebih membulat */
                cursor: pointer;
                text-decoration: none;
                color: white;
                display: inline-block;
                font-size: 0.95em; /* Ukuran font sedikit lebih besar */
                margin-top: 10px;
                margin-right: 8px; /* Jarak antar tombol */
                transition: background-color 0.3s ease, transform 0.2s ease; /* Transisi halus dan efek hover */
                font-weight: 500;
            }
            .btn:hover {
                transform: translateY(-2px); /* Efek angkat saat hover */
            }
            .btn-info { background-color: #17a2b8; } .btn-info:hover { background-color: #138496; }
            .btn-success { background-color: #28a745; } .btn-success:hover { background-color: #218838; }
            .btn-warning { background-color: #ffc107; color: #333; } .btn-warning:hover { background-color: #e0a800; }
            .btn-danger { background-color: #dc3545; } .btn-danger:hover { background-color: #c82333; }
            .btn-primary { background-color: #007bff; } .btn-primary:hover { background-color: #0056b3; }
    
            .back-link {
                display: inline-block;
                margin-bottom: 25px;
                text-decoration: none;
                color: #007bff;
                font-weight: bold;
                font-size: 1em;
                transition: color 0.3s ease;
            }
            .back-link:hover {
                color: #0056b3;
                text-decoration: underline;
            }
    
            hr {
                margin: 35px 0; /* Jarak HR lebih besar */
                border: 0;
                border-top: 1px solid #e0e0e0; /* Warna HR lebih lembut */
            }
    
            /* Form Styling */
            .form-group {
                margin-bottom: 20px; /* Jarak antar form-group lebih besar */
            }
            .form-group label {
                display: block;
                margin-bottom: 8px;
                font-weight: 600; /* Font label lebih tebal */
                color: #34495e;
                font-size: 0.95em;
            }
            .form-control {
                width: calc(100% - 22px); /* Penyesuaian width untuk padding dan border */
                padding: 10px;
                border: 1px solid #ccc;
                border-radius: 6px;
                font-size: 1em;
                box-sizing: border-box; /* Pastikan padding dan border termasuk dalam lebar */
                transition: border-color 0.3s ease;
            }
            .form-control:focus {
                border-color: #007bff; /* Border biru saat focus */
                outline: none; /* Hilangkan outline default */
            }
            select.form-control {
                appearance: none; /* Hilangkan default arrow di select */
                background-image: url('data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22292.4%22%20height%3D%22292.4%22%3E%3Cpath%20fill%3D%22%23007bff%22%20d%3D%22M287%2069.4a17.6%2017.6%200%200%200-13.2-6.5H18.6c-5%200-9.3%201.8-13.2%206.5-3.9%203.9-6%208.7-6%2014.2%200%205.5%202.1%2010.3%206%2014.2l128%20127.9c3.9%203.9%208.7%206%2014.2%206s10.3-2.1%2014.2-6l128-127.9c3.9-3.9%206-8.7%206-14.2%200-5.5-2.1-10.3-6-14.2z%22%2F%3E%3C%2Fsvg%3E'); /* Custom arrow */
                background-repeat: no-repeat;
                background-position: right 10px center;
                background-size: 12px;
                padding-right: 30px; /* Ruang untuk arrow */
            }
            .error-message {
                color: #dc3545;
                font-size: 0.9em;
                margin-top: 5px;
                display: block; /* Pastikan pesan error di baris baru */
            }
            .buttons {
                margin-top: 20px;
            }
    
            /* Dokumen Pengajuan List */
            .document-list ul {
                list-style-type: disc; /* Ubah ke bullet point */
                padding-left: 20px;
            }
            .document-list ul li {
                margin-bottom: 5px;
            }
            .document-list ul li a {
                color: #007bff;
                text-decoration: none;
                transition: color 0.3s ease;
            }
            .document-list ul li a:hover {
                color: #0056b3;
                text-decoration: underline;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <h2>Detail Pengajuan Sidang</h2>
            <a href="{{ route('kaprodi.pengajuan.index') }}" class="back-link">&larr; Kembali ke Daftar Pengajuan</a>
    
            @if (session('success'))
                <div class="alert alert-success">
                    {{ session('success') }}
                </div>
            @endif
            @if (session('error'))
                <div class="alert alert-danger">
                    {{ session('error') }}
                </div>
            @endif
    
            <p><strong>Mahasiswa:</strong> {{ $pengajuan->mahasiswa->nama_lengkap }} ({{ $pengajuan->mahasiswa->nim }})</p>
            <p><strong>Jenis Pengajuan:</strong> {{ $pengajuan->jenis_pengajuan }}</p>
            <p><strong>Status:</strong> {{ $pengajuan->status }}</p>
            <p><strong>Tanggal Diajukan:</strong> {{ \Carbon\Carbon::parse($pengajuan->created_at)->format('d M Y H:i') }}</p>
    
            <hr>
    
            <h3>Informasi Sidang:</h3>
            <p>
                <strong>Pembimbing 1:</strong> 
                {{ $pengajuan->sidang->dosenPembimbing->nama ?? 'Belum Terpilih' }} 
                @if ($pengajuan->sidang->dosenPembimbing)
                    (<span class="{{ $pengajuan->sidang->persetujuan_dosen_pembimbing == 'setuju' ? 'text-success' : ($pengajuan->sidang->persetujuan_dosen_pembimbing == 'tolak' ? 'text-danger' : 'text-warning') }}">
                        {{ ucfirst(str_replace('_', ' ', $pengajuan->sidang->persetujuan_dosen_pembimbing)) }}
                    </span>)
                @endif
            </p>
            <p>
                <strong>Pembimbing 2:</strong> 
                {{ $pengajuan->sidang->dosenPenguji1->nama ?? 'Belum Terpilih' }}
                @if ($pengajuan->sidang->dosenPenguji1)
                    (<span class="{{ $pengajuan->sidang->persetujuan_dosen_penguji1 == 'setuju' ? 'text-success' : ($pengajuan->sidang->persetujuan_dosen_penguji1 == 'tolak' ? 'text-danger' : 'text-warning') }}">
                        {{ ucfirst(str_replace('_', ' ', $pengajuan->sidang->persetujuan_dosen_penguji1)) }}
                    </span>)
                @endif
            </p>
    
            <p><strong>Tanggal & Waktu Sidang:</strong> {{ $pengajuan->sidang->tanggal_waktu_sidang ? \Carbon\Carbon::parse($pengajuan->sidang->tanggal_waktu_sidang)->format('d M Y H:i') : 'Belum Dijadwalkan' }}</p>
            <p><strong>Ruangan Sidang:</strong> {{ $pengajuan->sidang->ruangan_sidang ?? 'Belum Ditentukan' }}</p>
            <p>
                <strong>Ketua Sidang:</strong> 
                {{ $pengajuan->sidang->ketuaSidang->nama ?? 'Belum Terpilih' }}
                @if ($pengajuan->sidang->ketuaSidang)
                    (<span class="{{ $pengajuan->sidang->persetujuan_ketua_sidang == 'setuju' ? 'text-success' : ($pengajuan->sidang->persetujuan_ketua_sidang == 'tolak' ? 'text-danger' : 'text-warning') }}">
                        {{ ucfirst(str_replace('_', ' ', $pengajuan->sidang->persetujuan_ketua_sidang)) }}
                    </span>)
                @endif
            </p>
            <p>
                <strong>Sekretaris Sidang:</strong> 
                {{ $pengajuan->sidang->sekretarisSidang->nama ?? 'Belum Terpilih' }}
                @if ($pengajuan->sidang->sekretarisSidang)
                    (<span class="{{ $pengajuan->sidang->persetujuan_sekretaris_sidang == 'setuju' ? 'text-success' : ($pengajuan->sidang->persetujuan_sekretaris_sidang == 'tolak' ? 'text-danger' : 'text-warning') }}">
                        {{ ucfirst(str_replace('_', ' ', $pengajuan->sidang->persetujuan_sekretaris_sidang)) }}
                    </span>)
                @endif
            </p>
            <p>
                <strong>Anggota Sidang 1:</strong> 
                {{ $pengajuan->sidang->anggota1Sidang->nama ?? 'Belum Terpilih' }}
                @if ($pengajuan->sidang->anggota1Sidang)
                    (<span class="{{ $pengajuan->sidang->persetujuan_anggota1_sidang == 'setuju' ? 'text-success' : ($pengajuan->sidang->persetujuan_anggota1_sidang == 'tolak' ? 'text-danger' : 'text-warning') }}">
                        {{ ucfirst(str_replace('_', ' ', $pengajuan->sidang->persetujuan_anggota1_sidang)) }}
                    </span>)
                @endif
            </p>
            <p>
                <strong>Anggota Sidang 2:</strong> 
                {{ $pengajuan->sidang->anggota2Sidang->nama ?? 'Belum Terpilih' }}
                @if ($pengajuan->sidang->anggota2Sidang)
                    (<span class="{{ $pengajuan->sidang->persetujuan_anggota2_sidang == 'setuju' ? 'text-success' : ($pengajuan->sidang->persetujuan_anggota2_sidang == 'tolak' ? 'text-danger' : 'text-warning') }}">
                        {{ ucfirst(str_replace('_', ' ', $pengajuan->sidang->persetujuan_anggota2_sidang)) }}
                    </span>)
                @endif
            </p>
    
            <hr>
            
            {{-- Tombol untuk menuju ke bagian "Aksi Kaprodi" --}}
            <a href="#aksi-kaprodi" class="btn btn-info" style="margin-bottom: 20px;">Lanjutkan ke Aksi Kaprodi</a>
    
            <h3 id="aksi-kaprodi">Aksi Kaprodi:</h3>
    
            @if (in_array($pengajuan->status, ['diverifikasi_admin', 'menunggu_persetujuan_dosen']))
                <h4>Form Penjadwalan Sidang</h4>
                <form action="{{ route('kaprodi.pengajuan.jadwalkan.storeUpdate', $pengajuan->id) }}" method="POST">
                    @csrf
                    @method('PUT')
    
                    <div class="form-group">
                        <label for="sekretaris_sidang_id">Sekretaris Sidang:</label>
                        <select name="sekretaris_sidang_id" id="sekretaris_sidang_id" class="form-control" required>
                            <option value="">Pilih Sekretaris</option>
                            @foreach ($dosens as $dosen)
                                <option value="{{ $dosen->id }}" {{ old('sekretaris_sidang_id', $pengajuan->sidang->sekretaris_sidang_dosen_id ?? '') == $dosen->id ? 'selected' : '' }}>
                                    {{ $dosen->nama }}
                                </option>
                            @endforeach
                        </select>
                        @error('sekretaris_sidang_id') <span class="error-message">{{ $message }}</span> @enderror
                    </div>
    
                    <div class="form-group">
                        <label for="anggota_1_sidang_id">Anggota 1 Sidang:</label>
                        <select name="anggota_1_sidang_id" id="anggota_1_sidang_id" class="form-control" required>
                            <option value="">Pilih Anggota 1</option>
                            @foreach ($dosens as $dosen)
                                <option value="{{ $dosen->id }}" {{ old('anggota_1_sidang_id', $pengajuan->sidang->anggota1_sidang_dosen_id ?? '') == $dosen->id ? 'selected' : '' }}>
                                    {{ $dosen->nama }}
                                </option>
                            @endforeach
                        </select>
                        @error('anggota_1_sidang_id') <span class="error-message">{{ $message }}</span> @enderror
                    </div>
    
                    <div class="form-group">
                        <label for="anggota_2_sidang_id">Anggota 2 Sidang:</label>
                        <select name="anggota_2_sidang_id" id="anggota_2_sidang_id" class="form-control">
                            <option value="">Pilih Anggota 2 (Opsional)</option>
                            @foreach ($dosens as $dosen)
                                <option value="{{ $dosen->id }}" {{ old('anggota_2_sidang_id', $pengajuan->sidang->anggota2_sidang_dosen_id ?? '') == $dosen->id ? 'selected' : '' }}>
                                    {{ $dosen->nama }}
                                </option>
                            @endforeach
                        </select>
                        @error('anggota_2_sidang_id') <span class="error-message">{{ $message }}</span> @enderror
                    </div>
    
                    <div class="form-group">
                        <label for="tanggal_waktu_sidang">Tanggal dan Waktu Sidang:</label>
                        <input type="datetime-local" name="tanggal_waktu_sidang" id="tanggal_waktu_sidang" class="form-control"
                                     value="{{ old('tanggal_waktu_sidang', $pengajuan->sidang->tanggal_waktu_sidang ? \Carbon\Carbon::parse($pengajuan->sidang->tanggal_waktu_sidang)->format('Y-m-d\TH:i') : '') }}" required>
                        @error('tanggal_waktu_sidang') <span class="error-message">{{ $message }}</span> @enderror
                    </div>
    
                    <div class="form-group">
                        <label for="ruangan_sidang">Ruangan Sidang:</label>
                        <input type="text" name="ruangan_sidang" id="ruangan_sidang" class="form-control" placeholder="Contoh: Ruang Sidang A"
                                     value="{{ old('ruangan_sidang', $pengajuan->sidang->ruangan_sidang ?? '') }}" required>
                        @error('ruangan_sidang') <span class="error-message">{{ $message }}</span> @enderror
                    </div>
    
                    <div class="buttons">
                        <button type="submit" class="btn btn-primary">
                            @php
                                $isScheduled = false;
                                // Memeriksa apakah sidang sudah ada DAN memiliki data jadwal esensial
                                if ($pengajuan->sidang && $pengajuan->sidang->exists &&
                                    $pengajuan->sidang->sekretaris_sidang_dosen_id &&
                                    $pengajuan->sidang->anggota1_sidang_dosen_id &&
                                    $pengajuan->sidang->tanggal_waktu_sidang &&
                                    $pengajuan->sidang->ruangan_sidang) {
                                    $isScheduled = true;
                                }
                            @endphp
     
                            @if ($isScheduled)
                                Update Jadwal
                            @else
                                Jadwalkan Sidang
                            @endif
                        </button>
                    </div>
                </form>
    
                {{-- Tombol Finalisasi Jadwal --}}
                @if ($pengajuan->sidang && $pengajuan->status === 'menunggu_persetujuan_dosen')
                    <form action="{{ route('kaprodi.pengajuan.finalkan.jadwal', $pengajuan->id) }}" method="POST" style="display:inline-block; margin-top: 15px;">
                        @csrf
                        <button type="submit" class="btn btn-primary">Finalisasi Pengajuan Sidang</button>
                    </form>
                    {{-- Pesan error validasi akan muncul di bawah tombol jika gagal --}}
                    @if (session('finalisasi_error'))
                        <div class="alert alert-danger" style="margin-top: 10px;">
                            {{ session('finalisasi_error') }}
                        </div>
                    @endif
                @endif
    
        </div>
    </body>
    </html>
    ----------------------------------------------
    // FILE: resources/views/kaprodi/pengajuan/index.blade.php
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Menajemen Pengajuan Sidang </title>
        <style>
            body { font-family: sans-serif; margin: 20px; background-color: #f4f7f6; }
            .container {
                max-width: 1400px; /* Lebarkan container untuk menampung lebih banyak kolom */
                width: 95%; /* Pastikan responsifitas untuk layar lebih kecil */
                margin: 30px auto;
                padding: 25px;
                border: 1px solid #e0e0e0;
                border-radius: 10px;
                box-shadow: 0 4px 8px rgba(0,0,0,0.05);
                background-color: #fff;
            }
            h2, h3 { text-align: center; margin-bottom: 25px; color: #333; }
            table { width: 100%; border-collapse: collapse; margin-top: 20px; }
            th, td { border: 1px solid #e9e9e9; padding: 12px 15px; text-align: left; font-size: 0.95em; }
            th { background-color: #f8f8f8; color: #555; text-transform: uppercase; }
            tr:nth-child(even) { background-color: #fcfcfc; }
            tr:hover { background-color: #f1f1f1; }
            .btn { padding: 8px 15px; border: none; border-radius: 5px; cursor: pointer; text-decoration: none; color: white; display: inline-block; font-size: 0.9em; margin: 2px 0; transition: background-color 0.3s ease; }
            .btn-info { background-color: #17a2b8; }
            .btn-info:hover { background-color: #138496; }
            .btn-success { background-color: #28a745; }
            .btn-success:hover { background-color: #218838; }
            .btn-warning { background-color: #ffc107; color: #333; }
            .btn-warning:hover { background-color: #e0a800; }
            .btn-danger { background-color: #dc3545; }
            .btn-danger:hover { background-color: #c82333; }
            .btn-primary { background-color: #007bff; }
            .btn-primary:hover { background-color: #0069d9; }
            .alert { padding: 12px; margin-bottom: 20px; border-radius: 5px; font-size: 0.95em; }
            .alert-success { background-color: #d4edda; color: #155724; border: 1px solid #c3e6cb; }
            .alert-danger { background-color: #f8d7da; color: #721c24; border: 1px solid #f5c6cb; }
            .no-data { text-align: center; color: #777; padding: 30px; font-size: 1.1em; }
            .action-buttons form { display: inline-block; margin-right: 5px; } /* Untuk merapikan tombol */
        </style>
    </head>
    <body>
        <div class="container">
            <h2>Menajemen Pengajuan Sidang</h2>
            <p>Selamat datang, Kaprodi!</p>
    
            {{-- Notifikasi Sukses/Error --}}
            @if (session('success'))
                <div class="alert alert-success">
                    {{ session('success') }}
                </div>
            @endif
            @if (session('error'))
                <div class="alert alert-danger">
                    {{ session('error') }}
                </div>
            @endif
    
            <h3>Pengajuan Menunggu Penjadwalan/Pembaruan</h3>
            @if ($pengajuansKaprodi->isEmpty())
                <p class="no-data">Tidak ada pengajuan yang menunggu aksi Kaprodi saat ini.</p>
            @else
                <table>
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Mahasiswa</th>
                            <th>Jenis</th>
                            <th>Judul</th>
                            <th>Status</th>
                            <th>Pembimbing 1 </th>
                            <th>Pembimbing 2 </th>
    
                            <th>Ketua Sidang</th>
                            <th>Sekretaris</th>
                            <th>Anggota 1</th>
                            <th>Anggota 2</th>
                            <th>Tgl/Waktu Sidang</th>
                            <th>Ruangan</th>
                            <th>Aksi</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach ($pengajuansKaprodi as $pengajuan)
                            <tr>
                                <td>{{ $pengajuan->id }}</td>
                                <td>{{ $pengajuan->mahasiswa->nama_lengkap }} ({{ $pengajuan->mahasiswa->nim }})</td>
                                <td>{{ strtoupper($pengajuan->jenis_pengajuan) }}</td>
                                <td>{{ $pengajuan->judul_pengajuan ?? 'Belum Ada Judul' }}</td> {{-- Updated --}}
                                <td>{{ str_replace('_', ' ', $pengajuan->status) }}</td>
                                <td>{{ $pengajuan->sidang->dosenPembimbing->nama ?? 'Belum Terpilih' }}</td> {{-- Updated --}}
                                <td>{{ $pengajuan->sidang->dosenPenguji1->nama ?? 'Belum Terpilih' }}</td> {{-- Updated --}}
    
                                <td>{{ $pengajuan->sidang->ketuaSidang->nama ?? 'Belum Terpilih' }}</td> {{-- Updated --}}
                                <td>{{ $pengajuan->sidang->sekretarisSidang->nama ?? 'Belum Terpilih' }}</td> {{-- Updated --}}
                                <td>{{ $pengajuan->sidang->anggota1Sidang->nama ?? 'Belum Terpilih' }}</td> {{-- Updated --}}
                                <td>{{ $pengajuan->sidang->anggota2Sidang->nama ?? 'Belum Terpilih' }}</td> {{-- Updated --}}
                                <td>{{ $pengajuan->sidang->tanggal_waktu_sidang ? \Carbon\Carbon::parse($pengajuan->sidang->tanggal_waktu_sidang)->format('d M Y H:i') : 'Belum Dijadwalkan' }}</td>
                                <td>{{ $pengajuan->sidang->ruangan_sidang ?? 'Belum Ditentukan' }}</td>
                                <td class="action-buttons">
                                    <a href="{{ route('kaprodi.pengajuan.show', $pengajuan->id) }}" class="btn btn-info">Detail</a>
                                </td>
                            </tr>
                        @endforeach
                    </tbody>
                </table>
            @endif
    
            <hr style="margin: 40px 0;">
    
            <h3>Pengajuan Yang Telah Difinalkan/Ditolak Kaprodi</h3>
            @if ($pengajuansSelesaiKaprodi->isEmpty())
                <p class="no-data">Tidak ada pengajuan yang sudah selesai Anda tangani.</p>
            @else
                <table>
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Mahasiswa</th>
                            <th>Jenis</th>
                            <th>Judul</th>
                            <th>Status</th>
                            <th>Pembimbing 1</th>
                            <th>Pembimbing 2 </th>
    
                            <th>Ketua Sidang</th>
                            <th>Sekretaris</th>
                            <th>Anggota 1</th>
                            <th>Anggota 2</th>
                            <th>Tgl/Waktu Sidang</th>
                            <th>Ruangan</th>
                            <th>Aksi</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach ($pengajuansSelesaiKaprodi as $pengajuan)
                            <tr>
                                <td>{{ $pengajuan->id }}</td>
                                <td>{{ $pengajuan->mahasiswa->nama_lengkap }} ({{ $pengajuan->mahasiswa->nim }})</td>
                                <td>{{ strtoupper($pengajuan->jenis_pengajuan) }}</td>
                                <td>{{ $pengajuan->judul_pengajuan ?? 'Belum Ada Judul' }}</td> {{-- Updated --}}
                                <td>{{ str_replace('_', ' ', $pengajuan->status) }}</td>
                                <td>{{ $pengajuan->sidang->dosenPembimbing->nama ?? 'Belum Terpilih' }}</td> {{-- Updated --}}
                                <td>{{ $pengajuan->sidang->dosenPenguji1->nama ?? 'Belum Terpilih' }}</td> {{-- Updated --}}
    
                                <td>{{ $pengajuan->sidang->ketuaSidang->nama ?? 'Belum Terpilih' }}</td> {{-- Updated --}}
                                <td>{{ $pengajuan->sidang->sekretarisSidang->nama ?? 'Belum Terpilih' }}</td> {{-- Updated --}}
                                <td>{{ $pengajuan->sidang->anggota1Sidang->nama ?? 'Belum Terpilih' }}</td> {{-- Updated --}}
                                <td>{{ $pengajuan->sidang->anggota2Sidang->nama ?? 'Belum Terpilih' }}</td> {{-- Updated --}}
                                <td>{{ $pengajuan->sidang->tanggal_waktu_sidang ? \Carbon\Carbon::parse($pengajuan->sidang->tanggal_waktu_sidang)->format('d F Y H:i') : 'Belum Dijadwalkan' }}</td> {{-- Updated --}}
                                <td>{{ $pengajuan->sidang->ruangan_sidang ?? 'Belum Ditentukan' }}</td> {{-- Updated --}}
                                <td>
                                    <a href="{{ route('kaprodi.pengajuan.show', $pengajuan->id) }}" class="btn btn-info">Detail</a>
                                </td>
                            </tr>
                        @endforeach
                    </tbody>
                </table>
            @endif
    
            <hr style="margin: 40px 0;">
    
            <a href="{{ route('kaprodi.dashboard') }}" class="btn btn-info">Kembali ke Dashboard</a>
        </div>
    </body>
    </html>
    ----------------------------------------------
    // FILE: resources/views/kaprodi/pengajuan/jadwal_sidang_form.blade.php
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>{{ isset($sidang->id) ? 'Edit' : 'Jadwalkan' }} Sidang</title>
        <style>
            body {
                font-family: Arial, sans-serif;
                background-color: #f4f4f4;
                margin: 0;
                padding: 20px;
            }
            .container {
                max-width: 900px;
                margin: 20px auto;
                background-color: #fff;
                padding: 30px;
                border-radius: 8px;
                box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            }
            h2 {
                color: #333;
                margin-bottom: 20px;
                text-align: center;
            }
            .info-group {
                margin-bottom: 15px;
                padding: 10px;
                background-color: #f9f9f9;
                border-left: 5px solid #007bff;
                border-radius: 4px;
            }
            .info-group label {
                font-weight: bold;
                display: block;
                margin-bottom: 5px;
                color: #555;
            }
            .info-group p {
                margin: 0;
            }
            .form-group {
                margin-bottom: 20px;
            }
            .form-group label {
                display: block;
                margin-bottom: 8px;
                font-weight: bold;
            }
            .form-group select,
            .form-group input[type="datetime-local"],
            .form-group input[type="text"] {
                width: calc(100% - 22px);
                padding: 10px;
                border: 1px solid #ddd;
                border-radius: 4px;
            }
            .buttons {
                text-align: right;
                margin-top: 30px;
            }
            .buttons button {
                padding: 10px 20px;
                border: none;
                border-radius: 5px;
                cursor: pointer;
                font-size: 16px;
                background-color: #28a745;
                color: white;
                margin-left: 10px;
            }
            .alert {
                padding: 15px;
                margin-bottom: 20px;
                border-radius: 4px;
                text-align: center;
            }
            .alert-success {
                background-color: #d4edda;
                color: #155724;
                border: 1px solid #c3e6cb;
            }
            .alert-danger {
                background-color: #f8d7da;
                color: #721c24;
                border: 1px solid #f5c6cb;
            }
            .error-message {
                color: #dc3545;
                font-size: 0.8em;
                margin-top: 5px;
                display: block;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <h2>{{ isset($sidang->id) ? 'Edit' : 'Jadwalkan' }} Sidang untuk Pengajuan {{ strtoupper($pengajuan->jenis_pengajuan) }}</h2>
    
            @if (session('success'))
                <div class="alert alert-success">{{ session('success') }}</div>
            @endif
            @if (session('error'))
                <div class="alert alert-danger">{{ session('error') }}</div>
            @endif
            @if ($errors->any())
                <div class="alert alert-danger">
                    <ul>
                        @foreach ($errors->all() as $error)
                            <li>{{ $error }}</li>
                        @endforeach
                    </ul>
                </div>
            @endif
    
            <div class="info-group">
                <label>Mahasiswa:</label>
                <p>{{ $pengajuan->mahasiswa->nama_lengkap }} (NIM: {{ $pengajuan->mahasiswa->nim }})</p>
            </div>
            <div class="info-group">
                <label>Dosen Pembimbing 1:</label>
                <p>{{ $pengajuan->sidang->dosenPembimbing->nama ?? '-' }}</p>
            </div>
            <div class="info-group">
                <label>Dosen Pembimbing 2:</label>
                <p>{{ $pengajuan->sidang->dosenPenguji1->nama ?? '-' }}</p>
            </div>
    
            <hr>
    
            <form action="{{ route('kaprodi.pengajuan.jadwalkan.storeUpdate', $pengajuan->id) }}" method="POST">
                @csrf
                @method('PUT') {{-- Karena ini bisa update juga --}}
    
                <div class="form-group">
                    <label for="ketua_sidang_dosen_id">Ketua Sidang:</label>
                    <select name="ketua_sidang_dosen_id" id="ketua_sidang_dosen_id" required>
                        <option value="">-- Pilih Dosen --</option>
                        @foreach ($dosens as $dosen)
                            <option value="{{ $dosen->id }}" 
                                {{ (isset($sidang) && $sidang->ketua_sidang_dosen_id == $dosen->id) ? 'selected' : (old('ketua_sidang_dosen_id') == $dosen->id ? 'selected' : '') }}>
                                {{ $dosen->nama }}
                            </option>
                        @endforeach
                    </select>
                    @error('ketua_sidang_dosen_id')
                        <span class="error-message">{{ $message }}</span>
                    @enderror
                </div>
    
                <div class="form-group">
                    <label for="sekretaris_sidang_dosen_id">Sekretaris Sidang:</label>
                    <select name="sekretaris_sidang_dosen_id" id="sekretaris_sidang_dosen_id" required>
                        <option value="">-- Pilih Dosen --</option>
                        @foreach ($dosens as $dosen)
                            <option value="{{ $dosen->id }}" 
                                {{ (isset($sidang) && $sidang->sekretaris_sidang_dosen_id == $dosen->id) ? 'selected' : (old('sekretaris_sidang_dosen_id') == $dosen->id ? 'selected' : '') }}>
                                {{ $dosen->nama }}
                            </option>
                        @endforeach
                    </select>
                    @error('sekretaris_sidang_dosen_id')
                        <span class="error-message">{{ $message }}</span>
                    @enderror
                </div>
    
                <div class="form-group">
                    <label for="anggota1_sidang_dosen_id">Anggota Sidang 1 (Penguji):</label>
                    <select name="anggota1_sidang_dosen_id" id="anggota1_sidang_dosen_id" required>
                        <option value="">-- Pilih Dosen --</option>
                        @foreach ($dosens as $dosen)
                            <option value="{{ $dosen->id }}" 
                                {{ (isset($sidang) && $sidang->anggota1_sidang_dosen_id == $dosen->id) ? 'selected' : (old('anggota1_sidang_dosen_id') == $dosen->id ? 'selected' : '') }}>
                                {{ $dosen->nama }}
                            </option>
                        @endforeach
                    </select>
                    @error('anggota1_sidang_dosen_id')
                        <span class="error-message">{{ $message }}</span>
                    @enderror
                </div>
    
                <div class="form-group">
                    <label for="anggota2_sidang_dosen_id">Anggota Sidang 2 (Penguji): (Opsional)</label>
                    <select name="anggota2_sidang_dosen_id" id="anggota2_sidang_dosen_id">
                        <option value="">-- Tidak Ada --</option>
                        @foreach ($dosens as $dosen)
                            <option value="{{ $dosen->id }}" 
                                {{ (isset($sidang) && $sidang->anggota2_sidang_dosen_id == $dosen->id) ? 'selected' : (old('anggota2_sidang_dosen_id') == $dosen->id ? 'selected' : '') }}>
                                {{ $dosen->nama }}
                            </option>
                        @endforeach
                    </select>
                    @error('anggota2_sidang_dosen_id')
                        <span class="error-message">{{ $message }}</span>
                    @enderror
                </div>
    
                <div class="form-group">
                    <label for="tanggal_waktu_sidang">Tanggal & Waktu Sidang:</label>
                    <input type="datetime-local" name="tanggal_waktu_sidang" id="tanggal_waktu_sidang" 
                           value="{{ old('tanggal_waktu_sidang', isset($sidang) && $sidang->tanggal_waktu_sidang ? \Carbon\Carbon::parse($sidang->tanggal_waktu_sidang)->format('Y-m-d\TH:i') : '') }}" required>
                    @error('tanggal_waktu_sidang')
                        <span class="error-message">{{ $message }}</span>
                    @enderror
                </div>
    
                <div class="form-group">
                    <label for="ruangan_sidang">Ruangan Sidang:</label>
                    <input type="text" name="ruangan_sidang" id="ruangan_sidang" 
                           value="{{ old('ruangan_sidang', $sidang->ruangan_sidang ?? '') }}" placeholder="Contoh: Ruang Sidang 1" required>
                    @error('ruangan_sidang')
                        <span class="error-message">{{ $message }}</span>
                    @enderror
                </div>
    
                <div class="buttons">
                    <button type="submit">Simpan Jadwal Sidang</button>
                </div>
            </form>
        </div>
    </body>
    </html>
    ----------------------------------------------
    // FILE: resources/views/kaprodi/pengajuan/show.blade.php
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Detail Pengajuan Kaprodi</title>
        <style>
            /* Umum */
            body {
                font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
                margin: 0;
                padding: 20px;
                background-color: #eef2f5; /* Warna latar belakang lebih lembut */
                color: #333;
            }
    
            .container {
                max-width: 850px; /* Lebar container lebih besar */
                margin: 30px auto;
                padding: 30px; /* Padding lebih besar */
                border: 1px solid #dcdcdc; /* Border lebih lembut */
                border-radius: 12px; /* Sudut lebih membulat */
                box-shadow: 0 6px 12px rgba(0,0,0,0.08); /* Shadow lebih menonjol */
                background-color: #fff;
            }
    
            h2 {
                text-align: center;
                margin-bottom: 30px;
                color: #2c3e50; /* Warna judul lebih gelap */
                font-size: 2.2em; /* Ukuran judul lebih besar */
                font-weight: 600;
            }
    
            h3 {
                margin-top: 35px;
                margin-bottom: 20px;
                color: #34495e; /* Warna sub-judul */
                border-bottom: 2px solid #007bff; /* Garis bawah biru */
                padding-bottom: 8px;
                font-size: 1.5em;
            }
    
            h4 {
                margin-top: 25px;
                margin-bottom: 15px;
                color: #444;
                font-size: 1.2em;
            }
    
            p {
                margin-bottom: 8px;
                line-height: 1.6;
                font-size: 0.98em;
            }
            p strong {
                color: #2c3e50; /* Warna bold lebih kontras */
                display: inline-block; /* Untuk alignment yang lebih baik */
                min-width: 150px; /* Agar label lebih rapi */
            }
    
            .alert {
                padding: 15px;
                margin-bottom: 25px;
                border-radius: 8px;
                font-size: 1em;
                display: flex; /* Untuk ikon/alignment */
                align-items: center;
            }
            .alert-success { background-color: #d4edda; color: #155724; border: 1px solid #c3e6cb; }
            .alert-danger { background-color: #f8d7da; color: #721c24; border: 1px solid #f5c6cb; }
            .alert-info { background-color: #d1ecf1; color: #0c5460; border: 1px solid #bee5eb; }
    
            /* Buttons */
            .btn {
                padding: 10px 20px; /* Padding lebih besar */
                border: none;
                border-radius: 6px; /* Sudut lebih membulat */
                cursor: pointer;
                text-decoration: none;
                color: white;
                display: inline-block;
                font-size: 0.95em; /* Ukuran font sedikit lebih besar */
                margin-top: 10px;
                margin-right: 8px; /* Jarak antar tombol */
                transition: background-color 0.3s ease, transform 0.2s ease; /* Transisi halus dan efek hover */
                font-weight: 500;
            }
            .btn:hover {
                transform: translateY(-2px); /* Efek angkat saat hover */
            }
            .btn-info { background-color: #17a2b8; } .btn-info:hover { background-color: #138496; }
            .btn-success { background-color: #28a745; } .btn-success:hover { background-color: #218838; }
            .btn-warning { background-color: #ffc107; color: #333; } .btn-warning:hover { background-color: #e0a800; }
            .btn-danger { background-color: #dc3545; } .btn-danger:hover { background-color: #c82333; }
            .btn-primary { background-color: #007bff; } .btn-primary:hover { background-color: #0056b3; }
    
            .back-link {
                display: inline-block;
                margin-bottom: 25px;
                text-decoration: none;
                color: #007bff;
                font-weight: bold;
                font-size: 1em;
                transition: color 0.3s ease;
            }
            .back-link:hover {
                color: #0056b3;
                text-decoration: underline;
            }
    
            hr {
                margin: 35px 0; /* Jarak HR lebih besar */
                border: 0;
                border-top: 1px solid #e0e0e0; /* Warna HR lebih lembut */
            }
    
            /* Form Styling */
            .form-group {
                margin-bottom: 20px; /* Jarak antar form-group lebih besar */
            }
            .form-group label {
                display: block;
                margin-bottom: 8px;
                font-weight: 600; /* Font label lebih tebal */
                color: #34495e;
                font-size: 0.95em;
            }
            .form-control {
                width: calc(100% - 22px); /* Penyesuaian width untuk padding dan border */
                padding: 10px;
                border: 1px solid #ccc;
                border-radius: 6px;
                font-size: 1em;
                box-sizing: border-box; /* Pastikan padding dan border termasuk dalam lebar */
                transition: border-color 0.3s ease;
            }
            .form-control:focus {
                border-color: #007bff; /* Border biru saat focus */
                outline: none; /* Hilangkan outline default */
            }
            select.form-control {
                appearance: none; /* Hilangkan default arrow di select */
                background-image: url('data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22292.4%22%20height%3D%22292.4%22%3E%3Cpath%20fill%3D%22%23007bff%22%20d%3D%22M287%2069.4a17.6%2017.6%200%200%200-13.2-6.5H18.6c-5%200-9.3%201.8-13.2%206.5-3.9%203.9-6%208.7-6%2014.2%200%205.5%202.1%2010.3%206%2014.2l128%20127.9c3.9%203.9%208.7%206%2014.2%206s10.3-2.1%2014.2-6l128-127.9c3.9-3.9%206-8.7%206-14.2%200-5.5-2.1-10.3-6-14.2z%22%2F%3E%3C%2Fsvg%3E'); /* Custom arrow */
                background-repeat: no-repeat;
                background-position: right 10px center;
                background-size: 12px;
                padding-right: 30px; /* Ruang untuk arrow */
            }
            .error-message {
                color: #dc3545;
                font-size: 0.9em;
                margin-top: 5px;
                display: block; /* Pastikan pesan error di baris baru */
            }
            .buttons {
                margin-top: 20px;
            }
    
            /* Dokumen Pengajuan List */
            .document-list ul {
                list-style-type: disc; /* Ubah ke bullet point */
                padding-left: 20px;
            }
            .document-list ul li {
                margin-bottom: 5px;
            }
            .document-list ul li a {
                color: #007bff;
                text-decoration: none;
                transition: color 0.3s ease;
            }
            .document-list ul li a:hover {
                color: #0056b3;
                text-decoration: underline;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <h2>Detail Pengajuan Sidang</h2>
            <a href="{{ route('kaprodi.pengajuan.index') }}" class="back-link">&larr; Kembali ke Daftar Pengajuan</a>
    
            @if (session('success'))
                <div class="alert alert-success">
                    {{ session('success') }}
                </div>
            @endif
            @if (session('error'))
                <div class="alert alert-danger">
                    {{ session('error') }}
                </div>
            @endif
    
            <p><strong>Mahasiswa:</strong> {{ $pengajuan->mahasiswa->nama_lengkap }} ({{ $pengajuan->mahasiswa->nim }})</p>
            <p><strong>Jenis Pengajuan:</strong> {{ $pengajuan->jenis_pengajuan }}</p>
            <p><strong>Status:</strong> {{ $pengajuan->status }}</p>
            <p><strong>Tanggal Diajukan:</strong> {{ \Carbon\Carbon::parse($pengajuan->created_at)->format('d M Y H:i') }}</p>
    
            <hr>
    
            <h3>Informasi Sidang:</h3>
            <p>
                <strong>Pembimbing 1:</strong> 
                {{ $pengajuan->sidang->dosenPembimbing->nama ?? 'Belum Terpilih' }} 
                @if ($pengajuan->sidang->dosenPembimbing)
                    (<span class="{{ $pengajuan->sidang->persetujuan_dosen_pembimbing == 'setuju' ? 'text-success' : ($pengajuan->sidang->persetujuan_dosen_pembimbing == 'tolak' ? 'text-danger' : 'text-warning') }}">
                        {{ ucfirst(str_replace('_', ' ', $pengajuan->sidang->persetujuan_dosen_pembimbing)) }}
                    </span>)
                @endif
            </p>
            <p>
                <strong>Pembimbing 2:</strong> 
                {{ $pengajuan->sidang->dosenPenguji1->nama ?? 'Belum Terpilih' }}
                @if ($pengajuan->sidang->dosenPenguji1)
                    (<span class="{{ $pengajuan->sidang->persetujuan_dosen_penguji1 == 'setuju' ? 'text-success' : ($pengajuan->sidang->persetujuan_dosen_penguji1 == 'tolak' ? 'text-danger' : 'text-warning') }}">
                        {{ ucfirst(str_replace('_', ' ', $pengajuan->sidang->persetujuan_dosen_penguji1)) }}
                    </span>)
                @endif
            </p>
    
            <p><strong>Tanggal & Waktu Sidang:</strong> {{ $pengajuan->sidang->tanggal_waktu_sidang ? \Carbon\Carbon::parse($pengajuan->sidang->tanggal_waktu_sidang)->format('d M Y H:i') : 'Belum Dijadwalkan' }}</p>
            <p><strong>Ruangan Sidang:</strong> {{ $pengajuan->sidang->ruangan_sidang ?? 'Belum Ditentukan' }}</p>
            <p>
                <strong>Ketua Sidang:</strong> 
                {{ $pengajuan->sidang->ketuaSidang->nama ?? 'Belum Terpilih' }}
                @if ($pengajuan->sidang->ketuaSidang)
                    (<span class="{{ $pengajuan->sidang->persetujuan_ketua_sidang == 'setuju' ? 'text-success' : ($pengajuan->sidang->persetujuan_ketua_sidang == 'tolak' ? 'text-danger' : 'text-warning') }}">
                        {{ ucfirst(str_replace('_', ' ', $pengajuan->sidang->persetujuan_ketua_sidang)) }}
                    </span>)
                @endif
            </p>
            <p>
                <strong>Sekretaris Sidang:</strong> 
                {{ $pengajuan->sidang->sekretarisSidang->nama ?? 'Belum Terpilih' }}
                @if ($pengajuan->sidang->sekretarisSidang)
                    (<span class="{{ $pengajuan->sidang->persetujuan_sekretaris_sidang == 'setuju' ? 'text-success' : ($pengajuan->sidang->persetujuan_sekretaris_sidang == 'tolak' ? 'text-danger' : 'text-warning') }}">
                        {{ ucfirst(str_replace('_', ' ', $pengajuan->sidang->persetujuan_sekretaris_sidang)) }}
                    </span>)
                @endif
            </p>
            <p>
                <strong>Anggota Sidang 1:</strong> 
                {{ $pengajuan->sidang->anggota1Sidang->nama ?? 'Belum Terpilih' }}
                @if ($pengajuan->sidang->anggota1Sidang)
                    (<span class="{{ $pengajuan->sidang->persetujuan_anggota1_sidang == 'setuju' ? 'text-success' : ($pengajuan->sidang->persetujuan_anggota1_sidang == 'tolak' ? 'text-danger' : 'text-warning') }}">
                        {{ ucfirst(str_replace('_', ' ', $pengajuan->sidang->persetujuan_anggota1_sidang)) }}
                    </span>)
                @endif
            </p>
            <p>
                <strong>Anggota Sidang 2:</strong> 
                {{ $pengajuan->sidang->anggota2Sidang->nama ?? 'Belum Terpilih' }}
                @if ($pengajuan->sidang->anggota2Sidang)
                    (<span class="{{ $pengajuan->sidang->persetujuan_anggota2_sidang == 'setuju' ? 'text-success' : ($pengajuan->sidang->persetujuan_anggota2_sidang == 'tolak' ? 'text-danger' : 'text-warning') }}">
                        {{ ucfirst(str_replace('_', ' ', $pengajuan->sidang->persetujuan_anggota2_sidang)) }}
                    </span>)
                @endif
            </p>
    
            <hr>
    
            <h3 id="aksi-kaprodi">Aksi Kaprodi:</h3>
    
            @if (in_array($pengajuan->status, ['diverifikasi_admin', 'menunggu_persetujuan_dosen']))
                <h4>Form Penjadwalan Sidang</h4>
                <form action="{{ route('kaprodi.pengajuan.jadwalkan.storeUpdate', $pengajuan->id) }}" method="POST">
                    @csrf
                    @method('PUT')
    
                    <div class="form-group">
                        <label for="sekretaris_sidang_id">Sekretaris Sidang:</label>
                        <select name="sekretaris_sidang_id" id="sekretaris_sidang_id" class="form-control" required>
                            <option value="">Pilih Sekretaris</option>
                            @foreach ($dosens as $dosen)
                                <option value="{{ $dosen->id }}" {{ old('sekretaris_sidang_id', $pengajuan->sidang->sekretaris_sidang_dosen_id ?? '') == $dosen->id ? 'selected' : '' }}>
                                    {{ $dosen->nama }}
                                </option>
                            @endforeach
                        </select>
                        @error('sekretaris_sidang_id') <span class="error-message">{{ $message }}</span> @enderror
                    </div>
    
                    <div class="form-group">
                        <label for="anggota_1_sidang_id">Anggota 1 Sidang:</label>
                        <select name="anggota_1_sidang_id" id="anggota_1_sidang_id" class="form-control" required>
                            <option value="">Pilih Anggota 1</option>
                            @foreach ($dosens as $dosen)
                                <option value="{{ $dosen->id }}" {{ old('anggota_1_sidang_id', $pengajuan->sidang->anggota1_sidang_dosen_id ?? '') == $dosen->id ? 'selected' : '' }}>
                                    {{ $dosen->nama }}
                                </option>
                            @endforeach
                        </select>
                        @error('anggota_1_sidang_id') <span class="error-message">{{ $message }}</span> @enderror
                    </div>
    
                    <div class="form-group">
                        <label for="anggota_2_sidang_id">Anggota 2 Sidang:</label>
                        <select name="anggota_2_sidang_id" id="anggota_2_sidang_id" class="form-control">
                            <option value="">Pilih Anggota 2 (Opsional)</option>
                            @foreach ($dosens as $dosen)
                                <option value="{{ $dosen->id }}" {{ old('anggota_2_sidang_id', $pengajuan->sidang->anggota2_sidang_dosen_id ?? '') == $dosen->id ? 'selected' : '' }}>
                                    {{ $dosen->nama }}
                                </option>
                            @endforeach
                        </select>
                        @error('anggota_2_sidang_id') <span class="error-message">{{ $message }}</span> @enderror
                    </div>
    
                    <div class="form-group">
                        <label for="tanggal_waktu_sidang">Tanggal dan Waktu Sidang:</label>
                        <input type="datetime-local" name="tanggal_waktu_sidang" id="tanggal_waktu_sidang" class="form-control"
                                     value="{{ old('tanggal_waktu_sidang', $pengajuan->sidang->tanggal_waktu_sidang ? \Carbon\Carbon::parse($pengajuan->sidang->tanggal_waktu_sidang)->format('Y-m-d\TH:i') : '') }}" required>
                        @error('tanggal_waktu_sidang') <span class="error-message">{{ $message }}</span> @enderror
                    </div>
    
                    <div class="form-group">
                        <label for="ruangan_sidang">Ruangan Sidang:</label>
                        <input type="text" name="ruangan_sidang" id="ruangan_sidang" class="form-control" placeholder="Contoh: Ruang Sidang A"
                                     value="{{ old('ruangan_sidang', $pengajuan->sidang->ruangan_sidang ?? '') }}" required>
                        @error('ruangan_sidang') <span class="error-message">{{ $message }}</span> @enderror
                    </div>
    
                    <div class="buttons">
                        <button type="submit" class="btn btn-primary">
                            @php
                                $isScheduled = false;
                                // Memeriksa apakah sidang sudah ada DAN memiliki data jadwal esensial
                                if ($pengajuan->sidang && $pengajuan->sidang->exists &&
                                    $pengajuan->sidang->sekretaris_sidang_dosen_id &&
                                    $pengajuan->sidang->anggota1_sidang_dosen_id &&
                                    $pengajuan->sidang->tanggal_waktu_sidang &&
                                    $pengajuan->sidang->ruangan_sidang) {
                                    $isScheduled = true;
                                }
                            @endphp
     
                            @if ($isScheduled)
                                Update Jadwal
                            @else
                                Jadwalkan Sidang
                            @endif
                        </button>
                    </div>
                </form>
    
                {{-- Tombol Finalisasi Jadwal --}}
                @if ($pengajuan->sidang && $pengajuan->status === 'menunggu_persetujuan_dosen')
                    <form action="{{ route('kaprodi.pengajuan.finalkan.jadwal', $pengajuan->id) }}" method="POST" style="display:inline-block; margin-top: 15px;">
                        @csrf
                        <button type="submit" class="btn btn-primary">Finalisasi Pengajuan Sidang</button>
                    </form>
                    {{-- Pesan error validasi akan muncul di bawah tombol jika gagal --}}
                    @if (session('finalisasi_error'))
                        <div class="alert alert-danger" style="margin-top: 10px;">
                            {{ session('finalisasi_error') }}
                        </div>
                    @endif
                @endif
            @endif
    
        </div>
    </body>
    </html>
    ----------------------------------------------
    // FILE: resources/views/kaprodi/pengajuan/tetapkan-dosen.blade.php
    <!DOCTYPE html>
    <html lang="en">
    
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Tetapkan Dosen</title>
    </head>
    
    <body>
    
        <h2>Tetapkan Dosen</h2>
    
        <p>Mahasiswa: {{ $pengajuan->mahasiswa->nama_lengkap }}</p>
        <p>Judul: {{ $pengajuan->judul }}</p>
    
        @if ($errors->any())
            <div>
                <ul>
                    @foreach ($errors->all() as $error)
                        <li>{{ $error }}</li>
                    @endforeach
                </ul>
            </div>
        @endif
    
        <form method="POST" action="{{ route('kaprodi.pengajuan.tetapkan-dosen.store', $pengajuan->id) }}">
            @csrf
    
            <div>
                <label for="pembimbing_id">Dosen Pembimbing</label>
                <select name="pembimbing_id" id="pembimbing_id" required>
                    @foreach ($dosens as $dosen)
                        <option value="{{ $dosen->id }}">{{ $dosen->nama }}</option>
                    @endforeach
                </select>
            </div>
    
            <div>
                <label for="penguji_1_id">Dosen Penguji 1</label>
                <select name="penguji_1_id" id="penguji_1_id" required>
                    @foreach ($dosens as $dosen)
                        <option value="{{ $dosen->id }}">{{ $dosen->nama }}</option>
                    @endforeach
                </select>
            </div>
    
            <div>
                <label for="penguji_2_id">Dosen Penguji 2</label>
                <select name="penguji_2_id" id="penguji_2_id" required>
                    @foreach ($dosens as $dosen)
                        <option value="{{ $dosen->id }}">{{ $dosen->nama }}</option>
                    @endforeach
                </select>
            </div>
    
            <button type="submit">Simpan</button>
        </form>
    
    </body>
    
    </html>
    ----------------------------------------------
    // FILE: resources/views/mahasiswa/dashboard.blade.php
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Mahasiswa Dashboard</title>
        <!-- Tambahkan CSRF Token meta tag untuk keamanan -->
        <meta name="csrf-token" content="{{ csrf_token() }}">
    </head>
    <body>
    
        <h2>Mahasiswa Dashboard</h2>
    
        <p>Selamat datang, Mahasiswa!</p>
    
        <!-- Tombol Logout dengan Form POST -->
        <form action="{{ route('mahasiswa.logout') }}" method="POST">
            @csrf <!-- CSRF Protection -->
            <a href="{{ route('mahasiswa.pengajuan.index') }}">Lihat Daftar Pengajuan Saya</a>
            <br>
            <button type="submit">Logout</button>
        </form>
    
    </body>
    </html>
    ----------------------------------------------
    // FILE: resources/views/mahasiswa/login.blade.php
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Mahasiswa Login</title>
    </head>
    <body>
    
        <h2>Mahasiswa Login</h2>
    
        @if ($errors->any())
            <div>
                <ul>
                    @foreach ($errors->all() as $error)
                        <li>{{ $error }}</li>
                    @endforeach
                </ul>
            </div>
        @endif
    
        <form method="POST" action="{{ route('mahasiswa.login') }}">
            @csrf
    
            <div>
                <label for="email">Email</label>
                <input type="email" name="email" id="email" required>
            </div>
    
            <div>
                <label for="password">Password</label>
                <input type="password" name="password" id="password" required>
            </div>
    
            <button type="submit">Login</button>
        </form>
    
    </body>
    </html>
    ----------------------------------------------
    // FILE: resources/views/mahasiswa/dokumen/index.blade.php
    <!DOCTYPE html>
    <html lang="en">
    
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Kelengkapan Dokumen</title>
    </head>
    
    <body>
    
        <h2>Kelengkapan Dokumen {{ strtoupper($pengajuan->jenis_pengajuan) }}</h2>
    
        @if (session('success'))
            <div>
                {{ session('success') }}
            </div>
        @endif
    
        @if ($errors->any())
            <div>
                <ul>
                    @foreach ($errors->all() as $error)
                        <li>{{ $error }}</li>
                    @endforeach
                </ul>
            </div>
        @endif
    
        <table>
            <thead>
                <tr>
                    <th>Nama Dokumen</th>
                    <th>Status</th>
                    <th>File</th>
                    <th>Aksi</th>
                </tr>
            </thead>
            <tbody>
                @foreach ($dokumenSyarat as $dokumen)
                    <tr>
                        <td>{{ $dokumen }}</td>
                        <td>
                            @php
                                $dokumenTeruploadIni = $dokumenTerupload->where('nama_file', $dokumen)->first();
                            @endphp
    
                            @if ($dokumenTeruploadIni)
                                {{ $dokumenTeruploadIni->status }}
                            @else
                                Belum diupload
                            @endif
                        </td>
                        <td>
                            @if ($dokumenTeruploadIni)
                                <a href="{{ asset('storage/' . $dokumenTeruploadIni->path_file) }}" target="_blank">Lihat</a>
                            @else
                                -
                            @endif
                        </td>
                        <td>
                            @if ($dokumenTeruploadIni)
                                <form method="POST" action="{{ route('mahasiswa.dokumen.update', $dokumenTeruploadIni->id) }}" enctype="multipart/form-data">
                                    @csrf
                                    @method('PUT')
                                    <input type="file" name="file" accept="application/pdf" required>
                                    <button type="submit">Update</button>
                                </form>
                            @else
                                <form method="POST" action="{{ route('mahasiswa.dokumen.store') }}" enctype="multipart/form-data">
                                    @csrf
                                    <input type="hidden" name="pengajuan_id" value="{{ $pengajuan->id }}">
                                    <input type="hidden" name="nama_file" value="{{ $dokumen }}">
                                    <input type="file" name="file" accept="application/pdf" required>
                                    <button type="submit">Upload</button>
                                </form>
                            @endif
                        </td>
                    </tr>
                @endforeach
            </tbody>
        </table>
    
        <a href="{{ route('mahasiswa.pengajuan.show', $pengajuan->id) }}">Kembali</a>
    
    </body>
    
    </html>
    ----------------------------------------------
    // FILE: resources/views/mahasiswa/pengajuan/create_pkl.blade .php
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Form Pengajuan Praktek Kerja Lapangan</title>
        <style>
            body { font-family: sans-serif; margin: 20px; }
            .container { max-width: 800px; margin: auto; padding: 20px; border: 1px solid #ddd; border-radius: 8px; }
            h2 { text-align: center; color: #333; }
            .form-group { margin-bottom: 15px; }
            label { display: block; margin-bottom: 5px; font-weight: bold; }
            input[type="file"] { border: 1px solid #ccc; padding: 8px; border-radius: 4px; width: calc(100% - 18px); }
            button { background-color: #007bff; color: white; padding: 10px 15px; border: none; border-radius: 5px; cursor: pointer; font-size: 16px; }
            button:hover { background-color: #0056b3; }
            .back-link { display: block; text-align: center; margin-top: 20px; color: #007bff; text-decoration: none; }
            .back-link:hover { text-decoration: underline; }
            .error-message { color: red; font-size: 0.9em; margin-top: 5px; }
        </style>
    </head>
    <body>
    
        <div class="container">
            <h2>Form Pengajuan Praktek Kerja Lapangan</h2>
    
            @if (session('success'))
                <div style="color: green; text-align: center; margin-bottom: 15px;">
                    {{ session('success') }}
                </div>
            @endif
    
            @if ($errors->any())
                <div style="color: red; text-align: center; margin-bottom: 15px;">
                    <ul>
                        @foreach ($errors->all() as $error)
                            <li>{{ $error }}</li>
                        @endforeach
                    </ul>
                </div>
            @endif
    
            <form action="{{ route('mahasiswa.pengajuan.store') }}" method="POST" enctype="multipart/form-data">
                @csrf
                <input type="hidden" name="jenis_pengajuan" value="pkl">
    
                <div class="form-group">
                    <label for="laporan_pkl">1. Laporan PKL (2 rangkap):</label>
                    <input type="file" name="dokumen[laporan_pkl]" id="laporan_pkl" accept=".pdf" required>
                    @error('dokumen.laporan_pkl')
                        <p class="error-message">{{ $message }}</p>
                    @enderror
                </div>
    
                <div class="form-group">
                    <label for="buku_pkl">2. Buku PKL:</label>
                    <input type="file" name="dokumen[buku_pkl]" id="buku_pkl" accept=".pdf" required>
                    @error('dokumen.buku_pkl')
                        <p class="error-message">{{ $message }}</p>
                    @enderror
                </div>
    
                <div class="form-group">
                    <label for="kuisioner_survey_pkl">3. Kuisioner Survey PKL (telah diisi, ditandatangani, dan distempel perusahaan):</label>
                    <input type="file" name="dokumen[kuisioner_survey_pkl]" id="kuisioner_survey_pkl" accept=".pdf" required>
                    @error('dokumen.kuisioner_survey_pkl')
                        <p class="error-message">{{ $message }}</p>
                    @enderror
                </div>
    
                <div class="form-group">
                    <label for="kuisioner_kelulusan">4. Kuisioner Kelulusan (jika ada):</label>
                    <input type="file" name="dokumen[kuisioner_kelulusan]" id="kuisioner_kelulusan" accept=".pdf">
                    <small>Opsional jika tidak ada</small>
                    @error('dokumen.kuisioner_kelulusan')
                        <p class="error-message">{{ $message }}</p>
                    @enderror
                </div>
    
                <div class="form-group">
                    <label for="kuisioner_balikan_pkl">5. Kuisioner Balikan PKL:</label>
                    <input type="file" name="dokumen[kuisioner_balikan_pkl]" id="kuisioner_balikan_pkl" accept=".pdf" required>
                    @error('dokumen.kuisioner_balikan_pkl')
                        <p class="error-message">{{ $message }}</p>
                    @enderror
                </div>
    
                <div class="form-group">
                    <label for="lembaran_rekomendasi_penguji">6. Lembaran Rekomendasi Penguji:</label>
                    <input type="file" name="dokumen[lembaran_rekomendasi_penguji]" id="lembaran_rekomendasi_penguji" accept=".pdf" required>
                    @error('dokumen.lembaran_rekomendasi_penguji')
                        <p class="error-message">{{ $message }}</p>
                    @enderror
                </div>
    
                <div class="form-group">
                    <label for="surat_permohonan_sidang_pkl">7. Surat Permohonan Sidang PKL:</label>
                    <input type="file" name="dokumen[surat_permohonan_sidang_pkl]" id="surat_permohonan_sidang_pkl" accept=".pdf" required>
                    @error('dokumen.surat_permohonan_sidang_pkl')
                        <p class="error-message">{{ $message }}</p>
                    @enderror
                </div>
    
                <div class="form-group">
                    <label for="lembar_penilaian_sidang_pkl">8. Lembar Penilaian Sidang PKL (Penguji):</label>
                    <input type="file" name="dokumen[lembar_penilaian_sidang_pkl]" id="lembar_penilaian_sidang_pkl" accept=".pdf" required>
                    @error('dokumen.lembar_penilaian_sidang_pkl')
                        <p class="error-message">{{ $message }}</p>
                    @enderror
                </div>
    
                <div class="form-group">
                    <label for="surat_keterangan_pelaksanaan_pkl">9. Surat Keterangan Pelaksanaan PKL (Asli, distempel dan ditandatangani pihak perusahaan):</label>
                    <input type="file" name="dokumen[surat_keterangan_pelaksanaan_pkl]" id="surat_keterangan_pelaksanaan_pkl" accept=".pdf" required>
                    @error('dokumen.surat_keterangan_pelaksanaan_pkl')
                        <p class="error-message">{{ $message }}</p>
                    @enderror
                </div>
    
                <div class="form-group">
                    <label for="fotocopy_cover_laporan_pkl">10. Fotokopi Cover Laporan PKL (ada tanda tangan persetujuan sidang dari dosen pembimbing PKL):</label>
                    <input type="file" name="dokumen[fotocopy_cover_laporan_pkl]" id="fotocopy_cover_laporan_pkl" accept=".pdf,.jpg,.jpeg,.png" required>
                    @error('dokumen.fotocopy_cover_laporan_pkl')
                        <p class="error-message">{{ $message }}</p>
                    @enderror
                </div>
    
                <div class="form-group">
                    <label for="fotocopy_lembar_penilaian_industri">11. Fotokopi Lembar Penilaian dari Pembimbing di Industri (ditandatangani pembimbing industri):</label>
                    <input type="file" name="dokumen[fotocopy_lembar_penilaian_industri]" id="fotocopy_lembar_penilaian_industri" accept=".pdf,.jpg,.jpeg,.png" required>
                    @error('dokumen.fotocopy_lembar_penilaian_industri')
                        <p class="error-message">{{ $message }}</p>
                    @enderror
                </div>
    
                <div class="form-group">
                    <label for="fotocopy_lembar_penilaian_dosen_pembimbing_pkl">12. Fotokopi Lembar Penilaian dari Dosen Pembimbing PKL (ditandatangani pembimbing kampus):</label>
                    <input type="file" name="dokumen[fotocopy_lembar_penilaian_dosen_pembimbing_pkl]" id="fotocopy_lembar_penilaian_dosen_pembimbing_pkl" accept=".pdf,.jpg,.jpeg,.png" required>
                    @error('dokumen.fotocopy_lembar_penilaian_dosen_pembimbing_pkl')
                        <p class="error-message">{{ $message }}</p>
                    @enderror
                </div>
    
                <div class="form-group">
                    <label for="fotocopy_lembar_konsultasi_bimbingan_pkl">13. Fotokopi Lembar Konsultasi Bimbingan PKL (diisi dan ditandatangani pembimbing kampus):</label>
                    <input type="file" name="dokumen[fotocopy_lembar_konsultasi_bimbingan_pkl]" id="fotocopy_lembar_konsultasi_bimbingan_pkl" accept=".pdf,.jpg,.jpeg,.png" required>
                    @error('dokumen.fotocopy_lembar_konsultasi_bimbingan_pkl')
                        <p class="error-message">{{ $message }}</p>
                    @enderror
                </div>
    
                <button type="submit">Ajukan PKL</button>
            </form>
    
            <a href="{{ route('mahasiswa.dashboard') }}" class="back-link">Kembali ke Dashboard</a>
        </div>
    
    </body>
    </html>
    ----------------------------------------------
    // FILE: resources/views/mahasiswa/pengajuan/create_ta.blade.php
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Form Pengajuan Tugas Akhir</title>
        <style>
            body { font-family: sans-serif; margin: 20px; }
            .container { max-width: 800px; margin: auto; padding: 20px; border: 1px solid #ddd; border-radius: 8px; }
            h2 { text-align: center; color: #333; }
            .form-group { margin-bottom: 15px; }
            label { display: block; margin-bottom: 5px; font-weight: bold; }
            input[type="file"] { border: 1px solid #ccc; padding: 8px; border-radius: 4px; width: calc(100% - 18px); }
            button { background-color: #007bff; color: white; padding: 10px 15px; border: none; border-radius: 5px; cursor: pointer; font-size: 16px; }
            button:hover { background-color: #0056b3; }
            .back-link { display: block; text-align: center; margin-top: 20px; color: #007bff; text-decoration: none; }
            .back-link:hover { text-decoration: underline; }
            .error-message { color: red; font-size: 0.9em; margin-top: 5px; }
        </style>
    </head>
    <body>
    
        <div class="container">
            <h2>Form Pengajuan Tugas Akhir</h2>
    
            @if (session('success'))
                <div style="color: green; text-align: center; margin-bottom: 15px;">
                    {{ session('success') }}
                </div>
            @endif
    
            @if ($errors->any())
                <div style="color: red; text-align: center; margin-bottom: 15px;">
                    <ul>
                        @foreach ($errors->all() as $error)
                            <li>{{ $error }}</li>
                        @endforeach
                    </ul>
                </div>
            @endif
    
            <form action="{{ route('mahasiswa.pengajuan.store') }}" method="POST" enctype="multipart/form-data">
                @csrf
                <input type="hidden" name="jenis_pengajuan" value="ta">
    
                <div class="form-group">
                    <label for="surat_permohonan_sidang">1. Surat Permohonan Sidang:</label>
                    <input type="file" name="dokumen[surat_permohonan_sidang]" id="surat_permohonan_sidang" accept=".pdf" required>
                    @error('dokumen.surat_permohonan_sidang')
                        <p class="error-message">{{ $message }}</p>
                    @enderror
                </div>
    
                <div class="form-group">
                    <label for="bebas_kompensasi">2. Surat Keterangan Bebas Kompensasi Semester Ganjil & Genap:</label>
                    <input type="file" name="dokumen[surat_keterangan_bebas_kompensasi]" id="bebas_kompensasi" accept=".pdf" required>
                    @error('dokumen.surat_keterangan_bebas_kompensasi')
                        <p class="error-message">{{ $message }}</p>
                    @enderror
                </div>
    
                <div class="form-group">
                    <label for="ipk_terakhir">3. IPK Terakhir (Lampiran Rapor Semester 1 s.d 5 (D3) dan 1 s.d 7 (D4)):</label>
                    <input type="file" name="dokumen[ipk_terakhir]" id="ipk_terakhir" accept=".pdf" required>
                    @error('dokumen.ipk_terakhir')
                        <p class="error-message">{{ $message }}</p>
                    @enderror
                </div>
    
                <div class="form-group">
                    <label for="bukti_laporan_pkl">4. Bukti Menyerahkan Laporan PKL:</label>
                    <input type="file" name="dokumen[bukti_menyerahkan_laporan_pkl]" id="bukti_laporan_pkl" accept=".pdf" required>
                    @error('dokumen.bukti_menyerahkan_laporan_pkl')
                        <p class="error-message">{{ $message }}</p>
                    @enderror
                </div>
    
                <div class="form-group">
                    <label for="nilai_toeic">5. Nilai TOEIC (minimal 450 (D3) / 550 (D4) - Lampirkan kartu TOEIC. Jika belum mencukupi, fotokopi kartu nilai TOEIC terakhir dan bukti pendaftaran tes TOEIC berikutnya):</label>
                    <input type="file" name="dokumen[nilai_toeic]" id="nilai_toeic" accept=".pdf,.jpg,.jpeg,.png" required>
                    @error('dokumen.nilai_toeic')
                        <p class="error-message">{{ $message }}</p>
                    @enderror
                </div>
    
                <div class="form-group">
                    <label for="tugas_akhir_rangkap">6. Tugas Akhir Rangkap 4 yang Disetujui Pembimbing:</label>
                    <input type="file" name="dokumen[tugas_akhir_rangkap]" id="tugas_akhir_rangkap" accept=".pdf" required>
                    @error('dokumen.tugas_akhir_rangkap')
                        <p class="error-message">{{ $message }}</p>
                    @enderror
                </div>
    
                <div class="form-group">
                    <label for="kartu_bimbingan">7. Kartu Bimbingan/Konsultasi Tugas Akhir 9x:</label>
                    <input type="file" name="dokumen[kartu_bimbingan_ta]" id="kartu_bimbingan" accept=".pdf" required>
                    @error('dokumen.kartu_bimbingan_ta')
                        <p class="error-message">{{ $message }}</p>
                    @enderror
                </div>
    
                <div class="form-group">
                    <label for="fotokopi_ijazah_sma">8. Fotokopi Ijazah SMA/MA/SMK:</label>
                    <input type="file" name="dokumen[fotokopi_ijazah_sma]" id="fotokopi_ijazah_sma" accept=".pdf,.jpg,.jpeg,.png" required>
                    @error('dokumen.fotokopi_ijazah_sma')
                        <p class="error-message">{{ $message }}</p>
                    @enderror
                </div>
    
                <div class="form-group">
                    <label for="fotokopi_sertifikat_diksarlin">10. Fotokopi Sertifikat Diksarlin:</label>
                    <input type="file" name="dokumen[fotokopi_sertifikat_diksarlin]" id="fotokopi_sertifikat_diksarlin" accept=".pdf,.jpg,.jpeg,.png" required>
                    @error('dokumen.fotokopi_sertifikat_diksarlin')
                        <p class="error-message">{{ $message }}</p>
                    @enderror
                </div>
    
                <div class="form-group">
                    <label for="sertifikat_responsi">11. Sertifikat Responsi:</label>
                    <input type="file" name="dokumen[sertifikat_responsi]" id="sertifikat_responsi" accept=".pdf" required>
                    @error('dokumen.sertifikat_responsi')
                        <p class="error-message">{{ $message }}</p>
                    @enderror
                </div>
    
                <div class="form-group">
                    <label for="nilai_ske">12. Nilai Satuan Kredit Ekstrakurikuler (SKE) (Lampirkan kartu SKE):</label>
                    <input type="file" name="dokumen[nilai_ske]" id="nilai_ske" accept=".pdf,.jpg,.jpeg,.png" required>
                    @error('dokumen.nilai_ske')
                        <p class="error-message">{{ $message }}</p>
                    @enderror
                </div>
    
                <p style="font-size: 0.9em; color: #666;">Catatan: Untuk 'Map Plastik', akan diurus secara fisik.</p>
    
                <button type="submit">Ajukan Tugas Akhir</button>
            </form>
    
            <a href="{{ route('mahasiswa.dashboard') }}" class="back-link">Kembali ke Dashboard</a>
        </div>
    
    </body>
    </html>
    ----------------------------------------------
    // FILE: resources/views/mahasiswa/pengajuan/edit.blade.php
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Edit Pengajuan Sidang {{ strtoupper($jenis) }}</title>
    </head>
    <body>
    
        <h2>Edit Pengajuan Sidang {{ strtoupper($jenis) }}</h2>
    
        @if (session('success'))
            <div style="color: green;">
                {{ session('success') }}
            </div>
        @endif
    
        @if (session('error'))
            <div style="color: red;">
                {{ session('error') }}
            </div>
        @endif
    
        @if ($errors->any())
            <div style="color: red;">
                <ul>
                    @foreach ($errors->all() as $error)
                        <li>{{ $error }}</li>
                    @endforeach
                </ul>
            </div>
        @endif
    
        {{-- Form action mengarah ke route update --}}
        <form method="POST" action="{{ route('mahasiswa.pengajuan.update', $pengajuan->id) }}" enctype="multipart/form-data">
            @csrf
            @method('PUT') {{-- Penting untuk metode PUT/PATCH --}}
        
            <input type="hidden" name="jenis_pengajuan" value="{{ $jenis }}">
        
            <h3>Dokumen Persyaratan:</h3>
        
            <div>
                <label for="ketua_sidang_dosen_id">Pilih Ketua Sidang:</label>
                <select name="ketua_sidang_dosen_id" id="ketua_sidang_dosen_id" required>
                    <option value="">-- Pilih Dosen --</option>
                    @foreach ($dosens as $dosen)
                        {{-- Gunakan ?? null atau ?? '' untuk memastikan tidak error jika $pengajuan->sidang belum ada --}}
                        <option value="{{ $dosen->id }}" {{ old('ketua_sidang_dosen_id', $pengajuan->sidang->ketua_sidang_dosen_id ?? null) == $dosen->id ? 'selected' : '' }}>
                            {{ $dosen->nama }}
                        </option>
                    @endforeach
                </select>
                @error('ketua_sidang_dosen_id') {{-- Tampilkan error validasi jika ada --}}
                    <div style="color: red; font-size: 0.8em; margin-top: 5px;">{{ $message }}</div>
                @enderror
            </div>
        
            @foreach ($dokumenSyarat as $key => $namaDokumen)
                @php
                    $uploadedDoc = $pengajuan->dokumens->where('nama_file', $namaDokumen)->first();
                @endphp
                <div>
                    <label for="dokumen_file_{{ $key }}">{{ $namaDokumen }}:</label>
                    @if ($uploadedDoc)
                        <p>File saat ini: <a href="{{ asset('storage/' . $uploadedDoc->path_file) }}" target="_blank">Lihat File</a></p>
                    @else
                        <p>Belum ada file terupload.</p>
                    @endif
                    <input type="file" name="dokumen_file_{{ $key }}" id="dokumen_file_{{ $key }}" accept="application/pdf">
                    <small>(Upload file baru untuk mengganti yang lama atau mengisi yang kosong. Format: PDF, Maksimal: 2MB)</small>
                </div>
                @if (!$loop->last) {{-- Tambahkan HR di antara setiap item kecuali yang terakhir --}}
                    <br><br> {{-- Tambahkan dua tag <br> untuk menciptakan gap --}}
                @endif
            @endforeach
        
            <br>
            <button type="submit" name="action" value="draft">Simpan Perubahan Draft</button>
            <button type="submit" name="action" value="submit" onclick="return confirm('Apakah Anda yakin ingin memfinalisasi pengajuan ini? Setelah difinalisasi, Anda tidak dapat mengubahnya lagi.');">Finalisasi dan Ajukan</button>
        </form>
    
        <a href="{{ route('mahasiswa.dashboard') }}">Kembali ke Dashboard</a>
        <a href="{{ route('mahasiswa.pengajuan.show', $pengajuan->id) }}">Kembali ke Detail Pengajuan</a>
    
    </body>
    </html>
    ----------------------------------------------
    // FILE: resources/views/mahasiswa/pengajuan/form.blade.php
    <!DOCTYPE html>
    <html lang="en">
    <head> 
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>{{ isset($pengajuan) ? 'Edit Pengajuan' : 'Buat Pengajuan' }} {{ strtoupper($jenis) }}</title>
        <style>
            body { font-family: sans-serif; margin: 20px; background-color: #f4f4f4; }
            .container { max-width: 800px; margin: auto; padding: 25px; border: 1px solid #ddd; border-radius: 8px; background-color: #fff; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
            h2 { text-align: center; color: #333; margin-bottom: 25px; }
            .form-group { margin-bottom: 20px; }
            label { display: block; margin-bottom: 8px; font-weight: bold; color: #555; }
            input[type="file"] { border: 1px solid #ccc; padding: 10px; border-radius: 5px; width: calc(100% - 22px); background-color: #f9f9f9; }
            select { border: 1px solid #ccc; padding: 10px; border-radius: 5px; width: 100%; background-color: #f9f9f9; }
            button { background-color: #007bff; color: white; padding: 12px 20px; border: none; border-radius: 5px; cursor: pointer; font-size: 16px; margin-right: 10px; transition: background-color 0.3s ease; }
            button:hover { background-color: #0056b3; }
            .button-draft { background-color: #6c757d; }
            .button-draft:hover { background-color: #5a6268; }
            .back-link { display: block; text-align: center; margin-top: 30px; color: #007bff; text-decoration: none; font-size: 16px; }
            .back-link:hover { text-decoration: underline; }
            .error-message { color: red; font-size: 0.9em; margin-top: 5px; display: block; }
            .alert { padding: 15px; margin-bottom: 20px; border-radius: 4px; }
            .alert-success { background-color: #d4edda; color: #155724; border: 1px solid #c3e6cb; }
            .alert-danger { background-color: #f8d7da; color: #721c24; border: 1px solid #f5c6cb; }
            .current-file { font-size: 0.9em; color: #666; margin-top: 5px; }
        </style>
    </head>
    <body>
    
        <div class="container">
            <h2>{{ isset($pengajuan) ? 'Edit Pengajuan' : 'Buat Pengajuan' }} {{ strtoupper($jenis) }}</h2>
    
            @if (session('success'))
                <div class="alert alert-success">
                    {{ session('success') }}
                </div>
            @endif
    
            @if (session('error'))
                <div class="alert alert-danger">
                    {{ session('error') }}
                </div>
            @endif
    
            @if ($errors->any())
                <div class="alert alert-danger">
                    <ul>
                        @foreach ($errors->all() as $error)
                            <li>{{ $error }}</li>
                        @endforeach
                    </ul>
                </div>
            @endif
    
            <form action="{{ isset($pengajuan) ? route('mahasiswa.pengajuan.update', $pengajuan->id) : route('mahasiswa.pengajuan.store') }}" method="POST" enctype="multipart/form-data">
                @csrf
                @if (isset($pengajuan))
                    @method('PUT')
                @endif
                <input type="hidden" name="jenis_pengajuan" value="{{ $jenis }}">
    
                <div class="form-group">
                    <label for="dosen_pembimbing1_id">Pilih Dosen Pembimbing 1:</label>
                    <select name="dosen_pembimbing1_id" id="dosen_pembimbing1_id" required>
                        <option value="">-- Pilih Dosen --</option>
                        @foreach ($dosens as $dosen)
                            <option value="{{ $dosen->id }}" {{ (isset($pengajuan) && $pengajuan->sidang && $pengajuan->sidang->dosen_pembimbing_id == $dosen->id) ? 'selected' : (old('dosen_pembimbing1_id') == $dosen->id ? 'selected' : '') }}>
                                {{ $dosen->nama }}
                            </option>
                        @endforeach
                    </select>
                    @error('dosen_pembimbing1_id')
                        <span class="error-message">{{ $message }}</span>
                    @enderror
                </div>
    
                <div class="form-group">
                    <label for="dosen_pembimbing2_id">Pilih Dosen Pembimbing 2:</label>
                    <select name="dosen_pembimbing2_id" id="dosen_pembimbing2_id">
                        <option value="">-- Pilih Dosen --</option>
                        @foreach ($dosens as $dosen)
                            <option value="{{ $dosen->id }}" {{ (isset($pengajuan) && $pengajuan->sidang && $pengajuan->sidang->dosen_penguji1_id == $dosen->id) ? 'selected' : (old('dosen_pembimbing2_id') == $dosen->id ? 'selected' : '') }}>
                                {{ $dosen->nama }}
                            </option>
                        @endforeach
                    </select>
                    @error('dosen_pembimbing2_id')
                        <span class="error-message">{{ $message }}</span>
                    @enderror
                </div>
                
                <h3>Unggah Dokumen Persyaratan:</h3>
                @foreach ($dokumenSyarat as $key => $namaDokumen)
                    <div class="form-group">
                        <label for="dokumen_file_{{ $key }}">{{ $loop->iteration }}. {{ $namaDokumen }}</label>
                        <input type="file" name="dokumen[{{ $key }}]" id="dokumen_file_{{ $key }}" accept=".pdf,.jpg,.jpeg,.png">
    
                        @if (isset($dokumenTerupload[$namaDokumen]))
                            <div class="current-file">
                                File saat ini: <a href="{{ Storage::url($dokumenTerupload[$namaDokumen]->path_file) }}" target="_blank">{{ $dokumenTerupload[$namaDokumen]->nama_file }}</a>
                                <input type="hidden" name="existing_dokumen_file_check[{{ $key }}]" value="1">
                            </div>
                        @endif
                        @error("dokumen.{$key}")
                            <span class="error-message">{{ $message }}</span>
                        @enderror
                        @if ($jenis == 'ta' && $key == 'nilai_toeic')
                            <small style="color: #666; display: block; margin-top: 5px;">Jika belum mencukupi, fotokopi kartu nilai TOEIC terakhir dan fotokopi bukti pendaftaran tes TOEIC berikutnya.</small>
                        @endif
                         @if ($jenis == 'pkl' && $key == 'kuisioner_kelulusan')
                            <small style="color: #666; display: block; margin-top: 5px;">Opsional jika tidak ada.</small>
                        @endif
                         @if ($jenis == 'ta' && $key == 'ipk_terakhir')
                            <small style="color: #666; display: block; margin-top: 5px;">(Lampiran Rapor Semester 1 s.d 5 (D3) dan 1 s.d 7 (D4))</small>
                        @endif
                    </div>
                @endforeach
    
                <p style="font-size: 0.9em; color: #666; margin-top: 20px;">Catatan: Untuk "Map Plastik", akan diurus secara fisik dan tidak perlu diunggah.</p>
    
                <button type="submit" name="action" value="submit">Ajukan {{ strtoupper($jenis) }}</button>
                <button type="submit" name="action" value="draft" class="button-draft">Simpan sebagai Draft</button>
            </form>
    
            <a href="{{ route('mahasiswa.dashboard') }}" class="back-link">Kembali ke Dashboard</a>
        </div>
    
    </body>
    </html>
    ----------------------------------------------
    // FILE: resources/views/mahasiswa/pengajuan/index.blade.php
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Daftar Pengajuan Saya</title>
    </head>
    <body>
    
        <h2>Daftar Pengajuan Sidang Saya</h2>
    
        @if (session('success'))
            <div style="color: green;">
                {{ session('success') }}
            </div>
        @endif
    
        @if (session('error'))
            <div style="color: red;">
                {{ session('error' )}}
            </div>
        @endif
    
        @if ($pengajuans->count() > 0)
            <table>
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Jenis Pengajuan</th>
                        <th>Status</th>
                        <th>Tanggal Pengajuan</th>
                        <th>Aksi</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach ($pengajuans as $pengajuan)
                        <tr>
                            <td>{{ $pengajuan->id }}</td>
                            <td>{{ ucfirst($pengajuan->jenis_pengajuan) }}</td>
                            <td>{{ str_replace('_', ' ', strtoupper($pengajuan->status)) }}</td>
                            <td>{{ $pengajuan->created_at->format('d M Y H:i') }}</td>
                            <td>
                                <a href="{{ route('mahasiswa.pengajuan.show', $pengajuan->id) }}">Lihat Detail</a>
    
                                {{-- Tambahkan logika untuk status lain di sini --}}
                                @if ($pengajuan->status === 'draft')
                                    <a href="{{ route('mahasiswa.pengajuan.edit', $pengajuan->id) }}">Edit</a>
                                    <form action="{{ route('mahasiswa.pengajuan.destroy', $pengajuan->id) }}" method="POST" style="display:inline-block;">
                                        @csrf
                                        @method('DELETE')
                                        <button type="submit" onclick="return confirm('Apakah Anda yakin ingin menghapus pengajuan ini?')" class="btn btn-danger btn-sm">Hapus</button>
                                    </form>
                                @elseif ($pengajuan->status === 'dosen_ditunjuk')
                                    {{-- Mahasiswa bisa melihat bahwa dosen sudah ditunjuk --}}
                                    <span style="color: blue;">(Dosen Ditunjuk)</span>
                                    {{-- Mungkin ada link ke jadwal sidang jika sudah tersedia --}}
                                    {{-- <a href="{{ route('mahasiswa.sidang.jadwal', $pengajuan->id) }}">Lihat Jadwal Sidang</a> --}}
                                @elseif ($pengajuan->status === 'ditolak_admin' || $pengajuan->status === 'ditolak_kaprodi')
                                    {{-- Jika ditolak, mungkin ada opsi untuk mengajukan ulang atau mengedit --}}
                                    <span style="color: orange;">(Ditolak)</span>
                                    <a href="{{ route('mahasiswa.pengajuan.edit', $pengajuan->id) }}">Ajukan Ulang</a>
                                @else
                                    {{-- Status lainnya yang hanya untuk dilihat --}}
                                    <span style="color: gray;">(Menunggu Proses)</span>
                                @endif
                            </td>
                        </tr>
                    @endforeach
                </tbody>
            </table>
        @else
            <p>Anda belum memiliki pengajuan. Silakan buat pengajuan baru.</p>
        @endif
        <br>
        <a href="{{ route('mahasiswa.dashboard') }}">Kembali ke Dashboard</a>
        @if ($pengajuans->count() == 0) {{-- Perubahan di sini --}}
            <a href="{{ route('mahasiswa.pengajuan.pilih') }}">Buat Pengajuan Baru</a>
        @endif
    
    </body>
    </html>
    ----------------------------------------------
    // FILE: resources/views/mahasiswa/pengajuan/pilih-jenis.blade.php
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Pilih Jenis Pengajuan</title>
        <style>
            body { font-family: sans-serif; margin: 20px; text-align: center; background-color: #f4f4f4;}
            .container { max-width: 600px; margin: auto; padding: 25px; border: 1px solid #ddd; border-radius: 8px; background-color: #fff; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
            h2 { color: #333; margin-bottom: 25px; }
            .options a { display: inline-block; margin: 15px; padding: 18px 30px; background-color: #007bff; color: white; text-decoration: none; border-radius: 5px; font-size: 18px; transition: background-color 0.3s ease; }
            .options a:hover { background-color: #0056b3; }
            .back-link { display: block; text-align: center; margin-top: 30px; color: #007bff; text-decoration: none; font-size: 16px; }
            .back-link:hover { text-decoration: underline; }
        </style>
    </head>
    <body>
        <div class="container">
            <h2>Pilih Jenis Pengajuan</h2>
            <div class="options">
                <a href="{{ route('mahasiswa.pengajuan.create', 'ta') }}">Pengajuan Tugas Akhir</a>
                <a href="{{ route('mahasiswa.pengajuan.create', 'pkl') }}">Pengajuan Praktek Kerja Lapangan</a>
            </div>
            <a href="{{ route('mahasiswa.dashboard') }}" class="back-link">Kembali ke Dashboard</a>
        </div>
    </body>
    </html>
    ----------------------------------------------
    // FILE: resources/views/mahasiswa/pengajuan/show.blade.php
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Detail Pengajuan Sidang {{ strtoupper($pengajuan->jenis_pengajuan) }}</title> {{-- Tambahkan jenis pengajuan di title --}}
    </head>
    <body>
    
        <h2>Detail Pengajuan Sidang {{ strtoupper($pengajuan->jenis_pengajuan) }}</h2> {{-- Tambahkan jenis pengajuan di H2 --}}
    
        {{-- Pesan sukses/error dari session --}}
        @if (session('success'))
            <div style="color: green; margin-bottom: 10px;">
                {{ session('success') }}
            </div>
        @endif
    
        @if (session('error'))
            <div style="color: red; margin-bottom: 10px;">
                {{ session('error') }}
            </div>
        @endif
    
        <p>Jenis Pengajuan: <strong>{{ strtoupper($pengajuan->jenis_pengajuan) }}</strong></p>
        <p>Status:
            {{-- Tampilan status yang lebih informatif dengan warna --}}
            @if ($pengajuan->status === 'draft')
                <strong style="color: orange;">DRAFT</strong>
            @elseif ($pengajuan->status === 'diajukan')
                <strong style="color: blue;">DIAJUKAN</strong>
            @elseif ($pengajuan->status === 'diproses')
                <strong style="color: green;">DIPROSES</strong>
            @elseif ($pengajuan->status === 'disetujui')
                <strong style="color: purple;">DISETUJUI</strong>
            @elseif ($pengajuan->status === 'ditolak')
                <strong style="color: red;">DITOLAK</strong>
            @elseif ($pengajuan->status === 'selesai')
                <strong style="color: green;">SELESAI</strong>
            @elseif ($pengajuan->status === 'sidang_dijadwalkan_final') {{-- Tambahkan status ini --}}
                <strong style="color: darkgreen;">SIDANG DIJADWALKAN FINAL</strong>
            @else
                <strong>{{ strtoupper($pengajuan->status) }}</strong> {{-- Default jika ada status lain --}}
            @endif
        </p>
        <p>Tanggal Dibuat: {{ $pengajuan->created_at->format('d M Y H:i') }}</p>
        <p>Terakhir Diperbarui: {{ $pengajuan->updated_at->format('d M Y H:i') }}</p>
    
        {{-- Bagian informasi jadwal sidang --}}
        <h3>Informasi Jadwal Sidang</h3>
        @if ($pengajuan->sidang && $pengajuan->sidang->tanggal_waktu_sidang && $pengajuan->sidang->ruangan_sidang)
            <p>Tanggal Sidang: <strong>{{ \Carbon\Carbon::parse($pengajuan->sidang->tanggal_waktu_sidang)->format('d F Y') }}</strong></p>
            <p>Waktu Sidang: <strong>{{ \Carbon\Carbon::parse($pengajuan->sidang->tanggal_waktu_sidang)->format('H:i') }} WIB</strong></p>
            <p>Ruangan Sidang: <strong>{{ $pengajuan->sidang->ruangan_sidang }}</strong></p>
        @else
            <p>Jadwal sidang belum ditetapkan.</p>
        @endif
        
        <h3>Dokumen Terupload:</h3>
        {{-- Ganti $dokumenTerupload dengan $pengajuan->dokumens --}}
        @if ($pengajuan->dokumens->count() > 0)
            <ul>
                @foreach ($pengajuan->dokumens as $dokumen) {{-- Ganti $dokumenTerupload dengan $pengajuan->dokumens --}}
                    <li>
                        {{ $dokumen->nama_file }}:
                        <a href="{{ asset('storage/' . $dokumen->path_file) }}" target="_blank">Lihat File</a>
                        {{-- Status dokumen individual (jika diperlukan) --}}
                        {{-- (Status: {{ $dokumen->status }}) --}}
                    </li>
                @endforeach
            </ul>
        @else
            <p>Belum ada dokumen yang diunggah untuk pengajuan ini.</p>
        @endif
    
        <h3>Informasi Anggota Sidang</h3>
        @if ($pengajuan->sidang)
            <p><strong>Ketua Sidang:</strong> {{ $pengajuan->sidang->ketuaSidang->nama ?? 'Belum Ditunjuk' }}</p>
            <p><strong>Sekretaris Sidang:</strong> {{ $pengajuan->sidang->sekretarisSidang->nama ?? 'Belum Ditunjuk' }}</p>
            <p><strong>Anggota Sidang 1:</strong> {{ $pengajuan->sidang->anggota1Sidang->nama ?? 'Belum Ditunjuk' }}</p>
            <p><strong>Anggota Sidang 2:</strong> {{ $pengajuan->sidang->anggota2Sidang->nama ?? 'Belum Ditunjuk' }}</p>
        @else
            <p>Anggota sidang belum ditunjuk.</p>
        @endif
    
        <hr> {{-- Garis pemisah untuk aksi --}}
    
        {{-- Tombol Aksi --}}
        <a href="{{ route('mahasiswa.pengajuan.index') }}">Kembali ke Daftar Pengajuan</a>
    
        @if ($pengajuan->status === 'draft')
            <a href="{{ route('mahasiswa.pengajuan.edit', $pengajuan->id) }}" style="margin-left: 10px;">Edit Pengajuan Draft</a>
        @endif
    
        {{-- Tombol Hapus hanya jika statusnya BUKAN 'disetujui', 'diproses', atau 'selesai' --}}
        @if ($pengajuan->status !== 'disetujui' && $pengajuan->status !== 'diproses' && $pengajuan->status !== 'selesai' && $pengajuan->status !== 'sidang_dijadwalkan_final') {{-- Tambahkan status ini --}}
            <form action="{{ route('mahasiswa.pengajuan.destroy', $pengajuan->id) }}" method="POST" style="display:inline; margin-left: 10px;">
                @csrf
                @method('DELETE')
                <button type="submit" onclick="return confirm('Apakah Anda yakin ingin menghapus pengajuan ini dan semua dokumennya? Aksi ini tidak bisa dibatalkan.');" style="background-color: red; color: white; border: none; padding: 5px 10px; cursor: pointer; border-radius: 3px;">Hapus Pengajuan</button>
            </form>
        @endif
    
        <br><br>
        <a href="{{ route('mahasiswa.dashboard') }}">Kembali ke Dashboard Utama</a>
    
    </body>
    </html>
    ----------------------------------------------
}

routes{
    // FILE: routes/console.php
    <?php
    
    use Illuminate\Foundation\Inspiring;
    use Illuminate\Support\Facades\Artisan;
    
    Artisan::command('inspire', function () {
        $this->comment(Inspiring::quote());
    })->purpose('Display an inspiring quote');
    ----------------------------------------------
    // FILE: routes/web.php
    <?php
    
    use App\Http\Controllers\AdminController;
    use App\Http\Controllers\MahasiswaController;
    use App\Http\Controllers\DosenController;
    use App\Http\Controllers\KaprodiController;
    use App\Http\Controllers\DokumenController;
    use App\Http\Controllers\AuthController;
    use App\Http\Controllers\KajurController;
    use App\Http\Controllers\PengajuanController;
    use Illuminate\Support\Facades\Route;
    use Illuminate\Http\Request;
    
    use App\Http\Controllers\Kaprodi\PengajuanKaprodiController;
    use App\Http\Controllers\Admin\PengajuanAdminController;
    
    // Middleware aliases (you can define these in your RouteServiceProvider or directly here)
    Route::aliasMiddleware('admin', \App\Http\Middleware\AdminMiddleware::class);
    Route::aliasMiddleware('mahasiswa', \App\Http\Middleware\MahasiswaMiddleware::class);
    Route::aliasMiddleware('dosen', \App\Http\Middleware\DosenMiddleware::class);
    Route::aliasMiddleware('kaprodi', \App\Http\Middleware\KaprodiMiddleware::class);
    Route::aliasMiddleware('kajur', \App\Http\Middleware\KajurMiddleware::class);
    
    // Rute Default
    Route::get('/', function () {
        return view('welcome2');
    });
    
    // Admin Routes
    Route::prefix('admin')->group(function () {
        // Public routes (no middleware)
        Route::get('/login', [AdminController::class, 'loginForm'])->name('admin.login');
        Route::post('/login', [AdminController::class, 'login']);
        Route::post('/logout', [AdminController::class, 'logout'])->name('admin.logout');
        
        // Protected routes
        Route::middleware(['auth', 'admin'])->group(function () {
            Route::get('/dashboard', [AdminController::class, 'dashboard'])->name('admin.dashboard');
            
            // Mahasiswa Management
            Route::get('/mahasiswa', [AdminController::class, 'daftarMahasiswa'])->name('admin.mahasiswa.index');
            Route::get('/mahasiswa/create', [AdminController::class, 'createMahasiswa'])->name('admin.mahasiswa.create');
            Route::get('/mahasiswa/{mahasiswa}', [AdminController::class, 'detailMahasiswa'])->name('admin.mahasiswa.show');
            Route::post('/mahasiswa', [AdminController::class, 'storeMahasiswa'])->name('admin.mahasiswa.store');
            Route::get('/mahasiswa/{mahasiswa}/edit', [AdminController::class, 'editMahasiswa'])->name('admin.mahasiswa.edit');
            Route::put('/mahasiswa/{mahasiswa}', [AdminController::class, 'updateMahasiswa'])->name('admin.mahasiswa.update');
            Route::delete('/mahasiswa/{mahasiswa}', [AdminController::class, 'destroyMahasiswa'])->name('admin.mahasiswa.destroy');
            
            // Mahasiswa Import/Export
            Route::get('/mahasiswa/import', [MahasiswaController::class, 'importForm'])->name('admin.mahasiswa.import.form');
            Route::post('/mahasiswa/import', [MahasiswaController::class, 'import'])->name('admin.mahasiswa.import');
            Route::get('/mahasiswas/export', [MahasiswaController::class, 'export'])->name('mahasiswas.export');
            
            // Dosen Management
            Route::get('/dosen', [AdminController::class, 'daftarDosen'])->name('admin.dosen.index');
            Route::get('/dosen/create', [AdminController::class, 'createDosen'])->name('admin.dosen.create');
            Route::post('/dosen', [AdminController::class, 'storeDosen'])->name('admin.dosen.store');
            Route::get('/dosen/{dosen}', [AdminController::class, 'detailDosen'])->name('admin.dosen.show');
            Route::get('/dosen/{dosen}/edit', [AdminController::class, 'editDosen'])->name('admin.dosen.edit');
            Route::put('/dosen/{dosen}', [AdminController::class, 'updateDosen'])->name('admin.dosen.update');
            Route::delete('/dosen/{dosen}', [AdminController::class, 'destroyDosen'])->name('admin.dosen.destroy');
            
            // Dosen Import/Export
            Route::get('/dosen/import', [DosenController::class, 'importForm'])->name('admin.dosen.import.form');
            Route::post('/dosen/import', [DosenController::class, 'import'])->name('admin.dosen.import');
            Route::get('/dosen/export', [AdminController::class, 'exportDosen'])->name('admin.dosen.export');
            
            // Pengajuan Management
            Route::get('/pengajuan', [AdminController::class, 'daftarPengajuan'])->name('admin.pengajuan.index');
            Route::get('/pengajuan/{pengajuan}', [AdminController::class, 'detailPengajuan'])->name('admin.pengajuan.show');
            Route::put('/pengajuan/{pengajuan}/setujui', [AdminController::class, 'setujuiPengajuan'])->name('admin.pengajuan.setujui');
            Route::put('/pengajuan/{pengajuan}/tolak', [AdminController::class, 'tolakPengajuan'])->name('admin.pengajuan.tolak');
            
            // Sidang Management
            Route::get('/sidang', [AdminController::class, 'daftarSidang'])->name('admin.sidang.index');
            Route::get('/sidang/kalender', [AdminController::class, 'kalenderSidang'])->name('admin.sidang.kalender');
            Route::get('/sidang/{sidang}', [AdminController::class, 'detailSidang'])->name('admin.sidang.show');
            Route::get('/sidang/export', [AdminController::class, 'exportSidang'])->name('admin.sidang.export');
            
            // Activities Log
            Route::get('/activities', [AdminController::class, 'showActivities'])->name('admin.activities.index');
        });
    });
    
    // Admin Pengajuan Verification Routes
    Route::prefix('admin/pengajuan-verifikasi')->name('admin.pengajuan.verifikasi.')
        ->middleware(['auth', 'admin'])->group(function () {
            Route::get('/', [PengajuanAdminController::class, 'index'])->name('index');
            Route::get('/{pengajuan}', [PengajuanAdminController::class, 'show'])->name('show');
            // Ubah dari Route::post menjadi Route::put
            Route::put('/{pengajuan}/verify', [PengajuanAdminController::class, 'verify'])->name('verify');
            // Ubah dari Route::post menjadi Route::put
            Route::put('/{pengajuan}/reject', [PengajuanAdminController::class, 'reject'])->name('reject');
        });
    
    // Mahasiswa Routes
    Route::prefix('mahasiswa')->group(function () {
        // Public routes
        Route::get('/login', [MahasiswaController::class, 'loginForm'])->name('mahasiswa.login');
        Route::post('/login', [MahasiswaController::class, 'login']);
        Route::post('/logout', [MahasiswaController::class, 'logout'])->name('mahasiswa.logout');
    
        // Protected routes
        Route::middleware(['auth', 'mahasiswa'])->group(function () {
            Route::get('/dashboard', [MahasiswaController::class, 'dashboard'])->name('mahasiswa.dashboard');
    
            // Pengajuan routes
            Route::prefix('pengajuan')->name('mahasiswa.pengajuan.')->group(function () {
                Route::get('/pilih', [PengajuanController::class, 'pilihJenis'])->name('pilih');
                Route::get('/buat/{jenis}', [PengajuanController::class, 'create'])->name('create'); // Rute baru untuk membuat TA/PKL
                Route::post('/', [PengajuanController::class, 'store'])->name('store');
                Route::delete('/{pengajuan}', [PengajuanController::class, 'destroy'])->name('destroy');
                Route::get('/', [PengajuanController::class, 'index'])->name('index');
                Route::get('/{pengajuan}', [PengajuanController::class, 'show'])->name('show');
                Route::put('/{pengajuan}/draft', [PengajuanController::class, 'simpanSebagaiDraft'])->name('draft');
                Route::get('/{pengajuan}/edit', [PengajuanController::class, 'edit'])->name('edit');
                Route::put('/{pengajuan}', [PengajuanController::class, 'update'])->name('update');
            });
    
            // Dokumen routes (jika masih diperlukan, ini hanya untuk melihat daftar dokumen)
            Route::prefix('dokumen')->name('mahasiswa.dokumen.')->group(function () {
                Route::get('/pengajuan/{pengajuan}', [DokumenController::class, 'index'])->name('index');
                // Jika Anda memutuskan untuk memungkinkan penghapusan dokumen individual, tambahkan rute ini:
                Route::delete('/{dokumen}', [DokumenController::class, 'destroy'])->name('destroy');
            });
        });
    });
    
    // Dosen Routes
    Route::post('/dosen/notifications/{notification}/mark-as-read', function (\Illuminate\Notifications\DatabaseNotification $notification) {
        $notification->markAsRead();
        return back()->with('success', 'Notifikasi ditandai sudah dibaca.');
    })->name('dosen.notifications.markAsRead')->middleware(['auth', 'dosen']);
    Route::prefix('dosen')->group(function () {
        // Public routes
        Route::get('/login', [DosenController::class, 'loginForm'])->name('dosen.login');
        Route::post('/login', [DosenController::class, 'login']);
        Route::post('/logout', [DosenController::class, 'logout'])->name('dosen.logout');
        
        // Protected routes
        Route::middleware(['auth', 'dosen'])->group(function () {
            Route::get('/dashboard', [DosenController::class, 'dashboard'])->name('dosen.dashboard');
            Route::get('/pengajuan-saya', [DosenController::class, 'pengajuanSaya'])->name('dosen.pengajuan.saya');
            
            // Pengajuan routes
            Route::get('/pengajuan', [DosenController::class, 'daftarPengajuan'])->name('dosen.pengajuan.index');
            Route::get('/pengajuan/{pengajuan}', [DosenController::class, 'detailPengajuan'])->name('dosen.pengajuan.show');
            
            // Dokumen validation
            Route::put('/dokumen/{dokumen}/setujui', [DosenController::class, 'setujuiDokumen'])->name('dosen.dokumen.setujui');
            Route::put('/dokumen/{dokumen}/tolak', [DosenController::class, 'tolakDokumen'])->name('dosen.dokumen.tolak');
            
            // Jadwal sidang
            Route::get('/pengajuan/{pengajuan}/jadwal', [DosenController::class, 'formJadwalSidang'])->name('dosen.jadwal.create');
            Route::post('/pengajuan/{pengajuan}/jadwal', [DosenController::class, 'simpanJadwalSidang'])->name('dosen.jadwal.store');
            Route::get('/jadwal/{sidang}', [DosenController::class, 'detailJadwalSidang'])->name('dosen.jadwal.show');
            
            // Sidang routes
            Route::get('/sidang/{sidang}/laporan', [DosenController::class, 'unduhLaporan'])->name('dosen.sidang.laporan');
            Route::get('/sidang/{sidang}/nilai', [DosenController::class, 'formNilaiSidang'])->name('dosen.sidang.nilai.edit');
            Route::post('/sidang/{sidang}/nilai', [DosenController::class, 'simpanNilaiSidang'])->name('dosen.sidang.nilai.store');
    
            // === Tambahkan ini di sini ===
            Route::prefix('sidang')->name('dosen.sidang.')->group(function () {
                Route::get('/{sidang}/respon', [DosenController::class, 'formResponSidang'])->name('respon.form'); // Form respon dosen
                Route::post('/{sidang}/respon', [DosenController::class, 'submitResponSidang'])->name('respon.submit'); // Submit respon dosen
            });
            
            // Import routes
            Route::get('/import/form', [DosenController::class, 'importForm'])->name('dosen.import.form');
            Route::post('/import', [DosenController::class, 'import'])->name('dosen.import');
        });
    });
    
    // Kaprodi Routes
    Route::prefix('kaprodi')->group(function () {
        // Public routes (Login/Logout Kaprodi)
        Route::get('/login', [KaprodiController::class, 'loginForm'])->name('kaprodi.login');
        Route::post('/login', [KaprodiController::class, 'login']);
        Route::post('/logout', [KaprodiController::class, 'logout'])->name('kaprodi.logout');
        
        // Protected routes for Kaprodi dashboard and general lists
        Route::middleware(['auth', 'kaprodi'])->group(function () {
            Route::get('/dashboard', [KaprodiController::class, 'dashboard'])->name('kaprodi.dashboard');
            Route::get('/dosen', [KaprodiController::class, 'daftarDosen'])->name('kaprodi.dosen.index');
    
             // Pengajuan-related routes under KaprodiController
             Route::prefix('pengajuan')->name('kaprodi.pengajuan.')->group(function () {
                Route::get('/', [KaprodiController::class, 'indexPengajuan'])->name('index'); // Daftar pengajuan untuk Kaprodi
                Route::get('/{pengajuan}', [KaprodiController::class, 'showPengajuan'])->name('show'); // Detail pengajuan
                Route::get('/{pengajuan}/aksi', [KaprodiController::class, 'showAksiKaprodi'])->name('aksi');
    
                // Rute untuk menjadwalkan/mengedit jadwal sidang
                // GET untuk menampilkan form penjadwalan (ini tidak diperlukan jika form langsung di show)
                // Namun, jika ada halaman terpisah untuk jadwal, ini diperlukan.
                // Jika form langsung di show, maka showPengajuan akan menyediakan data yang sama.
                // Route::get('/{pengajuan}/jadwalkan', [KaprodiController::class, 'jadwalkanSidangForm'])->name('jadwalkan.form'); // MUNGKIN TIDAK PERLU lagi
    
                Route::put('/{pengajuan}/jadwalkan', [KaprodiController::class, 'storeUpdateJadwalSidang'])->name('jadwalkan.storeUpdate'); // Menyimpan/memperbarui jadwal
    
                // Rute untuk penolakan pengajuan oleh Kaprodi
                Route::post('/{pengajuan}/tolak-pengajuan', [KaprodiController::class, 'tolakPengajuan'])->name('tolak.pengajuan');
    
                // Rute untuk finalisasi jadwal sidang setelah dosen setuju
                Route::post('/{pengajuan}/finalkan-jadwal', [KaprodiController::class, 'finalkanJadwal'])->name('finalkan.jadwal');
            });
    
            // Dosen Persetujuan Sidang Routes (ini untuk dosen merespon undangan sidang)
            //Route::prefix('persetujuan-sidang')->name('kaprodi.persetujuan-sidang.')->group(function () {
                // Ini seharusnya ada di route khusus dosen atau punya controller tersendiri untuk dosen
                // Untuk sementara, kita letakkan di sini sebagai placeholder, nanti bisa dipindahkan.
                //Route::get('/{sidang}/respon', [DosenController::class, 'formResponSidang'])->name('respon.form'); // Form respon dosen
                //Route::post('/{sidang}/respon', [DosenController::class, 'submitResponSidang'])->name('respon.submit'); // Submit respon dosen
            //});
        });
    });
    
    
    // Kajur Routes
    Route::prefix('kajur')->group(function () {
        // Public routes
        Route::get('/login', [KajurController::class, 'loginForm'])->name('kajur.login');
        Route::post('/login', [KajurController::class, 'login']);
        Route::post('/logout', [KajurController::class, 'logout'])->name('kajur.logout');
    
        // Protected routes
        Route::middleware(['auth', 'kajur'])->group(function () {
            // Dashboard
            Route::get('/dashboard', [KajurController::class, 'index'])->name('kajur.dashboard');
    
            // Rute untuk daftar pengajuan
            Route::get('/pengajuan/perlu-verifikasi', [KajurController::class, 'daftarPengajuanVerifikasi'])->name('kajur.pengajuan.perlu_verifikasi');
            Route::get('/pengajuan/sudah-verifikasi', [KajurController::class, 'daftarPengajuanTerverifikasi'])->name('kajur.pengajuan.sudah_verifikasi');
    
            // Rute untuk Verifikasi Pengajuan
            // Gunakan satu set rute saja untuk verifikasi, yang dengan '/form' lebih jelas
            Route::get('/pengajuan/{pengajuan}/verifikasi/form', [KajurController::class, 'showVerifikasiForm'])->name('kajur.verifikasi.form');
            Route::post('/pengajuan/{pengajuan}/verifikasi', [KajurController::class, 'verifikasiPengajuan'])->name('kajur.verifikasi.store');
    
            // Rute untuk daftar sidang
            Route::get('/sidang/sedang', [KajurController::class, 'daftarSidangSedang'])->name('kajur.sidang.sedang');
            Route::get('/sidang/telah', [KajurController::class, 'daftarSidangTelah'])->name('kajur.sidang.telah');
            Route::get('/sidang/akan', [KajurController::class, 'daftarSidangAkan'])->name('kajur.sidang.akan');
            Route::get('/sidang/{sidang}', [KajurController::class, 'detailSidang'])->name('kajur.sidang.show');
        });
    });
    ----------------------------------------------
}

